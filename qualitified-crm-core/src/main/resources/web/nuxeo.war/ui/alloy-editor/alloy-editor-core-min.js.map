{"version":3,"sources":["webpack://AlloyEditor/webpack/bootstrap","webpack://AlloyEditor/external {\"amd\":\"react\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"root\":\"React\",\"umd\":\"react\"}","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-icon.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/adapter/editor-context.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/base/button-command.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/base/button-state-classes.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/oop/lang.js","webpack://AlloyEditor/external {\"amd\":\"react-dom\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"root\":\"ReactDOM\",\"umd\":\"react-dom\"}","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/base/button-style.js","webpack://AlloyEditor/./node_modules/prop-types/index.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/base/button-command-active.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/base/widget-focus-manager.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/base/button-keystroke.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-dropdown.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-commands-list.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/base/button-action-style.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-styles-list.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/base/widget-dropdown.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/base/widget-exclusive.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-link-edit.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/base/button-props.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/base/toolbar-buttons.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/oop/oop.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/selections/selection-test.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-styles-list-header.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-styles-list-item-remove.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-styles-list-item.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-camera-image.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-command-list-item.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-embed-edit.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-embed-video-edit.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-link-autocomplete-list.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-link-edit-browse.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-link-target-edit.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-target-list.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-link.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-table-edit.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/widget-interaction-point.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/oop/attribute.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/selections/selection-arrowbox.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/selections/selection-position.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/selections/selections.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/index.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/adapter/main.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/base/index.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/index.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-accessibility-image-alt.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-background-color.jsx","webpack://AlloyEditor/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://AlloyEditor/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-bold.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-camera.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-code.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-color.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-embed-video.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-embed.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-h1.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-h2.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-hline.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-image-align-center.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-image-align-left.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-image-align-right.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-image.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-indent-block.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-italic.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-item-selector-audio.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-item-selector-image.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-item-selector-video.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-link-browse.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-ol.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-outdent-block.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-paragraph-align-left.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-paragraph-align-right.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-paragraph-align.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-paragraph-center.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-paragraph-justify.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-quote.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-remove-format.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-remove-image.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-separator.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-spacing.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-strike.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-styles.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-subscript.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-superscript.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-table-cell.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-table-column.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-table-heading.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-table-remove.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-table-row.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-table.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-twitter.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-ul.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/buttons/button-underline.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/index.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/button-action-style.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/button-command-active.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/button-command.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/button-keystroke.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/button-props.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/button-state-classes.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/button-style.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/toolbar-buttons.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/widget-arrow-box.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/widget-dropdown.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/widget-exclusive.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/widget-focus-manager.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/compat/widget-position.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/toolbars/index.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/toolbars/toolbar-add.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/toolbars/toolbar-styles.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/adapter/core.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/core/index.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/core/debounce.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/core/link.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/core/plugins.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/core/selection-region.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/core/table.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/core/tools.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/core/uicore.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/addimages.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/autolink.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/autolist.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/dragresize.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/dragresize_ie11.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/embed.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/priorities.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/embedurl.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/Resizer.es.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/DragEvent.es.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/imagealignment.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/pasteimages.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/placeholder.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/selectionkeystrokes.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/tableresize.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/plugins/tabletools.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/uibridge/index.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/uibridge/button.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/uibridge/menu-button.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/uibridge/menu.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/uibridge/panel-menu-button.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/uibridge/richcombo.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/uibridge/uibridge.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/commands/index.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/commands/remove-image.js","webpack://AlloyEditor/./scripts/build/gulp/../../../src/components/main.jsx","webpack://AlloyEditor/./scripts/build/gulp/../../../src/oop/base.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","undefined","ButtonIcon","className","symbol","Consumer","editor","nativeEditor","spritemap","config","path","classNamePrefix","combinedClassName","height","width","href","EditorContext","React","createContext","toProps","Component","forwardingComponent","forwardRef","props","ref","context","WrappedComponent","execCommand","data","command","fire","contextType","stateClasses","Lang","isFunction","this","isActive","isArray","toString","isBoolean","isNull","isNumber","isFinite","isObject","valueType","isString","mix","receiver","supplier","toInt","parseInt","style","parts","split","currentMember","shift","_style","CKEDITOR","elementPath","getStyle","checkActive","getCommand","state","TRISTATE_ON","DIRECTION_NONE","DIRECTION_NEXT","DIRECTION_PREV","ACTION_NONE","ACTION_MOVE_FOCUS","ACTION_DISMISS_FOCUS","focus","event","_isValidTarget","target","_descendants","length","activeDescendantEl","_activeDescendant","document","activeElement","focusFirstChild","indexOf","stopPropagation","preventDefault","handleKey","action","_getFocusAction","type","_moveFocus","direction","onDismiss","_refresh","keys","_getFocusMoveDirection","dismissAction","_getFocusDismissAction","dismiss","focusMoveDirection","_isValidKey","keyCode","dismissNext","dismissPrev","circular","next","prev","shifKey","element","tagName","toLowerCase","numDescendants","descendant","setAttribute","Math","max","min","domNode","ReactDOM","findDOMNode","descendants","querySelectorAll","priorityDescendants","Array","slice","forEach","item","dataTabIndex","getAttribute","push","sort","a","b","concat","some","index","keystroke","commandName","exec","keystrokeFn","fn","addCommand","_defaultKeystrokeCommand","keystrokeHandler","keystrokes","setKeystroke","ButtonDropdown","onFocus","onKeyDown","tabIndex","role","children","defaultProps","ButtonCommandsList","_ref","createRef","current","id","listId","_renderActions","commands","items","map","description","label","icon","applyStyle","getSelection","lock","removeStyle","unlock","ButtonStylesList","blockStyles","inlineStyles","objectStyles","styles","STYLE_BLOCK","STYLE_INLINE","STYLE_OBJECT","_blockStyles","_inlineStyles","_objectStyles","removeStylesItem","showRemoveStylesItem","toggleDropdown","AlloyEditor","Strings","_renderStylesItems","activeStyle","styleFn","mergeDropdownProps","obj","itemKey","tools","merge","expanded","itemDropdown","dropdownTrigger","toggleDirection","setState","moveFocus","nextProps","requestExclusive","itemExclusive","filter","cancelExclusive","renderExclusive","ButtonLinkEdit","_clearLink","linkHref","_focusLinkInput","_handleKeyDown","_updateLink","autocompleteSelected","Link","advanceSelection","_handleLinkHrefChange","_handleLinkTargetChange","linkTarget","_removeLink","linkUtils","selection","bookmarks","createBookmarks","remove","advance","selectBookmarks","appendProtocol","linkAttrs","modifySelection","update","linkInput","_getInitialState","manualSelection","targetSelector","allowedTargets","handleLinkTargetChange","selectedTarget","linkTargetDefault","ButtonLinkTargetEdit","autocompleteDropdown","dataFn","autocompleteDropdownProps","handleLinkAutocompleteClick","_handleLinkAutocompleteClick","setAutocompleteState","_setAutocompleteState","term","ButtonLinkAutocompleteList","buttonClearLink","aria-label","clearInput","onClick","title","clear","placeholderProp","env","ie","placeholder","editLink","removeLink","disabled","showTargetSelector","onChange","confirm","_isValidState","defaultLinkTarget","link","getFromSelection","initialLink","instance","focusLinkEl","requestAnimationFrame","setTimeout","validState","selected","autocompleteUrl","customIndexStart","buttonCfg","_animationFrameId","cancelAnimationFrame","arrowBoxClasses","getInteractionPoint","SELECTION_TOP_TO_BOTTOM","attrs","viewPaneSize","dom","getViewPaneSize","x","left","y","top","eventPayload","editorEvent","selectionData","nativeEvent","pos","pageX","region","endRect","startRect","SELECTION_BOTTOM_TO_TOP","_getXPoint","_getYPoint","eventX","right","leftDist","abs","rightDist","elementTarget","$","offsetTop","offsetHeight","bottom","gutter","offsetWidth","SELECTION_LEFT_TO_RIGHT","SELECTION_RIGHT_TO_LEFT","domElement","hasClass","startPoint","endPoint","setStyles","opacity","pointerEvents","removeClass","addClass","uiNode","scrollTop","isVisible","interactionPoint","finalX","finalY","initialX","initialY","parseFloat","constrainToViewport","res","getConstrainedPosition","moveToPoint","body","uiNodeStyle","getComputedStyle","uiNodeMarginLeft","getPropertyValue","uiNodeMarginRight","totalWidth","clientWidth","xy","getWidgetXYPoint","buttons","additionalProps","reduce","list","button","getToolbarButtons","buttonProps","toolbarButtons","filterExclusive","Buttons","cfg","mergeExclusiveProps","tabKey","trigger","createElement","extend","protoProps","staticProps","Error","supplierProto","receiverProto","constructor","superclass","_isRangeAtElementEnd","range","getText","endOffset","equals","startContainer","endContainer","startOffset","embedSelectionTest","payload","embedUrlSelectionTest","headingTextSelectionTest","headings","selectionEmpty","isSelectionEmpty","getCommonAncestor","isReadOnly","contains","linkSelectionTest","getRanges","elementIsNotImage","getName","imageSelectionTest","hasImage","findOne","isImage","textSelectionTest","tableSelectionTest","table","Table","isEditable","SelectionTest","embed","embedUrl","header","image","text","ButtonsStylesListHeader","ButtonStylesListItemRemove","_removeStyles","removeBlocks","blockItem","blockStyle","normal","ButtonStylesListItem","_onClick","styleCfg","margin","_preview","buildPreview","dangerouslySetInnerHTML","__html","ButtonCameraImage","takePhoto","videoEl","_videoContainerRef","canvasEl","_canvasContainerRef","getContext","_videoHeight","videoWidth","drawImage","imgURL","toDataURL","el","createFromHtml","insertElement","_handleStreamError","error","alert","_handleStreamSuccess","stream","addEventListener","videoHeight","isNaN","_stream","navigator","mozGetUserMedia","mozSrcObject","srcObject","play","_buttonTakePhotoRef","stop","getVideoTracks","track","getUserMedia","webkitGetUserMedia","msGetUserMedia","video","audio","ButtonCommandListItem","_getClassName","KEY_ENTER","KEY_ESC","ButtonEmbedEdit","_embedLink","url","_removeEmbed","embedWrapper","getAscendant","getInitialState","selectedElement","getSelectedElement","clearLinkStyle","deleteEmbed","data-type","ButtonEmbedVideoEdit","_embedVideoURL","videoURL","_focusVideoUrlInput","refs","_handleVideoURLChange","newState","all","new","old","initialEmbed","inputPlaceholder","pasteVideoLink","clearVideoURLStyle","clearTimeout","_timeout","_updateItems","delay","_renderAutocompleteItems","nextState","data-value","promise","Promise","resolve","then","ButtonLinkEditBrowse","_browseClick","documentBrowseLinkUrl","browseLinkCallback","documentBrowseLinkCallback","linkEditButtonRef","changeLinkCallback","selectedItem","apply","linkTitle","plugins","creole","location","origin","allowedLinkTargets","aria-expanded","ButtonTargetList","listTargets","_renderListTargets","linkTargetSelf","linkTargetBlank","linkTargetParent","linkTargetTop","targets","_getAllowedTargetItems","ButtonLink","_requestExclusive","cssClass","getStateClasses","mergeButtonCfgProps","CTRL","INPUT_NAMES","COLS","ROWS","MINIMUM_GRID_VALUE","ButtonTableEdit","_createTable","tableUtils","cols","rows","tableAttributes","_handleChange","inputName","rowsRef","colsRef","time","Date","now","rowsId","colsId","htmlFor","columns","border","cellPadding","cellSpacing","WidgetInteractionPoint","propTypes","PropTypes","Attribute","__config__","__ATTRS__","attr","currentAttr","ATTRS","_isInitialized","_init","curValue","_callStringOrFunction","set","readOnly","writeOnce","validator","setter","stringOrFunction","args","result","hasDefaultValue","hasPassedValueViaConfig","valueFn","tableSelectionGetArrowBoxClasses","SelectionGetArrowBoxClasses","DEFAULT_GUTTER","centerToolbar","toolbar","rect","toolbarNode","halfNodeWidth","scrollPosition","getScrollPosition","widgetXY","caretPosition","ranges","nodeType","Node","ELEMENT_NODE","getParent","startContainerClientRect","getClientRect","endPosition","imageSelectionSetPosition","tableSelectionSetPosition","SelectionSetPosition","Selections","test","setPosition","full","simple","getArrowBoxClasses","embedurl","Base","Compat","BRIDGE_BUTTONS","editable","node","srcNode","implementEventTarget","Core","getBasePath","ALLOYEDITOR_BASEPATH","scripts","getElementsByTagName","match","src","regexBasePath","loadLanguageResources","callback","once","_langResourceRequested","languages","userLanguage","language","lang","locale","scriptLoader","load","getUrl","loaded","resource","basePath","timestamp","charAt","on","implementOn","getButtons","acc","val","registerBridgeButton","buttonName","pluginName","OOP","Toolbars","default","ButtonAccessibilityImageAlt","ButtonBackgroundColor","ButtonBold","ButtonCamera","ButtonCode","ButtonColor","ButtonEmbed","ButtonEmbedVideo","ButtonH1","ButtonH2","ButtonHline","ButtonImageAlignCenter","ButtonImageAlignLeft","ButtonImageAlignRight","ButtonImage","ButtonIndentBlock","ButtonItalic","ButtonItemSelectorAudio","ButtonItemSelectorImage","ButtonItemSelectorVideo","ButtonLinkBrowse","ButtonOl","ButtonOutdentBlock","ButtonParagraphAlign","ButtonParagraphAlignLeft","ButtonParagraphAlignRight","ButtonParagraphCenter","ButtonParagraphJustify","ButtonQuote","ButtonRemoveFormat","ButtonRemoveImage","ButtonSeparator","ButtonSpacing","ButtonStrike","ButtonStylesListHeader","ButtonStyles","ButtonSubscript","ButtonSuperscript","ButtonTableCell","ButtonTableColumn","ButtonTableHeading","ButtonTableRemove","ButtonTableRow","ButtonTable","ButtonTwitter","ButtonUl","ButtonUnderline","getStartElement","_element","imageElement","imageAlt","_handleAltChange","_updateImageAlt","focusAltEl","refAltInput","_focusAltInput","activeColor","activeColorClass","colors","_getColors","itemStyle","attributes","class","styleClass","_checkActive","buttonStylesProps","styleConfig","_applyStyle","primary","success","danger","warning","info","bool","string","arrayOf","number","func","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","any","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","bold","aria-pressed","protocol","cameraDisabled","camera","code","dark","darkGray","secondary","light","lighter","white","SHIFT","h1","h2","horizontalrule","alignCenter","alignLeft","alignRight","handleClick","fileInput","click","_onInputChange","inputEl","files","reader","FileReader","file","onload","imageFiles","imageData","readAsDataURL","inputSyle","display","accept","indent","italic","_handleClick","ButtonOrderedList","numberedlist","outdent","buttonCommandsList","buttonCommandsListId","_getCommands","inlineIcons","activeCommand","alignment","pop","iconClassName","aria-owns","row","alignJustify","quote","removeformat","removeImage","_props","activeSpacing","spacings","_getSpacings","active","lastElement","strike","_getStyles","buttonStylesList","formatted","cite","subscript","superscript","cell","cellInsertBefore","cellInsertAfter","cellDelete","cellMerge","cellMergeDown","cellMergeRight","cellSplitHorizontal","cellSplitVertical","column","columnInsertBefore","columnInsertAfter","columnDelete","activeHeading","getHeading","activeHeadingIntro","headers","activeHeadingLabel","headersNone","headersRow","headersColumn","headersBoth","_removeTable","deleteTable","rowInsertBefore","rowInsertAfter","rowDelete","MAX_TWEET_LENGTH","_getHref","twitter","selectedText","getSelectedText","substring","via","twitterHref","ButtonUnorderedlist","bulletedlist","underline","ButtonActionStyle","ButtonCommandActive","ButtonCommand","modifiesSelection","selectionChange","ButtonKeystroke","componentWillMount","random","componentWillUnmount","ButtonProps","ButtonStateClasses","isDisabled","ButtonStyle","ToolbarButtons","getToolbarButtonGroups","WidgetArrowBox","WidgetDropdown","componentWillReceiveProps","_nextProps","WidgetExclusive","WidgetFocusManager","componentDidMount","componentDidUpdate","WidgetPosition","mixins","getDefaultProps","cancelAnimation","halfWidth","_animate","show","updatePosition","ToolbarAdd","ToolbarStyles","POSITION_LEFT","POSITION_RIGHT","_updatePosition","_prevProps","_prevState","isContentEditable","_getButtons","_getToolbarClassName","add","data-tabindex","clientRect","offsetLeft","position","gutterExclusive","floor","currentSelection","_getCurrentSelection","getArrowBoxClassesFn","_getSelectionFunction","cssClasses","buttonsGroup","selectionType","hasGroups","selectionFn","selectionFunction","selections","testFn","setPositionFn","EMBED_VIDEO_WIDTH","EMBED_VIDEO_HEIGHT","initializer","inline","allowedContent","toolbars","removePlugins","extraPlugins","embedProviders","placeholderClass","pasteFromWordRemoveStyles","pasteFromWordRemoveFontStyles","selectionKeystrokes","edge","plugin","replace","_addReadOnlyLinkClickListener","extraCommands","extraCommandKeys","_editor","_renderUI","destructor","_destroyed","_editorUIElement","unmountComponentAtNode","parentNode","removeChild","_clearSelections","destroy","isMSSelection","empty","getWindow","removeAllRanges","_defaultReadOnlyClickFn","mouseEvent","hasCtrlKey","ctrlKey","metaKey","shouldOpen","listenerData","ckElement","getTarget","_redirectLink","_getNativeEditor","open","editorUIElement","appendChild","callbackRef","_mainUI","render","Provider","eventsDelay","_toElement","getElementById","_validateAllowedContent","_validateToolbars","tpl","urlSchemes","enableContentEditable","removeImageCommand","debounce","timeout","debounceHandle","callFn","callArgs","callContext","detach","REGEX_BOOKMARK_SCHEME","REGEX_EMAIL_SCHEME","REGEX_URI_SCHEME","moveToElementEditEnd","nextNode","getNextEditableNode","whitespace","offset","setStart","setEnd","selectRanges","URI","collapsed","insertNode","selectNodeContents","_getCompleteURI","applyToRange","select","is","getChildren","count","getItem","shrink","SHRINK_TEXT","alwaysRemoveElement","selectElement","uri","setAttributes","removeAttrs","setAttrs","removeAttributes","wrapPluginLifecycle","methods","methodName","override","originalPluginMethod","phase","__processingPlugin__","filterUnwantedDependencies","requires","require","pluginsLoad","names","scope","SelectionRegion","createSelectionFromPoint","createSelectionFromRange","startX","startY","endX","endY","end","start","caretPositionFromPoint","offsetNode","createRange","caretRangeFromPoint","createTextRange","endRange","duplicate","setEndPoint","getCaretRegion","bookmarkNodeEl","startNode","scrollPos","getSelectionData","getNative","getSelectionRegion","getClientRectsRegion","getSelectionDirection","getType","SELECTION_NONE","nativeSelection","defaultRect","clientRects","Infinity","getClientRects","rangeCount","getRangeAt","anchorNode","compareDocumentPosition","focusNode","anchorOffset","focusOffset","DOCUMENT_POSITION_PRECEDING","init","IE_NON_DIRECTLY_EDITABLE_ELEMENT","col","colgroup","tbody","td","tfoot","th","thead","tr","HEADING_BOTH","HEADING_COL","HEADING_NONE","HEADING_ROW","_createElement","append","j","appendBogus","setHeading","heading","firstCell","cells","moveToPosition","POSITION_AFTER_START","webkit","NODE_ELEMENT","hasAttribute","rowHeadingSettings","tHead","colHeadingSettings","nodeName","headingSettings","parent","getChildCount","POSITION_BEFORE_START","newCell","tableHead","tableBody","getElementsByTag","tableHeading","hadColHeading","needColHeading","needRowHeading","tableFirstRow","tableFirstRowChildCount","getChild","renameNode","createTHead","previousFirstRow","getFirst","newFirstRow","newFirstRowChildCount","removeAttribute","insertBefore","hasColHeading","headingCommands","jsonp","urlTemplate","urlParams","errorCallback","callbackKey","getNextNumber","_","jsonpCallbacks","response","cleanUp","scriptElement","output","getBody","cancel","simulate","eventInstance","createEvent","initEvent","dispatchEvent","ariaState","ariaElement","_createAriaElement","uiTasksTimeout","uicore","handleUI","allowEsc","handleAria","_event","innerHTML","join","handleMouseLeave","aeUINodes","found","relatedTarget","message","focusHandler","attachListener","removeListener","statusElement","isIE","_onDragEnter","_onDragOver","_onDragDrop","_onPaste","_handleFiles","_processFile","transferFiles","dataTransfer","clientX","clientY","_preventEvent","clipboardData","pastedData","imageFile","getAsFile","bin","userAgent","KEY_BACK","KEY_COMMA","KEY_SEMICOLON","KEY_SPACE","DELIMITERS","REGEX_LAST_WORD","REGEX_URL","REGEX_EMAIL","_onKeyUp","method","dataValue","RegExp","_isValidURL","_isValidEmail","_getLastWord","previousText","_currentKeyCode","previousNode","getPrevious","lastChild","getLast","_startContainer","_offset","lastWord","email","_onKeyDown","_ckLink","_replaceContentByLink","content","ckLink","linkNode","_subscribeToKeyEvent","nextEditableNode","enclosedNode","getEnclosedNode","caretOffset","getNext","newRange","setEndAfter","DEFAULT_CONFIG","regex","_checkForBackspaceAndUndo","insertHtml","bullet","_getListConfig","configRegex","autolist","textContainer","regexLen","autolistCfg","regexItem","_createList","listConfig","setText","IMAGE_HANDLES","both","scale","POSITION_ELEMENT_FN","bl","handle","box","positionElement","bm","round","br","lm","tl","_box","tm","rm","IMAGE_SNAP_TO_SIZE","isFirefox","documentElement","isWebKit","enablePlugin","snapToSize","imageScaleResize","resizer","Resizer","mouseDownListener","e","isHandle","initDrag","hide","html","self","resizeElement","removeEventListener","resizeTimeout","DragEvent","events","mousemove","keydown","mouseup","toArray","len","arr","ctx","String","getBoundingBox","getBoundingClientRect","pageXOffset","pageYOffset","addCss","onLoad","_evt","container","preview","handles","handleName","createHandle","classList","otherImages","splice","showHandles","elements","getElementsByClassName","hideHandles","drag","onStart","showPreview","isDragging","onDrag","calculateSize","updatePreview","previewBox","updateHandles","onRelease","hidePreview","onComplete","resizeComplete","backgroundImage","delta","ratio","others","other","startPos","currentPos","shiftKey","ctrl","alt","altKey","which","release","template","templateBlock","alignmentsObj","center","regexPercent","widgetDef","widgets","widgetElement","afterInit","align","block","integrate","alignCommandIntegrator","ae_dragresize_ie11","stateShifter","doc","alignClasses","ae_dragresize_ie11_alignClasses","captionedClass","ae_dragresize_ie11_captionedClass","shiftables","stateActions","oldValue","newValue","changed","marginLeft","marginRight","newData","hasCaption","deflate","wrapInCentering","unwrapFromCentering","setStyle","imageOrLink","img","figure","captionPlaceholder","replaceSafely","needsDeflate","newEl","wrapInLink","getLinkAttributesGetter","isEmpty","removed","unwrapFromLink","attribsAndStyles","activeEnterMode","ENTER_P","move","linkData","replacing","replaced","insertElementIntoRange","oldData","inflate","checkHasNaturalRatio","natural","getNatural","clientHeight","dimensions","naturalWidth","naturalHeight","Image","getLinkAttributes","getLinkAttributesParser","parseLinkAttributes","removeWidgetAlignment","widget","imageAlignment","wrapper","deflated","focused","initOn","setWrapperAlign","getWidgetAllowedContent","requiredContent","features","getWidgetFeatures","styleableElements","contentTransformations","editables","caption","selector","checkFeature","shiftState","classes","dimension","setDimensions","helpers","ready","alignElement","advanced","advCSSClasses","trim","setData","ae_dragresize_ie11_disableResizer","setupResizer","dragHandlerStyle","dragHandlerContainer","evt","TRISTATE_OFF","unlink","getStyleableElement","getClasses","classRegex","repository","parseElementClasses","upcast","upcastWidgetElement","downcast","downcastWidgetElement","getLabel","pathName","querySelector","imageStyles","heightStyles","widthStyles","isCenterWrapper","centerWrapperChecker","replaceWith","isLinkedOrStandaloneImage","attrsHolder","resizeWrapper","parseCssText","wrapWith","htmlParser","writeCssText","validChildren","div","child","enterMode","resizerNE","resizerNW","resizerSE","resizerSW","oldResizeWrapper","screenX","screenY","startWidth","startHeight","listeners","factorX","factorY","moveDiffX","moveDiffY","nativeEvt","newHeight","newWidth","updateData","cursorClass","attachToDocuments","collection","globalDoc","adjustToX","adjustToY","onMouseMove","onMouseUp","execCallbacks","enabled","refresh","getFocusedWidget","allowed","registered","TRISTATE_DISABLED","rules","figcaption","REGEX_HTTP","REGEX_DEFAULT_LINK","DEFAULT_AE_EMBED_URL_TPL","DEFAULT_AE_EMBED_WIDGET_TPL","DEFAULT_AE_EMBED_DEFAULT_LINK_TPL","AE_EMBED_URL_TPL","embedUrlTemplate","AE_EMBED_WIDGET_TPL","embedWidgetTpl","AE_EMBED_DEFAULT_LINK_TPL","embedLinkDefaultTpl","defaultEmbedWidgetUpcastFn","mask","encodeURIComponent","createATag","setHtml","_msg","aTagHtml","embedWidgetUpcastFn","HIGH_PRIORITY","addElementCallback","FILTER_SKIP_TREE","DEFAULT_PRIORITY","DEFAULT_LFR_EMBED_WIDGET_TPL","EMBED_ALIGNMENT","CENTER","LEFT","RIGHT","ALIGN_VALUES","CENTERED_EMBED_STYLE","getEmbedAlignment","embedAlignment","centeredEmbed","every","styleCheck","vendorPrefixes","vendorPrefix","removeEmbedAlignment","setEmbedAlignment","wrapperElement","parentElement","pwidth","JSON","parse","stringify","iframeElement","selectWidget","root","find","elementList","currentAlignment","currentElement","LFR_EMBED_WIDGET_TPL","providers","provider","scheme","generateEmbedContent","helpMessage","videoPlaybackDisabled","helpMessageIcon","Liferay","Util","getLexiconIconTpl","upcastWidget","iframe","embedContent","getOuterHtml","widgetFragment","fragment","fromHtml","showError","errorMsg","validProvider","embedId","_selectEmbedWidget","platformNotSupported","enterValidUrl","draggable","stylesJSON","_error","bounds","alignValue","selectedEmbed","sender","editorBounds","IMAGE_ALIGNMENT","IMAGE_STYLE_ALIGNMENT","getImageAlignment","centeredImage","imageContainer","textAlign","removeImageAlignment","setImageAlignment","refreshCommands","brFiller","needsBrFiller","enterModeEmptyValue","1","2","3","_checkEmptyData","_removePlaceholderClass","editableNode","innerHtml","editorNode","selectionKeystroke","pxUnit","cssLength","getWidth","getBorderWidth","side","computed","borderMap","thin","medium","thick","getMasterPillarRow","$rows","maxCells","cellsCount","$elected","$tr","buildTableColumnPillars","pillars","pillarIndex","rtl","tBodies","tbodyPosition","getDocumentPosition","nextTd","colSpan","pillarLeft","pillarRight","pillarWidth","getPillarAtPosition","positionX","pillar","ColumnResizer","currentShift","leftShiftBoundary","leftSideCells","resizing","rightShiftBoundary","rightSideCells","isResizing","posX","resizerNewPosition","onMouseDown","resizeStart","columnIndex","buildTableMap","leftColumnCells","rightColumnCells","leftMinSize","Number","MAX_VALUE","rightMinSize","leftCell","rightCell","setOpacity","resizeEnd","resizeColumn","removeCustomData","leftOldWidth","rightOldWidth","tableWidth","sizeShift","getPageOffset","getDocumentElement","clearPillarsCache","dest","toElement","isInline","getCustomData","setCustomData","cellNodeRegex","getSelectedCells","retval","database","moveOutOfCellGuard","setMarker","nearestCell","walker","guard","dtd","clearAllMarkers","getFocusElementAfterDelCells","cellsToDelete","last","focusedCell","insertRow","getDocument","startRow","startRowIndex","rowIndex","lastCell","endRowIndex","rowSpan","endRow","cloneRow","nextRow","newRow","clone","insertAfter","cellIndex","deleteRows","selectionOrRow","rowsToDelete","mapRow","cellRowIndex","nextMapRow","cursorPosition","getCellColIndex","isStart","rowCells","colIndex","mapCell","getColumnsIndices","insertColumn","startCol","lastCol","cloneCol","nextCol","nextCell","insertedCells","deleteColumns","selectionOrCell","startColIndex","endColIndex","firstRowCells","insertCell","startElement","deleteCells","cellToFocus","placeCursorInCell","trimCell","bogus","getBogus","placeAtEnd","docInner","docOuter","version","collapse","cellInRow","tableMap","oRow","cellInCol","oCol","mergeCells","mergeDirection","isDetect","commonAncestor","mapHeight","mapWidth","startColumn","targetCell","rowspan","colspan","er","lastRowIndex","totalRowSpan","totalColSpan","frag","documentFragment","cellFirstChild","isBlockBoundary","whitespaces","moveChildren","trs","nodeList","tailTr","verticalSplitCell","newRowSpan","newCellRowSpan","newRowIndex","ceil","newCellTr","newCellRow","candidateCell","cellsInSameRow","horizontalSplitCell","newColSpan","newCellColSpan","cellsInSameCol","createDef","def","contextSensitive","addCmd","cmd","addFeature","aRows","aMap","oCell","iColSpan","iRowSpan","rs","cs","BUTTON_DEFS","generateButtonBridge","buttonDefinition","ButtonBridge","buttonCommand","buttonOnClick","buttonClassName","buttonDisplayName","buttonLabel","buttonType","iconStyle","cssStyle","skin","getIconStyle","cssStyleParts","backgroundPosition","backgroundSize","displayName","UI_BUTTON","beforeInit","ui","addButton","addHandler","MENUBUTTON_DEFS","generateMenuButtonBridge","menuButtonName","menuButtonDefinition","MenuButtonBridge","panelMenuButtonDisplayName","_getMenuItems","onMenu","menuItems","menuItem","getMenuItem","menuItemDefinition","definition","menuItemState","UI_MENU_BUTTON","addMenuButton","UI_MENUBUTTON","groups","groupsOrder","menuGroups","addMenuGroup","order","addMenuItem","group","addMenuItems","definitions","itemName","removeMenuItem","PANEL_MENU_DEFS","generatePanelMenuButtonBridge","panelMenuButtonName","panelMenuButtonDefinition","PanelMenuButtonBridge","panel","_getPanel","panelMenuButtonOnBlock","onBlock","blockElement","getHtml","UI_PANELBUTTON","addPanelMenuButton","RICH_COMBO_DEFS","generateRichComboBridge","richComboName","richComboDefinition","RichComboBridge","currentValue","editorCombo","currentTarget","_items","setValue","_setValue","onRender","_cacheValue","richComboLabel","_getItems","richCombo","UI_RICHCOMBO","addRichCombo","originalUIAddFn","typeHandler","handlers","nextRange","native","UI","_onDismissToolbarFocus","hidden","_onEditorInteraction","_onActionPerformed","_onEditorKey","_mousedownListener","_setUIHidden","_keyDownListener","prevProps","prevState","_getAvailableToolbarsMessage","ariaUpdate","_ariaUpdateTemplates","_getAriaUpdates","ariaUpdates","noToolbar","ariaUpdateNoToolbar","oneToolbar","ariaUpdateOneToolbar","manyToolbars","ariaUpdateManyToolbars","toolbarsNodeList","toolbarNames","_getAriaUpdateTemplate","domEvent","targetNode","_callChain","wat","ctor","reverse"],"mappings":"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","file":"alloy-editor-core-min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 42);\n","(function() { module.exports = window[undefined]; }());","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\n\nexport default function ButtonIcon({className = '', symbol}) {\n\treturn (\n\t\t<EditorContext.Consumer>\n\t\t\t{({editor}) => {\n\t\t\t\tconst nativeEditor = editor.get('nativeEditor');\n\t\t\t\tconst spritemap = nativeEditor.config.spritemap || '';\n\t\t\t\tconst path = `${spritemap}#${symbol}`;\n\t\t\t\tconst classNamePrefix = className ? ` ${className}` : '';\n\t\t\t\tconst combinedClassName = `ae-svg-icon${classNamePrefix}`;\n\n\t\t\t\treturn (\n\t\t\t\t\t<svg className={combinedClassName} height=\"18\" width=\"18\">\n\t\t\t\t\t\t<use href={path} />\n\t\t\t\t\t</svg>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EditorContext.Consumer>\n\t);\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\n/**\n * React context to avoid explicitly passing the editor instance all\n * through the component hierarchy via props.\n */\nconst EditorContext = React.createContext({});\n\n/**\n * Helper that passes the editor context in via a prop.\n *\n * Context can only be accessed in `render()` and in lifecycle methods\n * (`componentDidMount()` etc). If a component needs to access context\n * elsewhere, such as in a constructor, the context needs to be passed\n * in via a prop.\n */\nEditorContext.toProps = Component => {\n\tconst forwardingComponent = React.forwardRef((props, ref) => (\n\t\t<EditorContext.Consumer>\n\t\t\t{context => <Component {...props} context={context} ref={ref} />}\n\t\t</EditorContext.Consumer>\n\t));\n\tforwardingComponent.key = Component.key;\n\treturn forwardingComponent;\n};\n\nexport default EditorContext;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * ButtonCommand is a mixin that executes a command via CKEDITOR's API.\n *\n * @class ButtonCommand\n */\nexport default WrappedComponent =>\n\tclass ButtonCommand extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Executes a CKEditor command and fires `actionPerformed` event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonCommand\n\t\t * @param {Object=} data Optional data to be passed to CKEDITOR's `execCommand` method.\n\t\t * @method execCommand\n\t\t */\n\t\texecCommand = data => {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\teditor.execCommand(this.props.command, data);\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t};\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonStateClasses is a mixin that decorates the domElement of a component\n * with different CSS classes based on the current state of the element.\n *\n * To check for state, the component can expose the following methods:\n * - `Function` **isActive** to check the active state\n *\n * @class ButtonStateClasses\n */\nexport default WrappedComponent =>\n\tclass ButtonStateClasses extends WrappedComponent {\n\t\t/**\n\t\t * Returns the list of state classes associated to the current element's state, according\n\t\t * to the results of the isActive method.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStateClasses\n\t\t * @method getStateClasses\n\t\t * @return {String} A string with the state CSS classes.\n\t\t */\n\t\tgetStateClasses() {\n\t\t\tlet stateClasses = '';\n\n\t\t\t// Check for active state\n\t\t\tif (Lang.isFunction(this.isActive) && this.isActive()) {\n\t\t\t\tstateClasses += 'ae-button-pressed';\n\t\t\t}\n\n\t\t\treturn stateClasses;\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Provides core language utilities.\n *\n * @class Lang\n */\nconst Lang = {\n\t/**\n\t * Check if the passed value is an array.\n\t *\n\t * @memberof Lang\n\t * @method isArray\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is an array, false otherwise.\n\t * @static\n\t */\n\tisArray(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Check if the passed value is boolean.\n\t *\n\t * @memberof Lang\n\t * @method isBoolean\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is boolean, false otherwise.\n\t * @static\n\t */\n\tisBoolean(value) {\n\t\treturn typeof value === 'boolean';\n\t},\n\n\t/**\n\t * Check if the passed value is a function.\n\t *\n\t * @memberof Lang\n\t * @method isFunction\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is a function, false otherwise.\n\t * @static\n\t */\n\tisFunction(value) {\n\t\treturn typeof value === 'function';\n\t},\n\n\t/**\n\t * Check if the passed value is NULL.\n\t *\n\t * @memberof Lang\n\t * @method isNull\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is NULL, false otherwise.\n\t * @static\n\t */\n\tisNull(value) {\n\t\treturn value === null;\n\t},\n\n\t/**\n\t * Check if the passed value is number.\n\t *\n\t * @memberof Lang\n\t * @method isNumber\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is number, false otherwise.\n\t * @static\n\t */\n\tisNumber(value) {\n\t\treturn typeof value === 'number' && isFinite(value);\n\t},\n\n\t/**\n\t * Check if the passed value is an object\n\t *\n\t * @memberof Lang\n\t * @method isObject\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is an object, false otherwise.\n\t * @static\n\t */\n\tisObject(value) {\n\t\tconst valueType = typeof value;\n\n\t\treturn value && (valueType === 'object' || Lang.isFunction(value));\n\t},\n\n\t/**\n\t * Check if the passed value is a string.\n\t *\n\t * @memberof Lang\n\t * @method isString\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is a string, false otherwise.\n\t * @static\n\t */\n\tisString(value) {\n\t\treturn typeof value === 'string';\n\t},\n\n\t/**\n\t * Adds all properties from the supplier to the receiver.\n\t * The function will add all properties, not only these owned by the supplier.\n\t *\n\t * @memberof Lang\n\t * @method mix\n\t * @param {Object} receiver The object which will receive properties.\n\t * @param {Object} supplier The object which provides properties.\n\t * @return {Object} The modified receiver.\n\t * @static\n\t */\n\tmix(receiver, supplier) {\n\t\tconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\t\tfor (const key in supplier) {\n\t\t\tif (hasOwnProperty.call(supplier, key)) {\n\t\t\t\treceiver[key] = supplier[key];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Converts value to Integer.\n\t *\n\t * @memberof Lang\n\t * @method toInt\n\t * @param {Any} value The value which have to be converted to Integer.\n\t * @return {Integer} The converted value.\n\t * @static\n\t */\n\ttoInt(value) {\n\t\treturn parseInt(value, 10);\n\t},\n};\n\nexport default Lang;\n","(function() { module.exports = window[undefined]; }());","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonStyle is a mixin that provides a style prop and some methods to apply the resulting\n * style and checking if it is present in a given path or selection.\n *\n * @class ButtonStyle\n */\nexport default WrappedComponent =>\n\tclass ButtonStyle extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @method componentWillMount\n\t\t */\n\t\tcomponentWillMount() {\n\t\t\tif (Lang.isFunction(super.componentWillMount)) {\n\t\t\t\tsuper.componentWillMount();\n\t\t\t}\n\n\t\t\tlet style = this.props.style;\n\n\t\t\tif (Lang.isString(style)) {\n\t\t\t\tconst parts = style.split('.');\n\t\t\t\tlet currentMember = this.context.editor.get('nativeEditor')\n\t\t\t\t\t.config;\n\t\t\t\tlet property = parts.shift();\n\n\t\t\t\twhile (\n\t\t\t\t\tproperty &&\n\t\t\t\t\tLang.isObject(currentMember) &&\n\t\t\t\t\tLang.isObject(currentMember[property])\n\t\t\t\t) {\n\t\t\t\t\tcurrentMember = currentMember[property];\n\t\t\t\t\tproperty = parts.shift();\n\t\t\t\t}\n\n\t\t\t\tif (Lang.isObject(currentMember)) {\n\t\t\t\t\tstyle = currentMember;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._style = new CKEDITOR.style(style);\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @method componentWillUnmount\n\t\t */\n\t\tcomponentWillUnmount() {\n\t\t\tif (Lang.isFunction(super.componentWillUnmount)) {\n\t\t\t\tsuper.componentWillUnmount();\n\t\t\t}\n\n\t\t\tthis._style = null;\n\t\t}\n\n\t\t/**\n\t\t * Returns instance of CKEDITOR.style which represents the current button style.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @method getStyle\n\t\t * @return {CKEDITOR.style} The current style representation.\n\t\t */\n\t\tgetStyle() {\n\t\t\treturn this._style;\n\t\t}\n\n\t\t/**\n\t\t * Checks if style is active in the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @method isActive\n\t\t * @return {Boolean} True if style is active, false otherwise.\n\t\t */\n\t\tisActive() {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\t\tconst elementPath = editor.elementPath();\n\t\t\treturn this.getStyle().checkActive(elementPath, editor);\n\t\t}\n\t};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * ButtonCommandActive is a mixin that provides an `isActive` method to determine if\n * a context-aware command is currently in an active state.\n *\n * @class ButtonCommandActive\n */\nexport default WrappedComponent =>\n\tclass ButtonCommandActive extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Checks if the command is active in the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonCommandActive\n\t\t * @method isActive\n\t\t * @return {Boolean} True if the command is active, false otherwise.\n\t\t */\n\t\tisActive() {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\tconst command = editor.getCommand(this.props.command);\n\n\t\t\treturn command ? command.state === CKEDITOR.TRISTATE_ON : false;\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ReactDOM from 'react-dom';\n\nimport Lang from '../../oop/lang';\n\nconst DIRECTION_NONE = 0;\nconst DIRECTION_NEXT = 1;\nconst DIRECTION_PREV = -1;\n\nconst ACTION_NONE = 0;\nconst ACTION_MOVE_FOCUS = 1;\nconst ACTION_DISMISS_FOCUS = 2;\n\n/**\n * WidgetFocusManager is a mixin that provides keyboard navigation inside a widget. To do this,\n * it exposes the following props and methods:\n *\n * @class WidgetFocusManager\n */\nexport default WrappedComponent =>\n\tclass WidgetFocusManager extends WrappedComponent {\n\t\t/**\n\t\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method componentDidMount\n\t\t */\n\t\tcomponentDidMount() {\n\t\t\tif (Lang.isFunction(super.componentDidMount)) {\n\t\t\t\tsuper.componentDidMount();\n\t\t\t}\n\n\t\t\tthis._refresh();\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t\t * Refreshes the descendants list.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method componentDidUpdate\n\t\t */\n\t\tcomponentDidUpdate() {\n\t\t\tif (Lang.isFunction(super.componentDidUpdate)) {\n\t\t\t\tsuper.componentDidUpdate();\n\t\t\t}\n\n\t\t\tthis._refresh();\n\t\t}\n\n\t\t/**\n\t\t * Focuses the current active descendant.\n\t\t *\n\t\t * Several Widgets can be nested in a component hierarchy by attaching this focus method to\n\t\t * the widget DOM node, transferring the DOM focus control to the inner FocusManager.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method focus\n\t\t */\n\t\tfocus = event => {\n\t\t\tif (!event || this._isValidTarget(event.target)) {\n\t\t\t\tif (this._descendants && this._descendants.length) {\n\t\t\t\t\tconst activeDescendantEl = this._descendants[\n\t\t\t\t\t\tthis._activeDescendant\n\t\t\t\t\t];\n\t\t\t\t\t// When user clicks with the mouse, the activeElement is already set and there\n\t\t\t\t\t// is no need to focus it. Focusing of the active descendant (usually some button) is required\n\t\t\t\t\t// in case of keyboard navigation, because the focused element might be not the first button,\n\t\t\t\t\t// but the div element, which contains the button.\n\t\t\t\t\tif (\n\t\t\t\t\t\tdocument.activeElement !== activeDescendantEl &&\n\t\t\t\t\t\t!this.props.focusFirstChild\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis._descendants.indexOf(\n\t\t\t\t\t\t\t\tdocument.activeElement\n\t\t\t\t\t\t\t) === -1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tactiveDescendantEl.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (event) {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Handles the key events on a DOM node to execute the appropriate navigation when needed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @param {Object} event The Keyboard event that was detected on the widget DOM node.\n\t\t * @method handleKey\n\t\t */\n\t\thandleKey = event => {\n\t\t\tif (this._isValidTarget(event.target) && this._descendants) {\n\t\t\t\tconst action = this._getFocusAction(event);\n\n\t\t\t\tif (action.type) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tif (action.type === ACTION_MOVE_FOCUS) {\n\t\t\t\t\t\tthis._moveFocus(action.direction);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (action.type === ACTION_DISMISS_FOCUS) {\n\t\t\t\t\t\tthis.props.onDismiss(action.direction);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Moves the focus among descendants in the especified direction.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method moveFocus\n\t\t * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n\t\t */\n\t\tmoveFocus(direction) {\n\t\t\tdirection = Lang.isNumber(direction) ? direction : 0;\n\n\t\t\tthis._moveFocus(direction);\n\t\t}\n\n\t\t/**\n\t\t * Returns the action, if any, that a keyboard event in the current focus manager state\n\t\t * should produce.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _getFocusAction\n\t\t * @param {object} event The Keyboard event.\n\t\t * @protected\n\t\t * @return {Object} An action object with type and direction properties.\n\t\t */\n\t\t_getFocusAction(event) {\n\t\t\tconst action = {\n\t\t\t\ttype: ACTION_NONE,\n\t\t\t};\n\n\t\t\tif (this.props.keys) {\n\t\t\t\tconst direction = this._getFocusMoveDirection(event);\n\n\t\t\t\tif (direction) {\n\t\t\t\t\taction.direction = direction;\n\t\t\t\t\taction.type = ACTION_MOVE_FOCUS;\n\t\t\t\t}\n\n\t\t\t\tconst dismissAction = this._getFocusDismissAction(\n\t\t\t\t\tevent,\n\t\t\t\t\tdirection\n\t\t\t\t);\n\n\t\t\t\tif (dismissAction.dismiss) {\n\t\t\t\t\taction.direction = dismissAction.direction;\n\t\t\t\t\taction.type = ACTION_DISMISS_FOCUS;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn action;\n\t\t}\n\n\t\t/**\n\t\t * Returns the dismiss action, if any, the focus manager should execute to yield the focus. This\n\t\t * will happen in any of these scenarios if a dismiss callback has been specified:\n\t\t * - A dismiss key has been pressed\n\t\t * - In a non-circular focus manager, when:\n\t\t *     - The active descendant is the first one and a prev key has been pressed.\n\t\t *     - The active descendant is the last one and a next key has been pressed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _getFocusDismissAction\n\t\t * @param {Number} focusMoveDirection The focus movement direction (if any).\n\t\t * @param {Object} event The Keyboard event.\n\t\t * @protected\n\t\t * @return {Object} A dismiss action with dismiss and direction properties.\n\t\t */\n\t\t_getFocusDismissAction(event, focusMoveDirection) {\n\t\t\tconst dismissAction = {\n\t\t\t\tdirection: focusMoveDirection,\n\t\t\t\tdismiss: false,\n\t\t\t};\n\n\t\t\tif (this.props.onDismiss) {\n\t\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.dismiss)) {\n\t\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis._isValidKey(event.keyCode, this.props.keys.dismissNext)\n\t\t\t\t) {\n\t\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\t\tdismissAction.direction = DIRECTION_NEXT;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis._isValidKey(event.keyCode, this.props.keys.dismissPrev)\n\t\t\t\t) {\n\t\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\t\tdismissAction.direction = DIRECTION_PREV;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!dismissAction.dismiss &&\n\t\t\t\t\t!this.props.circular &&\n\t\t\t\t\tfocusMoveDirection\n\t\t\t\t) {\n\t\t\t\t\tdismissAction.dismiss =\n\t\t\t\t\t\t(focusMoveDirection === DIRECTION_PREV &&\n\t\t\t\t\t\t\tthis._activeDescendant === 0) ||\n\t\t\t\t\t\t(focusMoveDirection === DIRECTION_NEXT &&\n\t\t\t\t\t\t\tthis._activeDescendant ===\n\t\t\t\t\t\t\t\tthis._descendants.length - 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn dismissAction;\n\t\t}\n\n\t\t/**\n\t\t * Returns the direction, if any, in which the focus should be moved. In presence of the\n\t\t * shift key modifier, the direction of the movement is inverted.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _getFocusMoveDirection\n\t\t * @param {Object} event The Keyboard event.\n\t\t * @protected\n\t\t * @return {Number} The computed direction of the expected focus movement.\n\t\t */\n\t\t_getFocusMoveDirection(event) {\n\t\t\tlet direction = DIRECTION_NONE;\n\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.next)) {\n\t\t\t\tdirection = DIRECTION_NEXT;\n\t\t\t}\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.prev)) {\n\t\t\t\tdirection = DIRECTION_PREV;\n\t\t\t}\n\n\t\t\tif (event.shifKey) {\n\t\t\t\tdirection *= -1;\n\t\t\t}\n\n\t\t\treturn direction;\n\t\t}\n\n\t\t/**\n\t\t * Indicates if a given keyCode is valid for the given set of keys.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _isValidKey\n\t\t * @param {Array|Number} keys A key set. Can be a number an array of numbers representing the allowed keyCodes.\n\t\t * @param {Number} keyCode An event keyCode.\n\t\t * @protected\n\t\t * @return {Boolean} A boolean value indicating if the key is valid.\n\t\t */\n\t\t_isValidKey(keyCode, keys) {\n\t\t\treturn Lang.isArray(keys)\n\t\t\t\t? keys.indexOf(keyCode) !== -1\n\t\t\t\t: keyCode === keys;\n\t\t}\n\n\t\t/**\n\t\t * Indicates if a given element is valid for focus management. User input elements such as\n\t\t * input, select or textarea are excluded.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _isValidKey\n\t\t * @param {DOMNode} element A DOM element.\n\t\t * @protected\n\t\t * @return {Boolean} A boolean value indicating if the element is valid.\n\t\t */\n\t\t_isValidTarget(element) {\n\t\t\tconst tagName = element.tagName.toLowerCase();\n\n\t\t\treturn (\n\t\t\t\ttagName !== 'input' &&\n\t\t\t\ttagName !== 'select' &&\n\t\t\t\ttagName !== 'textarea'\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Moves the focus among descendants in the especified direction.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _moveFocus\n\t\t * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n\t\t * @protected\n\t\t */\n\t\t_moveFocus(direction) {\n\t\t\tconst numDescendants = this._descendants.length;\n\n\t\t\tlet descendant = this._descendants[this._activeDescendant];\n\n\t\t\tdescendant.setAttribute('tabIndex', -1);\n\n\t\t\tthis._activeDescendant += direction;\n\n\t\t\tif (this.props.circular) {\n\t\t\t\t// Calculate proper modulo result since remainder operator doesn't behave in the\n\t\t\t\t// same way for negative numbers\n\t\t\t\tthis._activeDescendant =\n\t\t\t\t\t((this._activeDescendant % numDescendants) +\n\t\t\t\t\t\tnumDescendants) %\n\t\t\t\t\tnumDescendants;\n\t\t\t} else {\n\t\t\t\tthis._activeDescendant = Math.max(\n\t\t\t\t\tMath.min(this._activeDescendant, numDescendants - 1),\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdescendant = this._descendants[this._activeDescendant];\n\n\t\t\tdescendant.setAttribute('tabIndex', 0);\n\t\t\tdescendant.focus();\n\t\t}\n\n\t\t/**\n\t\t * Refreshes the descendants list by executing the CSS selector again and resets the descendants tabIndex.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _refresh\n\t\t * @protected\n\t\t */\n\t\t_refresh() {\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\tif (domNode) {\n\t\t\t\tconst descendants = domNode.querySelectorAll(\n\t\t\t\t\tthis.props.descendants\n\t\t\t\t);\n\n\t\t\t\tlet priorityDescendants = [];\n\n\t\t\t\tthis._descendants = [];\n\n\t\t\t\tArray.prototype.slice.call(descendants).forEach(item => {\n\t\t\t\t\tconst dataTabIndex = item.getAttribute('data-tabindex');\n\n\t\t\t\t\tif (dataTabIndex) {\n\t\t\t\t\t\tpriorityDescendants.push(item);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._descendants.push(item);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tpriorityDescendants = priorityDescendants.sort((a, b) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tLang.toInt(a.getAttribute('data-tabindex')) >\n\t\t\t\t\t\tLang.toInt(b.getAttribute('data-tabindex'))\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\tthis._descendants = priorityDescendants.concat(\n\t\t\t\t\tthis._descendants\n\t\t\t\t);\n\n\t\t\t\tthis._activeDescendant = 0;\n\n\t\t\t\tthis._descendants.some((item, index) => {\n\t\t\t\t\tif (item.getAttribute('tabindex') === '0') {\n\t\t\t\t\t\tthis._activeDescendant = index;\n\t\t\t\t\t\tthis.focus();\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonKeystroke is a mixin that provides a `keystroke` prop that allows configuring\n * a function of the instance to be invoked upon the keystroke activation.\n *\n * @class ButtonKeystroke\n */\nexport default WrappedComponent =>\n\tclass ButtonKeystroke extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonKeystroke\n\t\t * @method componentWillMount\n\t\t */\n\t\tcomponentWillMount() {\n\t\t\tif (Lang.isFunction(super.componentWillMount)) {\n\t\t\t\tsuper.componentWillMount();\n\t\t\t}\n\n\t\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\t\t\tconst keystroke = this.props.keystroke;\n\n\t\t\tconst commandName = `keystroke:${keystroke.name}`;\n\n\t\t\tlet command = nativeEditor.getCommand(commandName);\n\n\t\t\tif (!command) {\n\t\t\t\tcommand = new CKEDITOR.command(nativeEditor, {\n\t\t\t\t\texec: function(editor) {\n\t\t\t\t\t\tconst keystrokeFn = keystroke.fn;\n\n\t\t\t\t\t\tif (Lang.isString(keystrokeFn)) {\n\t\t\t\t\t\t\tthis[keystrokeFn].call(this, editor);\n\t\t\t\t\t\t} else if (Lang.isFunction(keystrokeFn)) {\n\t\t\t\t\t\t\tkeystrokeFn.call(this, editor);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this),\n\t\t\t\t});\n\n\t\t\t\tnativeEditor.addCommand(commandName, command);\n\t\t\t}\n\n\t\t\tthis._defaultKeystrokeCommand =\n\t\t\t\tnativeEditor.keystrokeHandler.keystrokes[keystroke.keys];\n\n\t\t\tnativeEditor.setKeystroke(keystroke.keys, commandName);\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonKeystroke\n\t\t * @method componentWillUnmount\n\t\t */\n\t\tcomponentWillUnmount() {\n\t\t\tif (Lang.isFunction(super.componentWillUnmount)) {\n\t\t\t\tsuper.componentWillUnmount();\n\t\t\t}\n\n\t\t\tthis.context.editor\n\t\t\t\t.get('nativeEditor')\n\t\t\t\t.setKeystroke(\n\t\t\t\t\tthis.props.keystroke.keys,\n\t\t\t\t\tthis._defaultKeystrokeCommand\n\t\t\t\t);\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\n\n/**\n * The ButtonDropdown class provides markup and keyboard navigation behaviour to a dropdown\n * opened from a button.\n *\n * @class ButtonDropdown\n */\nclass ButtonDropdown extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonDropdown\n\t * @method getDefaultProps\n\t */\n\tstatic defaultProps = {\n\t\tcircular: false,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the dropdown in the configuration.\n\t *\n\t * @default dropdown\n\t * @memberof ButtonDropdown\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'dropdown';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonDropdown\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"ae-arrow-box ae-arrow-box-top-left ae-dropdown\"\n\t\t\t\tonFocus={this.focus}\n\t\t\t\tonKeyDown={this.handleKey}\n\t\t\t\ttabIndex=\"0\">\n\t\t\t\t<ul className=\"ae-listbox\" role=\"listbox\">\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WidgetFocusManager(ButtonDropdown);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonCommandListItem from './button-command-list-item.jsx';\n\n/**\n * The ButtonCommandsList class provides functionality for showing a list of commands that can be\n * executed to the current selection..\n *\n * @class ButtonCommandsList\n * @uses WidgetFocusManager\n */\nclass ButtonCommandsList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandsList\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcircular: false,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonCommandsList\n\t * @memberof ButtonCommandsList\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonCommandsList';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis._ref = React.createRef();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the list node to allow keyboard interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandsList\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._ref.current.focus();\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the list.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandsList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"ae-arrow-box ae-arrow-box-top-left ae-dropdown\"\n\t\t\t\tonFocus={this.focus}\n\t\t\t\tonKeyDown={this.handleKey}\n\t\t\t\tref={this._ref}\n\t\t\t\ttabIndex=\"0\">\n\t\t\t\t<ul\n\t\t\t\t\tclassName=\"ae-listbox\"\n\t\t\t\t\tid={this.props.listId}\n\t\t\t\t\trole=\"listbox\">\n\t\t\t\t\t{this._renderActions(this.props.commands)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Renders instances of ButtonCommandListItem with the description of the row action that will be executed.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandsList\n\t * @method _renderActions\n\t * @protected\n\t * @return {Array} Rendered instances of ButtonCommandListItem class\n\t */\n\t_renderActions(commands) {\n\t\tlet items;\n\n\t\tif (commands && commands.length) {\n\t\t\titems = commands.map(item => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={item.command} role=\"option\">\n\t\t\t\t\t\t<ButtonCommandListItem\n\t\t\t\t\t\t\tcommand={item.command}\n\t\t\t\t\t\t\tdescription={\n\t\t\t\t\t\t\t\ttypeof item.label === 'string'\n\t\t\t\t\t\t\t\t\t? item.label\n\t\t\t\t\t\t\t\t\t: item.label()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ticon={item.icon}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n}\n\nexport default WidgetFocusManager(ButtonCommandsList);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonActionStyle is a mixin that provides applying style implementation for a\n * button based on the `applyStyle` and `removeStyle` API of CKEDITOR.\n *\n * To execute properly, the component has to expose the following methods which can be obtained\n * out of the box using the {{#crossLink \"ButtonStyle\"}}{{/crossLink}} mixin:\n * - `Function` {{#crossLink \"ButtonStyle/isActive\"}}{{/crossLink}} to check the active state\n * - `Function` {{#crossLink \"ButtonStyle/getStyle\"}}{{/crossLink}} to return the style that should be applied\n *\n * @class ButtonActionStyle\n */\nexport default WrappedComponent =>\n\tclass ButtonActionStyle extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Removes or applies the component style to the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonActionStyle\n\t\t * @method applyStyle\n\t\t */\n\t\tapplyStyle = () => {\n\t\t\tif (\n\t\t\t\tLang.isFunction(this.isActive) &&\n\t\t\t\tLang.isFunction(this.getStyle)\n\t\t\t) {\n\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\teditor.getSelection().lock();\n\n\t\t\t\tif (this.isActive()) {\n\t\t\t\t\teditor.removeStyle(this.getStyle());\n\t\t\t\t} else {\n\t\t\t\t\teditor.applyStyle(this.getStyle());\n\t\t\t\t}\n\n\t\t\t\teditor.getSelection().unlock();\n\n\t\t\t\teditor.fire('actionPerformed', this);\n\t\t\t}\n\t\t};\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonDropdown from './button-dropdown.jsx';\nimport ButtonsStylesListHeader from './button-styles-list-header.jsx';\nimport ButtonStylesListItemRemove from './button-styles-list-item-remove.jsx';\nimport ButtonStylesListItem from './button-styles-list-item.jsx';\n\n/**\n * The ButtonStylesList class provides functionality for showing a list of styles that can be\n * applied to the current selection..\n *\n * @class ButtonStylesList\n * @uses WidgetFocusManager\n */\nclass ButtonStylesList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcircular: false,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t\tshowRemoveStylesItem: true,\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @memberof ButtonStylesList\n\t * @static\n\t * @property {String} key\n\t * @default buttonStylesList\n\t */\n\tstatic key = 'buttonStylesList';\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the list node to allow keyboard interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tReactDOM.findDOMNode(this).focus();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method componentWillMount\n\t */\n\tcomponentWillMount() {\n\t\tconst blockStyles = [];\n\t\tconst inlineStyles = [];\n\t\tconst objectStyles = [];\n\n\t\tthis.props.styles.forEach(item => {\n\t\t\tconst style = new CKEDITOR.style(item.style);\n\n\t\t\tif (style.type === CKEDITOR.STYLE_BLOCK) {\n\t\t\t\tblockStyles.push(item);\n\t\t\t} else if (style.type === CKEDITOR.STYLE_INLINE) {\n\t\t\t\tinlineStyles.push(item);\n\t\t\t} else if (style.type === CKEDITOR.STYLE_OBJECT) {\n\t\t\t\tobjectStyles.push(item);\n\t\t\t}\n\t\t});\n\n\t\tthis._blockStyles = blockStyles;\n\t\tthis._inlineStyles = inlineStyles;\n\t\tthis._objectStyles = objectStyles;\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the list.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet removeStylesItem;\n\n\t\tif (this.props.showRemoveStylesItem) {\n\t\t\tremoveStylesItem = (\n\t\t\t\t<ButtonStylesListItemRemove\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<ButtonDropdown {...this.props}>\n\t\t\t\t{removeStylesItem}\n\n\t\t\t\t<ButtonsStylesListHeader\n\t\t\t\t\tname={AlloyEditor.Strings.blockStyles}\n\t\t\t\t\tstyles={this._blockStyles}\n\t\t\t\t/>\n\t\t\t\t{this._renderStylesItems(this._blockStyles)}\n\n\t\t\t\t<ButtonsStylesListHeader\n\t\t\t\t\tname={AlloyEditor.Strings.inlineStyles}\n\t\t\t\t\tstyles={this._inlineStyles}\n\t\t\t\t/>\n\t\t\t\t{this._renderStylesItems(this._inlineStyles)}\n\n\t\t\t\t<ButtonsStylesListHeader\n\t\t\t\t\tname={AlloyEditor.Strings.objectStyles}\n\t\t\t\t\tstyles={this._objectStyles}\n\t\t\t\t/>\n\t\t\t\t{this._renderStylesItems(this._objectStyles)}\n\t\t\t</ButtonDropdown>\n\t\t);\n\t}\n\n\t/**\n\t * Renders instances of ButtonStylesListItem with the preview of the correspondent block, inline or object styles.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method _renderStylesItems\n\t * @param {Array} styles List of styles for which preview should be rendered.\n\t * @protected\n\t * @return {Array} Rendered instances of ButtonStylesListItem class\n\t */\n\t_renderStylesItems(styles) {\n\t\tlet items;\n\n\t\tif (styles && styles.length) {\n\t\t\titems = styles.map(item => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={item.name} role=\"option\">\n\t\t\t\t\t\t<ButtonStylesListItem\n\t\t\t\t\t\t\tactiveStyle={this.props.activeStyle}\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tstyle={item.style}\n\t\t\t\t\t\t\tstyleFn={item.styleFn}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n}\n\nexport default WidgetFocusManager(ButtonStylesList);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ReactDOM from 'react-dom';\n\nimport Lang from '../../oop/lang';\n\n/**\n * Provides functionality for managing different dropdowns inside a widget.\n *\n * @class WidgetDropdown\n */\nexport default WrappedComponent =>\n\tclass WidgetDropdown extends WrappedComponent {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\n\t\t\tthis.state = {\n\t\t\t\t...this.state,\n\t\t\t\tdropdownTrigger: null,\n\t\t\t\titemDropdown: null,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked when a component is receiving new props.\n\t\t * This method is not called for the initial render.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetDropdown\n\t\t * @method componentWillReceiveProps\n\t\t */\n\t\tcomponentWillReceiveProps(nextProps) {\n\t\t\tif (Lang.isFunction(super.componentWillReceiveProps)) {\n\t\t\t\tsuper.componentWillReceiveProps(nextProps);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tdropdownTrigger: null,\n\t\t\t\titemDropdown: null,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Merges the provided object with two more properties:\n\t\t * - expanded - boolean flag which indicates if an widget should be rendered exclusively.\n\t\t * - toggleDropdown - function, which can be used by an widget in order to obtain exclusive state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetDropdown\n\t\t * @method mergeDropdownProps\n\t\t * @param {Object} obj The properties container which should be merged with the properties, related\n\t\t *    to dropdown state.\n\t\t * @param {Object} itemKey They key of an React Widget which contains the dropdown.\n\t\t * @return {Object} The merged object.\n\t\t */\n\t\tmergeDropdownProps = (obj, itemKey) => {\n\t\t\treturn CKEDITOR.tools.merge(obj, {\n\t\t\t\texpanded: this.state.itemDropdown === itemKey ? true : false,\n\t\t\t\ttabIndex: this.state.dropdownTrigger === itemKey ? 0 : -1,\n\t\t\t\ttoggleDropdown: this.toggleDropdown.bind(this, itemKey),\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Sets the active dropdown of the widget or discards the toggled item from the state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetDropdown\n\t\t * @method toggleDropdown\n\t\t * @param {Object} itemDropdown The widget which requests to toggle its dropdown.\n\t\t * @param {Number} toggleDirection User movement direction when toggled via keyboard.\n\t\t */\n\t\ttoggleDropdown = (itemDropdown, toggleDirection) => {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tdropdownTrigger: itemDropdown,\n\t\t\t\t\titemDropdown:\n\t\t\t\t\t\titemDropdown !== this.state.itemDropdown\n\t\t\t\t\t\t\t? itemDropdown\n\t\t\t\t\t\t\t: null,\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tif (!this.state.itemDropdown) {\n\t\t\t\t\t\tif (this.moveFocus) {\n\t\t\t\t\t\t\tthis.moveFocus(toggleDirection);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tReactDOM.findDOMNode(this).focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * Provides functionality for managing exclusive state of an widget.\n * The exclusive state means that a button may request to be the only rendered\n * widget in its parent container. WidgetExclusive will manage this state by\n * filtering and suppressing the other sibling widgets from displaying.\n *\n * @class WidgetExclusive\n */\nexport default WrappedComponent =>\n\tclass WidgetExclusive extends WrappedComponent {\n\t\t/**\n\t\t * Cancels the exclusive state of an widget.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method cancelExclusive\n\t\t * @param {Object} itemExclusive The widget which exclusive state should be canceled.\n\t\t */\n\t\tcancelExclusive(itemExclusive) {\n\t\t\tif (this.state.itemExclusive === itemExclusive) {\n\t\t\t\tthis.setState({\n\t\t\t\t\titemExclusive: null,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked when a component is receiving new props.\n\t\t * This method is not called for the initial render.\n\t\t * Calling this.setState() within this function will not trigger an additional render.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method componentWillReceiveProps\n\t\t * @param {Object} nextProps Object containing the current set of properties.\n\t\t */\n\t\tcomponentWillReceiveProps(nextProps) {\n\t\t\tif (Lang.isFunction(super.componentWillReceiveProps)) {\n\t\t\t\tsuper.componentWillReceiveProps(nextProps);\n\t\t\t}\n\n\t\t\t// Receiving properties means that the component is being re-rendered.\n\t\t\t// Re-rendering is triggered by editorInteraction, so we have to\n\t\t\t// reset the exclusive state and render the UI according to the new selection.\n\t\t\tthis.setState({\n\t\t\t\titemExclusive: null,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Filters the items and returns only those with exclusive state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method filterExclusive\n\t\t * @param {Array} items The widgets to be filtered.\n\t\t * @return {Array|Object} The item with executive state.\n\t\t */\n\t\tfilterExclusive(items) {\n\t\t\treturn items.filter(item => {\n\t\t\t\tif (this.state.itemExclusive) {\n\t\t\t\t\tif (this.state.itemExclusive === item.key) {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Merges the provided object with three more properties:\n\t\t * - cancelExclusive - function, which can be used by a widget in order to cancel executive state.\n\t\t * - renderExclusive - boolean flag which indicates if an widget should be rendered exclusively.\n\t\t * - requestExclusive - function, which can be used by a widget in order to obtain exclusive state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method mergeExclusiveProps\n\t\t * @param {Object} obj The properties container which should be merged with the properties, related\n\t\t *    to exclusive state.\n\t\t * @param {Object} itemKey They key of an React Widget which should be rendered exclusively.\n\t\t * @return {Object} The merged object.\n\t\t */\n\t\tmergeExclusiveProps(obj, itemKey) {\n\t\t\treturn CKEDITOR.tools.merge(obj, {\n\t\t\t\tcancelExclusive: this.cancelExclusive.bind(this, itemKey),\n\t\t\t\trenderExclusive: this.state.itemExclusive === itemKey,\n\t\t\t\trequestExclusive: this.requestExclusive.bind(this, itemKey),\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Requests and sets exclusive state of an widget.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method requestExclusive\n\t\t * @param {Object} itemExclusive The widget which requests exclusive state.\n\t\t */\n\t\trequestExclusive = itemExclusive => {\n\t\t\tthis.setState({\n\t\t\t\titemExclusive,\n\t\t\t});\n\t\t};\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\nimport WidgetDropdown from '../base/widget-dropdown';\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonLinkAutocompleteList from './button-link-autocomplete-list.jsx';\nimport ButtonLinkTargetEdit from './button-link-target-edit.jsx';\n\n/**\n * The ButtonLinkEdit class provides functionality for creating and editing a link in a document.\n * Provides UI for creating, editing and removing a link.\n *\n * @class ButtonLinkEdit\n * @uses WidgetDropdown\n * @uses WidgetFocusManager\n */\nclass ButtonLinkEdit extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tappendProtocol: true,\n\t\tautocompleteUrl: '',\n\t\tcircular: true,\n\t\tcustomIndexStart: true,\n\t\tdefaultLinkTarget: '',\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t\tshowTargetSelector: true,\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default linkEdit\n\t * @memberof ButtonLinkEdit\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'linkEdit';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.linkInput = React.createRef();\n\t\tthis.state = this._getInitialState();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the link input to immediately allow editing. This should only happen if the component\n\t * is rendered in exclusive mode to prevent aggressive focus stealing.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tif (this.props.renderExclusive || this.props.manualSelection) {\n\t\t\t// We need to wait for the next rendering cycle before focusing to avoid undesired\n\t\t\t// scrolls on the page\n\t\t\tthis._focusLinkInput();\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps() {\n\t\tthis.setState(this._getInitialState());\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet targetSelector = {\n\t\t\tallowedTargets: this.props.allowedTargets,\n\t\t\teditor: this.context.editor,\n\t\t\thandleLinkTargetChange: this._handleLinkTargetChange,\n\t\t\tselectedTarget:\n\t\t\t\tthis.state.linkTarget || AlloyEditor.Strings.linkTargetDefault,\n\t\t};\n\n\t\ttargetSelector = this.mergeDropdownProps(\n\t\t\ttargetSelector,\n\t\t\tButtonLinkTargetEdit.key\n\t\t);\n\n\t\tlet autocompleteDropdown;\n\n\t\tif (this.props.data) {\n\t\t\tlet dataFn = this.props.data;\n\n\t\t\tif (!Lang.isFunction(dataFn)) {\n\t\t\t\tconst items = this.props.data;\n\n\t\t\t\tdataFn = () => items;\n\t\t\t}\n\n\t\t\tlet autocompleteDropdownProps = {\n\t\t\t\tautocompleteSelected: this.state.autocompleteSelected,\n\t\t\t\tdata: dataFn,\n\t\t\t\teditor: this.context.editor,\n\t\t\t\thandleLinkAutocompleteClick: this._handleLinkAutocompleteClick,\n\t\t\t\tonDismiss: this.props.toggleDropdown,\n\t\t\t\tsetAutocompleteState: this._setAutocompleteState,\n\t\t\t\tterm: this.state.linkHref,\n\t\t\t};\n\n\t\t\tautocompleteDropdownProps = this.mergeDropdownProps(\n\t\t\t\tautocompleteDropdownProps,\n\t\t\t\tButtonLinkAutocompleteList.key\n\t\t\t);\n\n\t\t\tautocompleteDropdown = (\n\t\t\t\t<ButtonLinkAutocompleteList {...autocompleteDropdownProps} />\n\t\t\t);\n\t\t}\n\n\t\tlet buttonClearLink;\n\n\t\tif (this.state.linkHref) {\n\t\t\tbuttonClearLink = (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.clearInput}\n\t\t\t\t\tclassName=\"ae-button ae-button-clear\"\n\t\t\t\t\tonClick={this._clearLink}\n\t\t\t\t\ttitle={AlloyEditor.Strings.clear}>\n\t\t\t\t\t<ButtonIcon symbol=\"times-circle\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\n\t\tconst placeholderProp = {};\n\n\t\tif (!CKEDITOR.env.ie && AlloyEditor.Strings) {\n\t\t\tplaceholderProp.placeholder = AlloyEditor.Strings.editLink;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-edit-link\">\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.removeLink}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdisabled={!this.state.element}\n\t\t\t\t\tonClick={this._removeLink}\n\t\t\t\t\ttitle={AlloyEditor.Strings.remove}>\n\t\t\t\t\t<ButtonIcon symbol=\"chain-broken\" />\n\t\t\t\t</button>\n\t\t\t\t<div className=\"ae-container-input xxl\">\n\t\t\t\t\t{this.props.showTargetSelector && (\n\t\t\t\t\t\t<ButtonLinkTargetEdit {...targetSelector} />\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"ae-container-input\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\t\tonChange={this._handleLinkHrefChange}\n\t\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\t\t{...placeholderProp}\n\t\t\t\t\t\t\tref={this.linkInput}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={this.state.linkHref}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{autocompleteDropdown}\n\t\t\t\t\t</div>\n\t\t\t\t\t{buttonClearLink}\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.confirm}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdisabled={!this._isValidState()}\n\t\t\t\t\tonClick={this._updateLink}\n\t\t\t\t\ttitle={AlloyEditor.Strings.confirm}>\n\t\t\t\t\t<ButtonIcon className=\"ae-icon-svg-check\" symbol=\"check\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * The return value will be used as the initial value of this.state.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _getInitialState\n\t * @protected\n\t * @return {Object}\n\t */\n\t_getInitialState() {\n\t\t// Can't access context from contructor, so get editor from props.\n\t\tconst {editor} = this.props.context;\n\t\tconst {defaultLinkTarget} = this.props;\n\n\t\tconst link = new CKEDITOR.Link(\n\t\t\teditor.get('nativeEditor')\n\t\t).getFromSelection();\n\t\tconst href = (link && link.getAttribute('href')) || '';\n\t\tconst target =\n\t\t\t(link && link.getAttribute('target')) || defaultLinkTarget;\n\n\t\treturn {\n\t\t\tautocompleteSelected: false,\n\t\t\telement: link,\n\t\t\tinitialLink: {\n\t\t\t\thref,\n\t\t\t\ttarget,\n\t\t\t},\n\t\t\tlinkHref: href,\n\t\t\tlinkTarget: target,\n\t\t};\n\t}\n\n\t/**\n\t * Clears the link input. This only changes the component internal state, but does not\n\t * affect the link element of the editor. Only the _removeLink and _updateLink methods\n\t * are translated to the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _clearLink\n\t * @protected\n\t */\n\t_clearLink = () => {\n\t\tthis.setState({\n\t\t\tlinkHref: '',\n\t\t});\n\n\t\tthis._focusLinkInput();\n\t};\n\n\t/**\n\t * Focuses the user cursor on the widget's input.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _focusLinkInput\n\t * @protected\n\t */\n\t_focusLinkInput() {\n\t\tconst instance = this;\n\n\t\tconst focusLinkEl = function() {\n\t\t\tinstance.linkInput.current.focus();\n\t\t};\n\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(focusLinkEl);\n\t\t} else {\n\t\t\tsetTimeout(focusLinkEl, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Monitors key interaction inside the input element to respond to the keys:\n\t * - Enter: Creates/updates the link.\n\t * - Escape: Discards the changes.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _handleKeyDown\n\t * @param {SyntheticEvent} event The keyboard event.\n\t * @protected\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === 13 || event.keyCode === 27) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (event.keyCode === 13) {\n\t\t\tthis._updateLink();\n\t\t} else if (event.keyCode === 40) {\n\t\t\tthis.setState({\n\t\t\t\tautocompleteSelected: true,\n\t\t\t});\n\t\t} else if (event.keyCode === 27) {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\tnew CKEDITOR.Link(editor).advanceSelection();\n\n\t\t\tthis.context.editor\n\t\t\t\t.get('nativeEditor')\n\t\t\t\t.fire('actionPerformed', this);\n\t\t}\n\t};\n\n\t/**\n\t * Updates the component state when the link input changes on user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _handleLinkHrefChange\n\t * @param {SyntheticEvent} event The change event.\n\t * @protected\n\t */\n\t_handleLinkHrefChange = event => {\n\t\tthis.setState({\n\t\t\tlinkHref: event.target.value,\n\t\t});\n\n\t\tthis._focusLinkInput();\n\t};\n\n\t/**\n\t * Updates the component state when the link target changes on user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _handleLinkTargetChange\n\t * @param {SyntheticEvent} event The click event.\n\t * @protected\n\t */\n\t_handleLinkTargetChange = event => {\n\t\tthis.setState({\n\t\t\titemDropdown: null,\n\t\t\tlinkTarget: event.target.getAttribute('data-value'),\n\t\t});\n\n\t\tthis._focusLinkInput();\n\t};\n\n\t/**\n\t * Updates the component state when an autocomplete link result is selected by user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _handleLinkAutocompleteClick\n\t * @param {SyntheticEvent} event The click event.\n\t * @protected\n\t */\n\t_handleLinkAutocompleteClick(event) {\n\t\tthis.setState({\n\t\t\titemDropdown: null,\n\t\t\tlinkHref: event.target.getAttribute('data-value'),\n\t\t});\n\n\t\tthis._focusLinkInput();\n\t}\n\n\t/**\n\t * Verifies that the current link state is valid so the user can save the link. A valid state\n\t * means that we have a non-empty href and that either that or the link target are different\n\t * from the original link.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _isValidState\n\t * @protected\n\t * @return {Boolean} [description]\n\t */\n\t_isValidState() {\n\t\tconst validState =\n\t\t\tthis.state.linkHref &&\n\t\t\t(this.state.linkHref !== this.state.initialLink.href ||\n\t\t\t\tthis.state.linkTarget !== this.state.initialLink.target);\n\n\t\treturn validState;\n\t}\n\n\t/**\n\t * Removes the link in the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _removeLink\n\t * @protected\n\t */\n\t_removeLink = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst linkUtils = new CKEDITOR.Link(editor);\n\t\tconst selection = editor.getSelection();\n\t\tconst bookmarks = selection.createBookmarks();\n\n\t\tlinkUtils.remove(this.state.element, {advance: true});\n\n\t\tselection.selectBookmarks(bookmarks);\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\tthis.props.cancelExclusive();\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n\n\t/**\n\t * Update autocompleteSelected state to focus and select autocomplete´s dropdown\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _setAutocompleteState\n\t * @protected\n\t */\n\t_setAutocompleteState(state) {\n\t\tthis.setState({\n\t\t\tautocompleteSelected: state.selected,\n\t\t});\n\t}\n\n\t/**\n\t * Updates the link in the editor element. If the element didn't exist previously, it will\n\t * create a new <a> element with the href specified in the link input.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _updateLink\n\t * @protected\n\t */\n\t_updateLink = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst linkUtils = new CKEDITOR.Link(editor, {\n\t\t\tappendProtocol: this.props.appendProtocol,\n\t\t});\n\t\tlet linkAttrs = {\n\t\t\ttarget: this.state.linkTarget || null,\n\t\t};\n\t\tconst modifySelection = {advance: true};\n\n\t\tif (this.state.linkHref) {\n\t\t\tif (this.state.element) {\n\t\t\t\tlinkAttrs.href = this.state.linkHref;\n\n\t\t\t\tlinkUtils.update(\n\t\t\t\t\tlinkAttrs,\n\t\t\t\t\tthis.state.element,\n\t\t\t\t\tmodifySelection\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (!this.state.linkTarget) linkAttrs = {};\n\n\t\t\t\tlinkUtils.create(\n\t\t\t\t\tthis.state.linkHref,\n\t\t\t\t\tlinkAttrs,\n\t\t\t\t\tmodifySelection\n\t\t\t\t);\n\t\t\t}\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t}\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\tthis.props.cancelExclusive();\n\t};\n}\n\nexport default EditorContext.toProps(\n\tWidgetDropdown(WidgetFocusManager(ButtonLinkEdit))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * ButtonCfgProps is a class that provides a mergeButtonCfgProps method for\n * merging React props and the native CKEDITOR's buttonCfg.\n *\n * @class ButtonProps\n */\nexport default WrappedComponent =>\n\tclass ButtonProps extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Merges the properties, passed to the current component with user's configuration\n\t\t * via `buttonCfg` property.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonProps\n\t\t * @method mergeButtonCfgProps\n\t\t * @param {Object} props The properties to be merged with the provided configuration for this\n\t\t * button. If not passed, the user configuration will be merged with `this.props`\n\t\t * @return {Object} The merged properties\n\t\t */\n\t\tmergeButtonCfgProps(props = this.props) {\n\t\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\t\t\tconst buttonCfg = nativeEditor.config.buttonCfg || {};\n\t\t\treturn CKEDITOR.tools.merge(props, buttonCfg['linkEdit']);\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\n\n/**\n * ToolbarButtons provides a list of buttons which have to be displayed\n * on the current toolbar depending on user preferences and given state.\n *\n * @class ToolbarButtons\n */\nexport default WrappedComponent =>\n\tclass ToolbarButtons extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Lifecycle. Returns the default values of the properties used in the\n\t\t * toolbar.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method getDefaultProps\n\t\t */\n\t\tstatic defaultProps = {\n\t\t\t...WrappedComponent.defaultProps,\n\t\t\tgutter: {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 10,\n\t\t\t},\n\t\t\tconstrainToViewport: true,\n\t\t};\n\n\t\t/**\n\t\t * Cancels an scheduled animation frame.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method cancelAnimation\n\t\t */\n\t\tcancelAnimation() {\n\t\t\tif (this._animationFrameId) {\n\t\t\t\twindow.cancelAnimationFrame(this._animationFrameId);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Provides functionality for displaying toolbar Arrow box on top or on bottom of the toolbar\n\t\t * depending on the point of user interaction with the editor.\n\t\t * Returns the list of arrow box classes associated to the current element's state. It relies\n\t\t * on the getInteractionPoint method to calculate the selection direction.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method getArrowBoxClasses\n\t\t * @return {String} A string with the arrow box CSS classes.\n\t\t */\n\t\tgetArrowBoxClasses() {\n\t\t\tlet arrowBoxClasses = 'ae-arrow-box';\n\n\t\t\tif (\n\t\t\t\tthis.getInteractionPoint().direction ===\n\t\t\t\tCKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t) {\n\t\t\t\tarrowBoxClasses += ' ae-arrow-box-top';\n\t\t\t} else {\n\t\t\t\tarrowBoxClasses += ' ae-arrow-box-bottom';\n\t\t\t}\n\n\t\t\treturn arrowBoxClasses;\n\t\t}\n\n\t\t/**\n\t\t * Returns an object which contains the position of the element in page coordinates,\n\t\t * restricted to fit to given viewport.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method getConstrainedPosition\n\t\t * @param {Object} attrs The following properties, provided as numbers:\n\t\t * - height\n\t\t * - left\n\t\t * - top\n\t\t * - width\n\t\t * @param {Object} viewPaneSize Optional. If not provided, the current viewport will be used. Should contain at least these properties:\n\t\t * - width\n\t\t * @return {Object} An object with `x` and `y` properties, which represent the constrained position of the\n\t\t * element.\n\t\t */\n\t\tgetConstrainedPosition(attrs, viewPaneSize) {\n\t\t\tviewPaneSize =\n\t\t\t\tviewPaneSize ||\n\t\t\t\tnew CKEDITOR.dom.window(window).getViewPaneSize();\n\n\t\t\tlet x = attrs.left;\n\t\t\tlet y = attrs.top;\n\n\t\t\tif (attrs.left + attrs.width > viewPaneSize.width) {\n\t\t\t\tx -= attrs.left + attrs.width - viewPaneSize.width;\n\t\t\t}\n\n\t\t\tif (y < 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Returns the position, in page coordinates, according to which a toolbar should appear.\n\t\t * Depending on the direction of the selection, the wdiget may appear above of or on bottom of the selection.\n\t\t *\n\t\t * It depends on the props editorEvent to analyze the following user-interaction parameters:\n\t\t * - {Object} selectionData The data about the selection in the editor as returned from\n\t\t * {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t\t * - {Number} pos Contains the coordinates of the position, considered as most appropriate.\n\t\t * This may be the point where the user released the mouse, or just the beginning or the end of\n\t\t * the selection.\n\t\t *\n\t\t * @instance\n\t\t * @method getInteractionPoint\n\t\t * @return {Object} An Object which contains the following properties:\n\t\t * direction, x, y, where x and y are in page coordinates and direction can be one of these:\n\t\t * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t */\n\t\tgetInteractionPoint() {\n\t\t\tconst eventPayload = this.props.editorEvent\n\t\t\t\t? this.props.editorEvent.data\n\t\t\t\t: null;\n\n\t\t\tif (!eventPayload) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selectionData = eventPayload.selectionData;\n\n\t\t\tconst nativeEvent = eventPayload.nativeEvent;\n\n\t\t\tconst pos = {\n\t\t\t\tx: eventPayload.nativeEvent.pageX,\n\t\t\t\ty: selectionData.region.top,\n\t\t\t};\n\n\t\t\tlet direction = selectionData.region.direction;\n\n\t\t\tconst endRect = selectionData.region.endRect;\n\n\t\t\tconst startRect = selectionData.region.startRect;\n\n\t\t\tif (endRect && startRect && startRect.top === endRect.top) {\n\t\t\t\tdirection = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t\t}\n\n\t\t\tlet x;\n\t\t\tlet y;\n\n\t\t\t// If we have the point where user released the mouse, show Toolbar at this point\n\t\t\t// otherwise show it on the middle of the selection.\n\n\t\t\tif (pos.x && pos.y) {\n\t\t\t\tx = this._getXPoint(selectionData, pos.x);\n\n\t\t\t\tif (direction === CKEDITOR.SELECTION_BOTTOM_TO_TOP) {\n\t\t\t\t\ty = Math.min(pos.y, selectionData.region.top);\n\t\t\t\t} else {\n\t\t\t\t\ty = Math.max(\n\t\t\t\t\t\tpos.y,\n\t\t\t\t\t\tthis._getYPoint(selectionData, nativeEvent)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tx = selectionData.region.left + selectionData.region.width / 2;\n\n\t\t\t\tif (direction === CKEDITOR.SELECTION_TOP_TO_BOTTOM) {\n\t\t\t\t\ty = this._getYPoint(selectionData, nativeEvent);\n\t\t\t\t} else {\n\t\t\t\t\ty = selectionData.region.top;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdirection,\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Returns the position of the toolbar.\n\t\t *\n\t\t * @instance\n\t\t * @method _getXPoint\n\t\t * @param {Object} eventX The X coordinate received from the native event (mouseup).\n\t\t * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t\t * @protected\n\t\t * @return {Number} The calculated X point in page coordinates.\n\t\t */\n\t\t_getXPoint(selectionData, eventX) {\n\t\t\tconst region = selectionData.region;\n\n\t\t\tconst left = region.startRect ? region.startRect.left : region.left;\n\t\t\tconst right = region.endRect ? region.endRect.right : region.right;\n\n\t\t\tlet x;\n\n\t\t\tif (left < eventX && right > eventX) {\n\t\t\t\tx = eventX;\n\t\t\t} else {\n\t\t\t\tconst leftDist = Math.abs(left - eventX);\n\t\t\t\tconst rightDist = Math.abs(right - eventX);\n\n\t\t\t\tif (leftDist < rightDist) {\n\t\t\t\t\t// user raised the mouse on left on the selection\n\t\t\t\t\tx = left;\n\t\t\t\t} else {\n\t\t\t\t\tx = right;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn x;\n\t\t}\n\n\t\t/**\n\t\t * Returns the position of the toolbar.\n\t\t *\n\t\t * @instance\n\t\t * @method _getYPoint\n\t\t * @param {Object} nativeEvent The data about event is fired\n\t\t * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t\t * @protected\n\t\t * @return {Number} The calculated Y point in page coordinates.\n\t\t */\n\t\t_getYPoint(selectionData, nativeEvent) {\n\t\t\tlet y = 0;\n\n\t\t\tif (selectionData && nativeEvent) {\n\t\t\t\tconst elementTarget = new CKEDITOR.dom.element(\n\t\t\t\t\tnativeEvent.target\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\telementTarget.$ &&\n\t\t\t\t\telementTarget.getStyle('overflow') === 'auto'\n\t\t\t\t) {\n\t\t\t\t\ty =\n\t\t\t\t\t\tnativeEvent.target.offsetTop +\n\t\t\t\t\t\tnativeEvent.target.offsetHeight;\n\t\t\t\t} else {\n\t\t\t\t\ty = selectionData.region.bottom;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn y;\n\t\t}\n\n\t\t/**\n\t\t * Returns the position of the toolbar taking in consideration the\n\t\t * {{#crossLink \"ToolbarButtons/gutter:attribute\"}}{{/crossLink}} attribute.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @protected\n\t\t * @method  getWidgetXYPoint\n\t\t * @param {Number} left The left offset in page coordinates where Toolbar should be shown.\n\t\t * @param {Number} top The top offset in page coordinates where Toolbar should be shown.\n\t\t * @param {Number} direction The direction of the selection. May be one of the following:\n\t\t * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t * @return {Array} An Array with left and top offsets in page coordinates.\n\t\t */\n\t\tgetWidgetXYPoint(left, top, direction) {\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\tconst gutter = this.props.gutter;\n\n\t\t\tif (\n\t\t\t\tdirection === CKEDITOR.SELECTION_TOP_TO_BOTTOM ||\n\t\t\t\tdirection === CKEDITOR.SELECTION_BOTTOM_TO_TOP\n\t\t\t) {\n\t\t\t\tleft = left - gutter.left - domNode.offsetWidth / 2;\n\n\t\t\t\ttop =\n\t\t\t\t\tdirection === CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t\t\t\t? top + gutter.top\n\t\t\t\t\t\t: top - domNode.offsetHeight - gutter.top;\n\t\t\t} else if (\n\t\t\t\tdirection === CKEDITOR.SELECTION_LEFT_TO_RIGHT ||\n\t\t\t\tdirection === CKEDITOR.SELECTION_RIGHT_TO_LEFT\n\t\t\t) {\n\t\t\t\tleft =\n\t\t\t\t\tdirection === CKEDITOR.SELECTION_LEFT_TO_RIGHT\n\t\t\t\t\t\t? left + gutter.left + domNode.offsetHeight / 2\n\t\t\t\t\t\t: left - (3 * domNode.offsetHeight) / 2 - gutter.left;\n\n\t\t\t\ttop = top - gutter.top - domNode.offsetHeight / 2;\n\t\t\t}\n\n\t\t\tif (left < 0) {\n\t\t\t\tleft = 0;\n\t\t\t}\n\n\t\t\tif (top < 0) {\n\t\t\t\ttop = 0;\n\t\t\t}\n\n\t\t\treturn [left, top];\n\t\t}\n\n\t\t/**\n\t\t * Returns true if the toolbar is visible, false otherwise\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method isVisible\n\t\t * @return {Boolean} True if the toolbar is visible, false otherwise\n\t\t */\n\t\tisVisible() {\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\tif (domNode) {\n\t\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\t\treturn domElement.hasClass('alloy-editor-visible');\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * Moves a toolbar from a starting point to a destination point.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method moveToPoint\n\t\t * @param  {Object} startPoint The starting point for the movement.\n\t\t * @param  {Object} endPoint The destination point for the movement.\n\t\t */\n\t\tmoveToPoint(startPoint, endPoint) {\n\t\t\tconst domElement = new CKEDITOR.dom.element(\n\t\t\t\tReactDOM.findDOMNode(this)\n\t\t\t);\n\n\t\t\tdomElement.setStyles({\n\t\t\t\tleft: startPoint[0] + 'px',\n\t\t\t\ttop: startPoint[1] + 'px',\n\t\t\t\topacity: 0,\n\t\t\t\tpointerEvents: 'none',\n\t\t\t});\n\n\t\t\tdomElement.removeClass('alloy-editor-invisible');\n\n\t\t\tthis._animationFrameId = window.requestAnimationFrame(() => {\n\t\t\t\tdomElement.addClass('ae-toolbar-transition');\n\t\t\t\tdomElement.addClass('alloy-editor-visible');\n\t\t\t\tdomElement.setStyles({\n\t\t\t\t\tleft: endPoint[0] + 'px',\n\t\t\t\t\ttop: endPoint[1] + 'px',\n\t\t\t\t\topacity: 1,\n\t\t\t\t});\n\n\t\t\t\t// 150ms to match transition-duration for .ae-toolbar-transition:\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tdomElement.setStyles({\n\t\t\t\t\t\tpointerEvents: '',\n\t\t\t\t\t});\n\t\t\t\t}, 150);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Shows the toolbar with the default animation transition.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method show\n\t\t */\n\t\tshow() {\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\t\t\tconst uiNode = this.context.editor.get('uiNode');\n\n\t\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\t\tif (!this.isVisible() && domNode) {\n\t\t\t\tconst interactionPoint = this.getInteractionPoint();\n\n\t\t\t\tif (interactionPoint) {\n\t\t\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\t\t\tlet finalX;\n\t\t\t\t\tlet finalY;\n\t\t\t\t\tlet initialX;\n\t\t\t\t\tlet initialY;\n\n\t\t\t\t\tfinalX = initialX = parseFloat(domElement.getStyle('left'));\n\t\t\t\t\tfinalY = initialY = parseFloat(domElement.getStyle('top'));\n\n\t\t\t\t\tif (this.props.constrainToViewport) {\n\t\t\t\t\t\tconst res = this.getConstrainedPosition({\n\t\t\t\t\t\t\theight: parseFloat(domNode.offsetHeight),\n\t\t\t\t\t\t\tleft: finalX,\n\t\t\t\t\t\t\ttop: finalY,\n\t\t\t\t\t\t\twidth: parseFloat(domNode.offsetWidth),\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfinalX = res.x;\n\t\t\t\t\t\tfinalY = res.y;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tinteractionPoint.direction ===\n\t\t\t\t\t\tCKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t\t\t) {\n\t\t\t\t\t\tinitialY =\n\t\t\t\t\t\t\tthis.props.selectionData.region.bottom + scrollTop;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinitialY =\n\t\t\t\t\t\t\tthis.props.selectionData.region.top + scrollTop;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.moveToPoint([initialX, initialY], [finalX, finalY]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Updates the toolbar position based on the current interaction point.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method updatePosition\n\t\t */\n\t\tupdatePosition() {\n\t\t\tconst interactionPoint = this.getInteractionPoint();\n\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\tif (interactionPoint && domNode) {\n\t\t\t\tconst uiNode =\n\t\t\t\t\tthis.context.editor.get('uiNode') || document.body;\n\t\t\t\tconst uiNodeStyle = getComputedStyle(uiNode);\n\t\t\t\tconst uiNodeMarginLeft = parseInt(\n\t\t\t\t\tuiNodeStyle.getPropertyValue('margin-left'),\n\t\t\t\t\t10\n\t\t\t\t);\n\t\t\t\tconst uiNodeMarginRight = parseInt(\n\t\t\t\t\tuiNodeStyle.getPropertyValue('margin-right'),\n\t\t\t\t\t10\n\t\t\t\t);\n\t\t\t\tconst totalWidth =\n\t\t\t\t\tuiNodeMarginLeft +\n\t\t\t\t\tdocument.body.clientWidth +\n\t\t\t\t\tuiNodeMarginRight;\n\n\t\t\t\tconst scrollTop =\n\t\t\t\t\tuiNode.tagName !== 'BODY' ? uiNode.scrollTop : 0;\n\n\t\t\t\tconst xy = this.getWidgetXYPoint(\n\t\t\t\t\tinteractionPoint.x,\n\t\t\t\t\tinteractionPoint.y,\n\t\t\t\t\tinteractionPoint.direction\n\t\t\t\t);\n\t\t\t\txy[1] += scrollTop;\n\n\t\t\t\tif (xy[0] < 0) {\n\t\t\t\t\txy[0] = 0;\n\t\t\t\t}\n\t\t\t\tif (xy[0] > totalWidth - domNode.offsetWidth) {\n\t\t\t\t\txy[0] = totalWidth - domNode.offsetWidth;\n\t\t\t\t}\n\n\t\t\t\tnew CKEDITOR.dom.element(domNode).setStyles({\n\t\t\t\t\tleft: xy[0] + 'px',\n\t\t\t\t\ttop: xy[1] + 'px',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Analyses the current selection and returns the buttons or button groups to be rendered.\n\t\t *\n\t\t * @instance\n\t\t * @method getToolbarButtonGroups\n\t\t * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n\t\t * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n\t\t * @return {Array} An Array which contains the buttons or button groups that should be rendered.\n\t\t */\n\t\tgetToolbarButtonGroups(buttons, additionalProps) {\n\t\t\tif (Lang.isFunction(buttons)) {\n\t\t\t\tbuttons = buttons.call(this) || [];\n\t\t\t}\n\n\t\t\treturn buttons.reduce((list, button) => {\n\t\t\t\tif (Array.isArray(button)) {\n\t\t\t\t\tlist.push(this.getToolbarButtons(button, additionalProps));\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\treturn this.getToolbarButtons(buttons, additionalProps);\n\t\t\t\t}\n\t\t\t}, []);\n\t\t}\n\n\t\t/**\n\t\t * Analyzes the current selection and the buttons exclusive mode value to figure out which\n\t\t * buttons should be present in a given state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method getToolbarButtons\n\t\t * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n\t\t * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n\t\t * @return {Array} An Array which contains the buttons that should be rendered.\n\t\t */\n\t\tgetToolbarButtons(buttons, additionalProps) {\n\t\t\tconst buttonProps = {};\n\n\t\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\t\t\tconst buttonCfg = nativeEditor.config.buttonCfg || {};\n\n\t\t\tif (Lang.isFunction(buttons)) {\n\t\t\t\tbuttons = buttons.call(this) || [];\n\t\t\t}\n\n\t\t\tconst toolbarButtons = this.filterExclusive(\n\t\t\t\tbuttons\n\t\t\t\t\t.filter(button => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tbutton &&\n\t\t\t\t\t\t\t(AlloyEditor.Buttons[button] ||\n\t\t\t\t\t\t\t\tAlloyEditor.Buttons[button.name])\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.map(button => {\n\t\t\t\t\t\tif (Lang.isString(button)) {\n\t\t\t\t\t\t\tbuttonProps[button] = buttonCfg[button];\n\t\t\t\t\t\t\tbutton = AlloyEditor.Buttons[button];\n\t\t\t\t\t\t} else if (Lang.isString(button.name)) {\n\t\t\t\t\t\t\tbuttonProps[\n\t\t\t\t\t\t\t\tAlloyEditor.Buttons[button.name].key\n\t\t\t\t\t\t\t] = CKEDITOR.tools.merge(\n\t\t\t\t\t\t\t\tbuttonCfg[button],\n\t\t\t\t\t\t\t\tbutton.cfg\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbutton = AlloyEditor.Buttons[button.name];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn button;\n\t\t\t\t\t})\n\t\t\t).map(function(button, index) {\n\t\t\t\tlet props = this.mergeExclusiveProps(\n\t\t\t\t\t{\n\t\t\t\t\t\teditor: this.context.editor,\n\t\t\t\t\t\tkey:\n\t\t\t\t\t\t\tbutton.key !== 'separator'\n\t\t\t\t\t\t\t\t? button.key\n\t\t\t\t\t\t\t\t: `${button.key}-${index}`,\n\t\t\t\t\t\ttabKey: button.key,\n\t\t\t\t\t\ttabIndex:\n\t\t\t\t\t\t\tthis.props.trigger &&\n\t\t\t\t\t\t\tthis.props.trigger.props.tabKey === button.key\n\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t: -1,\n\t\t\t\t\t\ttrigger: this.props.trigger,\n\t\t\t\t\t},\n\t\t\t\t\tbutton.key\n\t\t\t\t);\n\n\t\t\t\tprops = this.mergeDropdownProps(props, button.key);\n\n\t\t\t\tif (additionalProps) {\n\t\t\t\t\tprops = CKEDITOR.tools.merge(props, additionalProps);\n\t\t\t\t}\n\n\t\t\t\tprops = CKEDITOR.tools.merge(props, buttonProps[button.key]);\n\n\t\t\t\treturn React.createElement(button, props);\n\t\t\t}, this);\n\n\t\t\treturn toolbarButtons;\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from './lang';\n\n/**\n * Sets the prototype, constructor and superclass properties to support an inheritance strategy\n * that can chain constructors and methods. Static members will not be inherited.\n *\n * @memberof OOP\n * @method extend\n * @param {Function} receiver The class which will extend another class.\n * @param {Function} supplier The class which will provide the properties the child class.\n * @param {Object} protoProps Prototype properties to add/override.\n * @param {Object} staticProps Static properties to add/overwrite.\n * @return {Function} The extended class.\n * @static\n */\nconst extend = function(receiver, supplier, protoProps, staticProps) {\n\tif (!supplier || !receiver) {\n\t\tthrow new Error('extend failed, verify dependencies');\n\t}\n\n\tconst supplierProto = supplier.prototype;\n\n\tconst receiverProto = Object.create(supplierProto);\n\treceiver.prototype = receiverProto;\n\n\treceiverProto.constructor = receiver;\n\treceiver.superclass = supplierProto;\n\n\t// assign constructor property\n\tif (\n\t\tsupplier !== Object &&\n\t\tsupplierProto.constructor === Object.prototype.constructor\n\t) {\n\t\tsupplierProto.constructor = supplier;\n\t}\n\n\t// add prototype overrides\n\tif (protoProps) {\n\t\tLang.mix(receiverProto, protoProps);\n\t}\n\n\t// add object overrides\n\tif (staticProps) {\n\t\tLang.mix(receiver, staticProps);\n\t}\n\n\treturn receiver;\n};\n\nexport default extend;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst _isRangeAtElementEnd = function(range, element) {\n\t// Finding if a range is at the end of an element is somewhat tricky\n\t// due to how CKEditor handles ranges. It might depend on whether a\n\t// source node inside the element is selected or not. For now, we\n\t// need to cover the following cases:\n\t//\n\t// - The text length of the element is the same as the endOffset of\n\t//   the range.\n\t// - Both start and end containers match the element and the start\n\t//   and end offsets are 1.\n\n\treturn (\n\t\telement.getText().length === range.endOffset ||\n\t\t(element.equals(range.startContainer) &&\n\t\t\telement.equals(range.endContainer) &&\n\t\t\trange.startOffset === range.endOffset &&\n\t\t\trange.endOffset === 1)\n\t);\n};\n\nconst embedSelectionTest = function(payload) {\n\tconst selectionData = payload.data.selectionData;\n\n\treturn !!(\n\t\tselectionData.element &&\n\t\tselectionData.element.getAttribute('data-widget') === 'ae_embed'\n\t);\n};\n\nconst embedUrlSelectionTest = function(payload) {\n\tconst selectionData = payload.data.selectionData;\n\n\treturn !!(\n\t\tselectionData.element &&\n\t\tselectionData.element.getAttribute('data-widget') === 'embedurl'\n\t);\n};\n\nconst headingTextSelectionTest = function(payload) {\n\tconst headings = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\tconst selectionData = payload.data.selectionData;\n\tconst selectionEmpty = nativeEditor.isSelectionEmpty();\n\n\treturn !!(\n\t\t!selectionData.element &&\n\t\tselectionData.region &&\n\t\t!selectionEmpty &&\n\t\t!nativeEditor\n\t\t\t.getSelection()\n\t\t\t.getCommonAncestor()\n\t\t\t.isReadOnly() &&\n\t\tnativeEditor.elementPath().contains(headings)\n\t);\n};\n\nconst linkSelectionTest = function(payload) {\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\tconst range = nativeEditor.getSelection().getRanges()[0];\n\tconst selectionData = payload.data.selectionData;\n\n\tconst element = new CKEDITOR.Link(nativeEditor).getFromSelection();\n\tconst isSelectionEmpty = nativeEditor.isSelectionEmpty();\n\tconst elementIsNotImage = selectionData.element\n\t\t? selectionData.element.getName() !== 'img'\n\t\t: true;\n\n\treturn !!(\n\t\tisSelectionEmpty &&\n\t\telementIsNotImage &&\n\t\telement &&\n\t\telement.getText().length !== range.endOffset &&\n\t\telement &&\n\t\t!element.isReadOnly() &&\n\t\t!_isRangeAtElementEnd(range, element)\n\t);\n};\n\nconst imageSelectionTest = function(payload) {\n\tconst selectionData = payload.data.selectionData;\n\tconst element = selectionData.element;\n\tconst hasImage = !!element && !!element.findOne('img');\n\tconst isImage = !!element && element.getName() === 'img';\n\n\treturn !!(element && (hasImage || isImage));\n};\n\nconst textSelectionTest = function(payload) {\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\n\tconst selectionEmpty = nativeEditor.isSelectionEmpty();\n\n\tconst selectionData = payload.data.selectionData;\n\n\treturn !!(\n\t\t!selectionData.element &&\n\t\tselectionData.region &&\n\t\t!selectionEmpty &&\n\t\t!nativeEditor\n\t\t\t.getSelection()\n\t\t\t.getCommonAncestor()\n\t\t\t.isReadOnly()\n\t);\n};\n\nconst tableSelectionTest = function(payload) {\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\n\tconst table = new CKEDITOR.Table(nativeEditor);\n\tconst element = table.getFromSelection();\n\n\treturn !!(element && table.isEditable(element));\n};\n\nconst SelectionTest = {\n\tembed: embedSelectionTest,\n\tembedUrl: embedUrlSelectionTest,\n\theader: headingTextSelectionTest,\n\timage: imageSelectionTest,\n\tlink: linkSelectionTest,\n\ttable: tableSelectionTest,\n\ttext: textSelectionTest,\n};\n\nexport default SelectionTest;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\n/**\n * The ButtonsStylesListHeader class provides the header of an list of style items.\n *\n * @class ButtonsStylesListHeader\n */\nclass ButtonsStylesListHeader extends React.Component {\n\tstatic key = 'buttonStylesListHeader';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonsStylesListHeader\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.styles && this.props.styles.length) {\n\t\t\treturn <span className=\"ae-list-header\">{this.props.name}</span>;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport default ButtonsStylesListHeader;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * The ButtonStylesListItemRemove class provides functionality for previewing a style definition\n * inside a list and applying it to the current editor selection.\n *\n * @class ButtonStylesListItemRemove\n */\nclass ButtonStylesListItemRemove extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItemRemove\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tremoveBlocks: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'pre'],\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonStylesListItemRemove\n\t * @memberof ButtonStylesListItemRemove\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonStylesListItemRemove';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItemRemove\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<li role=\"option\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this._removeStyles}\n\t\t\t\t\ttabIndex={this.props.tabIndex}>\n\t\t\t\t\t{AlloyEditor.Strings.normal}\n\t\t\t\t</button>\n\t\t\t</li>\n\t\t);\n\t}\n\n\t/**\n\t * Removes all inline styles and configured block elements applied to the current selection.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItemRemove\n\t * @method _removeStyles\n\t * @protected\n\t */\n\t_removeStyles = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\teditor.execCommand('removeFormat');\n\n\t\tthis.props.removeBlocks.forEach(blockItem => {\n\t\t\tconst blockStyle = new CKEDITOR.style({element: blockItem});\n\n\t\t\teditor.removeStyle(blockStyle);\n\t\t});\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n}\n\nexport default ButtonStylesListItemRemove;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonActionStyle from '../base/button-action-style';\nimport ButtonStyle from '../base/button-style';\n\n/**\n * The ButtonStylesListItem class provides functionality for previewing a style definition\n * inside a list and applying it to the current editor selection.\n *\n * @class ButtonStylesListItem\n * @uses ButtonActionStyle\n * @uses ButtonStyle\n */\nclass ButtonStylesListItem extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonStylesListItem\n\t * @memberof ButtonStylesListItem\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonStylesListItem';\n\n\t/**\n\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItem\n\t * @method componentWillMount\n\t */\n\tcomponentWillMount() {\n\t\t// Styles with wildcard element (*) generate an empty tag in their preview < class=\"custom-class\" />.\n\t\t// We default to element span and remove the margins to obtain a more consistent set of previews.\n\t\tlet styleCfg = {\n\t\t\telement: 'span',\n\t\t\tstyles: {\n\t\t\t\tmargin: 0,\n\t\t\t},\n\t\t};\n\n\t\tstyleCfg = CKEDITOR.tools.merge(styleCfg, this.props.style);\n\n\t\tthis._preview = new CKEDITOR.style(styleCfg).buildPreview(\n\t\t\tthis.props.name\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItem\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\t// We need to use dangerouselySetInnterHTML since we're not in control of the style\n\t\t// preview that is generated by CKEditor.\n\t\tconst className =\n\t\t\tthis.props.name === this.props.activeStyle\n\t\t\t\t? 'ae-toolbar-element active'\n\t\t\t\t: 'ae-toolbar-element';\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\tclassName={className}\n\t\t\t\tdangerouslySetInnerHTML={{__html: this._preview}}\n\t\t\t\tonClick={this._onClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Applies the item style to the editor selection.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItem\n\t * @method _onClick\n\t * @protected\n\t */\n\t_onClick = () => {\n\t\tif (this.props.styleFn) {\n\t\t\tthis.props.styleFn();\n\t\t} else {\n\t\t\t// Typically, we want the style to be the only one applied to the current selection, so\n\t\t\t// we execute the 'removeFormat' command first. Note that block styles won't be cleaned.\n\t\t\t// However, this is consistent with other editors implementations of this feature.\n\t\t\tthis.context.editor.get('nativeEditor').execCommand('removeFormat');\n\n\t\t\tthis.applyStyle();\n\t\t}\n\t};\n}\n\nexport default ButtonActionStyle(ButtonStyle(ButtonStylesListItem));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * The ButtonCameraImage class takes photo from camera and inserts it to the content.\n *\n * @class ButtonCameraImage\n */\nclass ButtonCameraImage extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t */\n\tstatic defaultProps = {\n\t\tvideoWidth: 320,\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default cameraImage\n\t * @memberof ButtonCameraImage\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'cameraImage';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis._buttonTakePhotoRef = React.createRef();\n\t\tthis._canvasContainerRef = React.createRef();\n\t\tthis._videoContainerRef = React.createRef();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses the take photo button.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._buttonTakePhotoRef.current.focus();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tif (this._stream) {\n\t\t\tif (this._stream.stop) {\n\t\t\t\tthis._stream.stop();\n\t\t\t} else if (this._stream.getVideoTracks) {\n\t\t\t\tthis._stream.getVideoTracks().forEach(track => {\n\t\t\t\t\ttrack.stop();\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._stream = null;\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst getUserMedia =\n\t\t\tnavigator.getUserMedia ||\n\t\t\tnavigator.webkitGetUserMedia ||\n\t\t\tnavigator.mozGetUserMedia ||\n\t\t\tnavigator.msGetUserMedia;\n\n\t\tgetUserMedia.call(\n\t\t\tnavigator,\n\t\t\t{\n\t\t\t\tvideo: true,\n\t\t\t\taudio: false,\n\t\t\t},\n\t\t\tthis._handleStreamSuccess,\n\t\t\tthis._handleStreamError\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"ae-camera\">\n\t\t\t\t<video ref={this._videoContainerRef}>\n\t\t\t\t\tVideo stream not available.\n\t\t\t\t</video>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"ae-camera-shoot\"\n\t\t\t\t\tonClick={this.takePhoto}\n\t\t\t\t\tref={this._buttonTakePhotoRef}>\n\t\t\t\t\tTake photo\n\t\t\t\t</button>\n\t\t\t\t<canvas\n\t\t\t\t\tclassName=\"ae-camera-canvas\"\n\t\t\t\t\tref={this._canvasContainerRef}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Takes photo from the video stream and inserts in into editor's content.\n\t *\n\t * @fires ButtonCameraImage#imageCameraAdd\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method takePhoto\n\t */\n\ttakePhoto = () => {\n\t\tconst videoEl = this._videoContainerRef.current;\n\t\tconst canvasEl = this._canvasContainerRef.current;\n\n\t\tconst context = canvasEl.getContext('2d');\n\n\t\tconst height = this._videoHeight;\n\t\tconst width = this.props.videoWidth;\n\n\t\tif (width && height) {\n\t\t\tcanvasEl.width = width;\n\t\t\tcanvasEl.height = height;\n\n\t\t\tcontext.drawImage(videoEl, 0, 0, width, height);\n\n\t\t\tconst imgURL = canvasEl.toDataURL('image/png');\n\n\t\t\tconst el = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t'<img src=\"' + imgURL + '\">'\n\t\t\t);\n\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\teditor.insertElement(el);\n\n\t\t\tthis.props.cancelExclusive();\n\n\t\t\teditor.fire('actionPerformed', this);\n\n\t\t\teditor.fire('imageCameraAdd', el);\n\t\t}\n\t};\n\n\t/**\n\t * Displays error message in case of video stream capturing failure.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method _handleStreamError\n\t * @param {Event} error The fired event in case of error.\n\t * @protected\n\t */\n\t_handleStreamError = error => {\n\t\twindow.alert('An error occurred! ' + error);\n\t};\n\n\t/**\n\t * Starts streaming video in the video element and sets width/height to the video\n\t * and canvas elements.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method _handleStreamSuccess\n\t * @param {Object} stream The video stream\n\t * @protected\n\t */\n\t_handleStreamSuccess = stream => {\n\t\tconst videoEl = this._videoContainerRef.current;\n\t\tconst canvasEl = this._canvasContainerRef.current;\n\n\t\tvideoEl.addEventListener(\n\t\t\t'canplay',\n\t\t\t() => {\n\t\t\t\tlet height =\n\t\t\t\t\tvideoEl.videoHeight /\n\t\t\t\t\t(videoEl.videoWidth / this.props.videoWidth);\n\n\t\t\t\tif (isNaN(height)) {\n\t\t\t\t\theight = this.props.videoWidth / (4 / 3);\n\t\t\t\t}\n\n\t\t\t\tvideoEl.setAttribute('width', this.props.videoWidth);\n\t\t\t\tvideoEl.setAttribute('height', height);\n\t\t\t\tcanvasEl.setAttribute('width', this.props.videoWidth);\n\t\t\t\tcanvasEl.setAttribute('height', height);\n\n\t\t\t\tthis._videoHeight = height;\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\tthis._stream = stream;\n\n\t\tif (navigator.mozGetUserMedia) {\n\t\t\tvideoEl.mozSrcObject = stream;\n\t\t} else {\n\t\t\tvideoEl.srcObject = stream;\n\t\t}\n\n\t\tvideoEl.play();\n\n\t\tthis._buttonTakePhotoRef.current.disabled = false;\n\t};\n\n\t/**\n\t * Fired when an image is being taken from the camera and added as an element to the editor.\n\t *\n\t * @event ButtonCameraImage#imageCameraAdd\n\t * @memberof ButtonCameraImage\n\t * @param {CKEDITOR.dom.element} el The created img element in editor.\n\t */\n}\n\nexport default ButtonCameraImage;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\n\n/**\n * The ButtonCommandListItem class is a UI class that renders a ButtonCommand that can be used inside\n * a list as an item, with a string representation of its behaviour.\n *\n * @class ButtonCommandListItem\n * @uses ButtonCommand\n */\nclass ButtonCommandListItem extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonCommandListItem\n\t * @memberof ButtonCommandListItem\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonCommandListItem';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandListItem\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={this.props.description}\n\t\t\t\tclassName={this._getClassName()}\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}>\n\t\t\t\t{this.props.description}\n\t\t\t</button>\n\t\t);\n\t}\n\n\t/**\n\t * Returns the class name of Widget.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandListItem\n\t * @method _getClassName\n\t * @protected\n\t * @return {String} The class name of the Widget.\n\t */\n\t_getClassName() {\n\t\tconst className = 'ae-container ae-toolbar-element';\n\n\t\treturn className;\n\t}\n}\n\nexport default ButtonCommand(ButtonCommandListItem);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\nconst KEY_ENTER = 13;\nconst KEY_ESC = 27;\n\n/**\n * The ButtonEmbedEdit class provides functionality for creating and editing an embed link in a document.\n * Provides UI for creating and editing an embed link.\n *\n * @class ButtonEmbedEdit\n */\nclass ButtonEmbedEdit extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default embedEdit\n\t * @memberof ButtonEmbedEdit\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'embedEdit';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.linkInput = React.createRef();\n\t\tthis.state = this.getInitialState();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the link input to immediately allow editing. This should only happen if the component\n\t * is rendered in exclusive mode to prevent aggressive focus stealing.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tif (this.props.renderExclusive || this.props.manualSelection) {\n\t\t\t// We need to wait for the next rendering cycle before focusing to avoid undesired\n\t\t\t// scrolls on the page\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(this._focusLinkInput);\n\t\t\t} else {\n\t\t\t\tsetTimeout(this._focusLinkInput, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps() {\n\t\tthis.setState(this.getInitialState());\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once before the component is mounted.\n\t * The return value will be used as the initial value of this.state.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method getInitialState\n\t */\n\tgetInitialState() {\n\t\t// Can't access context from constructor, so get editor from props.\n\t\tconst editor = this.props.context.editor.get('nativeEditor');\n\t\tlet embed;\n\n\t\tconst selection = editor.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif (selectedElement) {\n\t\t\t\tembed = selectedElement.findOne('[data-widget=\"ae_embed\"]');\n\t\t\t}\n\t\t}\n\n\t\tconst href = embed ? embed.getAttribute('data-ae-embed-url') : '';\n\n\t\treturn {\n\t\t\telement: embed,\n\t\t\tinitialLink: {\n\t\t\t\thref,\n\t\t\t},\n\t\t\tlinkHref: href,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst clearLinkStyle = {\n\t\t\topacity: this.state.linkHref ? 1 : 0,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-edit-link\">\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.deleteEmbed}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-embed-remove\"\n\t\t\t\t\tdisabled={!this.state.element}\n\t\t\t\t\tonClick={this._removeEmbed}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.deleteEmbed}>\n\t\t\t\t\t<ButtonIcon className=\"ae-icon-svg-trash\" symbol=\"trash\" />\n\t\t\t\t</button>\n\t\t\t\t<div className=\"ae-container-input xxl\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\tonChange={this._handleLinkHrefChange}\n\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\tplaceholder={AlloyEditor.Strings.editLink}\n\t\t\t\t\t\tref={this.linkInput}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={this.state.linkHref}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-label={AlloyEditor.Strings.clearInput}\n\t\t\t\t\t\tclassName=\"ae-button ae-button-clear\"\n\t\t\t\t\t\tonClick={this._clearLink}\n\t\t\t\t\t\tstyle={clearLinkStyle}\n\t\t\t\t\t\ttitle={AlloyEditor.Strings.clear}>\n\t\t\t\t\t\t<ButtonIcon symbol=\"times-clear\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.confirm}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdisabled={!this._isValidState()}\n\t\t\t\t\tonClick={this._embedLink}\n\t\t\t\t\ttitle={AlloyEditor.Strings.confirm}>\n\t\t\t\t\t<ButtonIcon className=\"ae-icon-svg-check\" symbol=\"check\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Clears the link input. This only changes the component internal state, but does not\n\t * affect the link element of the editor. Only the _removeLink and _updateLink methods\n\t * are translated to the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _clearLink\n\t * @protected\n\t */\n\t_clearLink = () => {\n\t\tthis.setState({\n\t\t\tlinkHref: '',\n\t\t});\n\t};\n\n\t/**\n\t * Triggers the embedUrl command to transform the link into an embed media object\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _embedLink\n\t * @protected\n\t */\n\t_embedLink = () => {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\tnativeEditor.execCommand('embedUrl', {\n\t\t\turl: this.state.linkHref,\n\t\t});\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\tthis.props.cancelExclusive();\n\t};\n\n\t/**\n\t * Focuses the user cursor on the widget's input.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _focusLinkInput\n\t * @protected\n\t */\n\t_focusLinkInput = () => {\n\t\tthis.linkInput.current.focus();\n\t};\n\n\t/**\n\t * Monitors key interaction inside the input element to respond to the keys:\n\t * - Enter: Creates/updates the link.\n\t * - Escape: Discards the changes.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _handleKeyDown\n\t * @param {SyntheticEvent} event The keyboard event.\n\t * @protected\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === KEY_ENTER || event.keyCode === KEY_ESC) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (event.keyCode === KEY_ENTER) {\n\t\t\tthis._embedLink();\n\t\t} else if (event.keyCode === KEY_ESC) {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\t\tthis.props.cancelExclusive();\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t}\n\t};\n\n\t/**\n\t * Updates the component state when the link input changes on user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _handleLinkHrefChange\n\t * @param {SyntheticEvent} event The change event.\n\t * @protected\n\t */\n\t_handleLinkHrefChange = event => {\n\t\tthis.setState({\n\t\t\tlinkHref: event.target.value,\n\t\t});\n\t};\n\n\t/**\n\t * Verifies that the current link state is valid so the user can save the link. A valid state\n\t * means that we have a non-empty href that's different from the original one.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _isValidState\n\t * @protected\n\t * @return {Boolean} True if the state is valid, false otherwise\n\t */\n\t_isValidState() {\n\t\tconst validState =\n\t\t\tthis.state.linkHref &&\n\t\t\tthis.state.linkHref !== this.state.initialLink.href;\n\n\t\treturn validState;\n\t}\n\n\t/**\n\t * Removes the embed in the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _removeEmbed\n\t * @protected\n\t */\n\t_removeEmbed = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst embedWrapper = this.state.element.getAscendant(element => {\n\t\t\treturn element.hasClass('cke_widget_wrapper');\n\t\t});\n\n\t\tembedWrapper.remove();\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n}\n\nexport default EditorContext.toProps(ButtonEmbedEdit);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\nconst KEY_ENTER = 13;\nconst KEY_ESC = 27;\n\n/**\n * The ButtonEmbedVideoEdit class provides functionality for changing text color in a document.\n *\n * @uses ButtonIcon\n *\n * @class ButtonEmbedVideoEdit\n */\nclass ButtonEmbedVideoEdit extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'embedVideoEdit';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = this.getInitialState();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the link input to immediately allow editing. This should only happen if the component\n\t * is rendered in exclusive mode to prevent aggressive focus stealing.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tif (this.props.renderExclusive || this.props.manualSelection) {\n\t\t\t// We need to wait for the next rendering cycle before focusing to avoid undesired\n\t\t\t// scrolls on the page\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(this._focusVideoUrlInput);\n\t\t\t} else {\n\t\t\t\tsetTimeout(this._focusVideoUrlInput, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps() {\n\t\tconst newState = this.getInitialState();\n\n\t\tthis.setState({\n\t\t\tall: undefined,\n\t\t\tkeys: undefined,\n\t\t\tnew: newState,\n\t\t\told: undefined,\n\t\t});\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once before the component is mounted.\n\t * The return value will be used as the initial value of this.state.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method getInitialState\n\t */\n\tgetInitialState() {\n\t\t// Can't access context from constructor, so get editor from props.\n\t\tconst editor = this.props.context.editor.get('nativeEditor');\n\t\tlet element;\n\n\t\tconst selection = editor.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif (selectedElement) {\n\t\t\t\telement = selectedElement.findOne('[data-widget=\"videoembed\"]');\n\t\t\t}\n\t\t}\n\n\t\tconst videoURL = element\n\t\t\t? element.getAttribute('data-embed-video-url')\n\t\t\t: '';\n\n\t\treturn {\n\t\t\telement,\n\t\t\tinitialEmbed: {\n\t\t\t\tvideoURL,\n\t\t\t},\n\t\t\tvideoURL,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst inputPlaceholder = AlloyEditor.Strings.pasteVideoLink;\n\n\t\tconst clearVideoURLStyle = {\n\t\t\topacity: this.state.videoURL ? 1 : 0,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-embed-video-edit\">\n\t\t\t\t<div className=\"ae-container-input xxl\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\tonChange={this._handleVideoURLChange}\n\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\tplaceholder={inputPlaceholder}\n\t\t\t\t\t\tref=\"linkInput\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={this.state.videoURL}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-label={AlloyEditor.Strings.clearInput}\n\t\t\t\t\t\tclassName=\"ae-button ae-icon-remove\"\n\t\t\t\t\t\tonClick={this._clearLink}\n\t\t\t\t\t\tstyle={clearVideoURLStyle}\n\t\t\t\t\t\ttitle={AlloyEditor.Strings.clear}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.confirm}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdisabled={!this._isValidState()}\n\t\t\t\t\tonClick={this._embedVideoURL}\n\t\t\t\t\ttitle={AlloyEditor.Strings.confirm}>\n\t\t\t\t\t<ButtonIcon symbol=\"check\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Clears the link input. This only changes the component internal state, but does not\n\t * affect the link element of the editor. Only the _removeLink and _updateLink methods\n\t * are translated to the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method _clearLink\n\t * @protected\n\t */\n\t_clearLink() {\n\t\tthis.setState({\n\t\t\tvideoURL: '',\n\t\t});\n\t}\n\n\t/**\n\t * Triggers the embedVideoUrl command to transform the link into an embed media object\n\t *\n\t * @instance\n\t * @memberof EmbedVideoEdit\n\t * @method _embedVideoURL\n\t * @protected\n\t */\n\t_embedVideoURL = () => {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\tnativeEditor.execCommand('embedUrl', {\n\t\t\ttype: 'video',\n\t\t\turl: this.state.videoURL,\n\t\t});\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\tthis.props.cancelExclusive();\n\t};\n\n\t/**\n\t * Focuses the user cursor on the widget's input.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method _focusVideoUrlInput\n\t * @protected\n\t */\n\t_focusVideoUrlInput = () => {\n\t\tReactDOM.findDOMNode(this.refs.linkInput).focus();\n\t};\n\n\t/**\n\t * Monitors key interaction inside the input element to respond to the keys:\n\t * - Enter: Creates/updates the link.\n\t * - Escape: Discards the changes.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method _handleKeyDown\n\t * @param {SyntheticEvent} event The keyboard event.\n\t * @protected\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === KEY_ENTER || event.keyCode === KEY_ESC) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (event.keyCode === KEY_ENTER) {\n\t\t\tthis._embedVideoURL();\n\t\t} else if (event.keyCode === KEY_ESC) {\n\t\t\tthis.props.cancelExclusive();\n\t\t}\n\t};\n\n\t/**\n\t * Updates the component state when the link input changes on user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method _handleVideoURLChange\n\t * @param {SyntheticEvent} event The change event.\n\t * @protected\n\t */\n\t_handleVideoURLChange = event => {\n\t\tthis.setState({\n\t\t\tvideoURL: event.target.value,\n\t\t});\n\t};\n\n\t/**\n\t * Verifies that the current link state is valid so the user can save the link. A valid state\n\t * means that we have a non-empty videoURL that's different from the original one.\n\t *\n\t * @instance\n\t * @memberof EmbedVideoEdit\n\t * @method _isValidState\n\t * @protected\n\t * @return {Boolean} True if the state is valid, false otherwise\n\t */\n\t_isValidState() {\n\t\tconst validState =\n\t\t\tthis.state.videoURL &&\n\t\t\tthis.state.videoURL !== this.state.initialEmbed.videoURL;\n\n\t\treturn validState;\n\t}\n}\n\nexport default EditorContext.toProps(ButtonEmbedVideoEdit);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonDropdown from './button-dropdown.jsx';\n\n/**\n * The ButtonLinkAutocompleteList class provides functionality for showing a list of\n * items that can be selected for the link.\n *\n * @class ButtonLinkAutocompleteList\n * @uses WidgetFocusManager\n */\nclass ButtonLinkAutocompleteList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcircular: false,\n\t\tdata: [],\n\t\tdelay: 100,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonLinkAutocompleteList\n\t * @memberof ButtonLinkAutocompleteList\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonLinkAutocompleteList';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (!nextProps.term || nextProps.term !== this.props.term) {\n\t\t\tclearTimeout(this._timeout);\n\n\t\t\tif (nextProps.term) {\n\t\t\t\tthis._timeout = setTimeout(this._updateItems, this.props.delay);\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\titems: [],\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (nextProps.autocompleteSelected) {\n\t\t\tsetTimeout(this.focus, 0);\n\t\t\tthis.props.setAutocompleteState({\n\t\t\t\tselected: false,\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this._timeout);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the list.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (!this.props.expanded || !this.state.items.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<ButtonDropdown>\n\t\t\t\t{this._renderAutocompleteItems(this.state.items)}\n\t\t\t</ButtonDropdown>\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Invoked before rendering when new props or state are being received.\n\t * This method is not called for the initial render or when forceUpdate is used.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method  shouldComponentUpdate\n\t * @return {Boolean} Returns false when the transition to the new props and state will not\n\t * require a component update.\n\t */\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\treturn (\n\t\t\tnextProps.expanded !== this.props.expanded ||\n\t\t\tnextProps.term !== this.props.term ||\n\t\t\tnextState.items !== this.state.items\n\t\t);\n\t}\n\n\t/**\n\t * Renders a set of list items for the provided items\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method _renderAutocompleteItems\n\t * @param {Array} items List of autocomplete items to render\n\t * @protected\n\t * @return {Array} Rendered list item instances\n\t */\n\t_renderAutocompleteItems(items) {\n\t\titems = items || [];\n\n\t\tconst handleLinkAutocompleteClick = this.props\n\t\t\t.handleLinkAutocompleteClick;\n\n\t\treturn items.map(item => {\n\t\t\tconst className =\n\t\t\t\tthis.props.term === item.url\n\t\t\t\t\t? 'ae-toolbar-element active'\n\t\t\t\t\t: 'ae-toolbar-element';\n\n\t\t\treturn (\n\t\t\t\t<li key={item.url} role=\"option\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\tdata-value={item.url}\n\t\t\t\t\t\tonClick={handleLinkAutocompleteClick}>\n\t\t\t\t\t\t{item.title}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the data according to {this.props.term} and calls setState() with the returned data\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method _updateItems\n\t * @protected\n\t */\n\t_updateItems() {\n\t\tif (!this.props.term) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = Promise.resolve(this.props.data(this.props.term));\n\n\t\tpromise.then(items => {\n\t\t\tif (items.length && !this.props.expanded) {\n\t\t\t\tthis.props.toggleDropdown();\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\titems,\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default WidgetFocusManager(ButtonLinkAutocompleteList);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonLinkEdit from './button-link-edit.jsx';\n\n/**\n * The LinkEditBrowse class provides functionality for creating and editing a link in a document,\n * and also allows to link to an existing file in DM.\n * Provides UI for creating, editing and removing a link.\n *\n * @class ButtonLinkEditBrowse\n */\nclass ButtonLinkEditBrowse extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'linkEditBrowse';\n\n\t/**\n\t *\n\t * @inheritDoc\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst link = new CKEDITOR.Link(\n\t\t\t// Can't access context from constructor, so get editor from props.\n\t\t\tthis.props.context.editor.get('nativeEditor')\n\t\t).getFromSelection();\n\n\t\tconst href = link ? link.getAttribute('href') : '';\n\n\t\tthis.linkEditButtonRef = React.createRef();\n\n\t\tthis.state = {\n\t\t\telement: link,\n\t\t\tlinkHref: href,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ae-container-link-edit-browse\">\n\t\t\t\t<ButtonLinkEdit ref={this.linkEditButtonRef} {...this.props} />\n\t\t\t\t<button\n\t\t\t\t\taria-label=\"Browse\"\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this._browseClick}\n\t\t\t\t\ttitle=\"browse\">\n\t\t\t\t\t<ButtonIcon symbol=\"folder\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Opens an item selector dialog.\n\t *\n\t * @protected\n\t * @method _browseClick\n\t */\n\t_browseClick = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst url = editor.config.documentBrowseLinkUrl;\n\t\tconst browseLinkCallback = editor.config.documentBrowseLinkCallback;\n\t\tconst linkTarget = this.linkEditButtonRef.current\n\t\t\t? this.linkEditButtonRef.current.state.linkTarget\n\t\t\t: '';\n\n\t\tconst changeLinkCallback = selectedItem => {\n\t\t\tthis._updateLink(\n\t\t\t\tselectedItem.value,\n\t\t\t\tlinkTarget,\n\t\t\t\tselectedItem.title\n\t\t\t);\n\t\t};\n\n\t\tif (Lang.isFunction(browseLinkCallback)) {\n\t\t\tbrowseLinkCallback.apply(null, [editor, url, changeLinkCallback]);\n\t\t}\n\t};\n\n\t/**\n\t * Updates the link in the editor element. If the element didn't exist previously, it will\n\t * create a new <a> element with the href specified in the link input.\n\t *\n\t * @protected\n\t * @method _updateLink\n\t * @param {String} linkHref href value for the link\n\t * @param {String} linkTarget target value for the link\n\t * @param {String} linkTitle if the link is a title that points to a wiki page (only works for creole)\n\t */\n\t_updateLink = (linkHref, linkTarget, linkTitle) => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst linkUtils = new CKEDITOR.Link(editor, {appendProtocol: false});\n\t\tconst linkAttrs = {\n\t\t\ttarget: linkTarget,\n\t\t};\n\t\tconst modifySelection = {advance: true};\n\n\t\tif (linkHref) {\n\t\t\tif (editor.plugins && editor.plugins.creole && !linkTitle) {\n\t\t\t\tlinkHref = location.origin + linkHref;\n\t\t\t}\n\n\t\t\tif (this.state.element) {\n\t\t\t\tlinkAttrs.href = linkHref;\n\n\t\t\t\tlinkUtils.update(\n\t\t\t\t\tlinkAttrs,\n\t\t\t\t\tthis.state.element,\n\t\t\t\t\tmodifySelection\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlinkUtils.create(linkHref, linkAttrs, modifySelection);\n\t\t\t}\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t}\n\t};\n}\n\nexport default EditorContext.toProps(ButtonLinkEditBrowse);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonTargetList from './button-target-list.jsx';\n\n/**\n * The ButtonLinkTargetEdit class provides functionality for changing the target of a link\n * in the document.\n *\n * @class ButtonLinkTargetEdit\n */\nclass ButtonLinkTargetEdit extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default linkTargetEdit\n\t * @memberof ButtonLinkTargetEdit\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'linkTargetEdit';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkTargetEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst handleLinkTargetChange = this.props.handleLinkTargetChange;\n\t\tconst allowedLinkTargets = this.props.allowedTargets;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"ae-container-dropdown ae-container-dropdown-medium ae-container-edit-link-target ae-has-dropdown\"\n\t\t\t\ttabIndex=\"0\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={this.props.selectedTarget}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={this.props.selectedTarget}>\n\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t<span className=\"ae-container-dropdown-selected-item\">\n\t\t\t\t\t\t\t{this.props.selectedTarget}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t{this.props.expanded && (\n\t\t\t\t\t<ButtonTargetList\n\t\t\t\t\t\tallowedLinkTargets={allowedLinkTargets}\n\t\t\t\t\t\thandleLinkTargetChange={handleLinkTargetChange}\n\t\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t\t\tselectedTarget={this.props.selectedTarget}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Invoked before rendering when new props or state are being received.\n\t * This method is not called for the initial render or when forceUpdate is used.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkTargetEdit\n\t * @method  shouldComponentUpdate\n\t * @return {Boolean} Returns false when the transition to the new props and state will not\n\t * require a component update.\n\t */\n\tshouldComponentUpdate(nextProps) {\n\t\treturn (\n\t\t\tnextProps.expanded !== this.props.expanded ||\n\t\t\tnextProps.selectedTarget !== this.props.selectedTarget\n\t\t);\n\t}\n}\n\nexport default ButtonLinkTargetEdit;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonDropdown from './button-dropdown.jsx';\n\n/**\n * The ButtonTargetList class provides functionality for changing the target of a link\n * in the document.\n *\n * @class ButtonTargetList\n * @uses WidgetFocusManager\n */\nclass ButtonTargetList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method getDefaultProps\n\t */\n\tstatic defaultProps = {\n\t\tcircular: true,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default linkTargetEdit\n\t * @memberof ButtonTargetList\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'targetList';\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tReactDOM.findDOMNode(this).focus();\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst listTargets = this._renderListTargets();\n\n\t\treturn <ButtonDropdown {...this.props}>{listTargets}</ButtonDropdown>;\n\t}\n\n\t/**\n\t * Returns the the allowed link target items.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method _getAllowedTargetItems\n\t * @protected\n\t * @return {Array} The allowed target items.\n\t */\n\t_getAllowedTargetItems() {\n\t\treturn (\n\t\t\tthis.props.allowedLinkTargets || [\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetDefault,\n\t\t\t\t\tvalue: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetSelf,\n\t\t\t\t\tvalue: '_self',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetBlank,\n\t\t\t\t\tvalue: '_blank',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetParent,\n\t\t\t\t\tvalue: '_parent',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetTop,\n\t\t\t\t\tvalue: '_top',\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n\n\t/**\n\t * Renders the allowed link target items.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method _renderListTargets\n\t * @protected\n\t * @return {Object} Returns the rendered link items\n\t */\n\t_renderListTargets() {\n\t\tlet targets = this._getAllowedTargetItems();\n\n\t\tconst handleLinkTargetChange = this.props.handleLinkTargetChange;\n\n\t\ttargets = targets.map(target => {\n\t\t\tconst className =\n\t\t\t\tthis.props.selectedTarget === target.value\n\t\t\t\t\t? 'ae-toolbar-element active'\n\t\t\t\t\t: 'ae-toolbar-element';\n\n\t\t\treturn (\n\t\t\t\t<li key={target.value} role=\"option\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\tdata-value={target.value}\n\t\t\t\t\t\tonClick={handleLinkTargetChange}>\n\t\t\t\t\t\t{target.label}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn targets;\n\t}\n}\n\nexport default WidgetFocusManager(ButtonTargetList);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonProps from '../base/button-props';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonLinkEdit from './button-link-edit.jsx';\n\n/**\n * The ButtonLink class provides functionality for creating and editing a link in a document. ButtonLink\n * renders in two different modes:\n *\n * - Normal: Just a button that allows to switch to the edition mode\n * - Exclusive: The ButtonLinkEdit UI with all the link edition controls.\n *\n * @class ButtonLink\n * @uses ButtonProps\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n */\nclass ButtonLink extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonLink\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tkeystroke: {\n\t\t\tfn: '_requestExclusive',\n\t\t\tkeys: CKEDITOR.CTRL + 76 /* L*/,\n\t\t\tname: 'link',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default link\n\t * @memberof ButtonLink\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'link';\n\n\t/**\n\t * Checks if the current selection is contained within a link.\n\t *\n\t * @instance\n\t * @memberof ButtonLink\n\t * @method isActive\n\t * @return {Boolean} True if the selection is inside a link, false otherwise.\n\t */\n\tisActive() {\n\t\treturn (\n\t\t\tnew CKEDITOR.Link(\n\t\t\t\tthis.context.editor.get('nativeEditor')\n\t\t\t).getFromSelection() !== null\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonLink\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\tif (this.props.renderExclusive) {\n\t\t\tconst props = this.mergeButtonCfgProps();\n\n\t\t\treturn <ButtonLinkEdit {...props} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.link}\n\t\t\t\t\tclassName={cssClass}\n\t\t\t\t\tdata-type=\"button-link\"\n\t\t\t\t\tonClick={this._requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.link}>\n\t\t\t\t\t<ButtonIcon symbol=\"link\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Requests the link button to be rendered in exclusive mode to allow the creation of a link.\n\t *\n\t * @instance\n\t * @memberof ButtonLink\n\t * @method _requestExclusive\n\t * @protected\n\t */\n\t_requestExclusive = () => {\n\t\tthis.props.requestExclusive(ButtonLink.key);\n\t};\n}\n\nexport default ButtonProps(ButtonKeystroke(ButtonStateClasses(ButtonLink)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\nconst KEY_ENTER = 13;\nconst KEY_ESC = 27;\n\nconst INPUT_NAMES = {\n\tCOLS: 'cols',\n\tROWS: 'rows',\n};\n\nconst MINIMUM_GRID_VALUE = 1;\n\n/**\n * The ButtonTableEdit class provides functionality for creating and editing a table in a document.\n * Provides UI for creating a table.\n *\n * @class ButtonTableEdit\n */\nclass ButtonTableEdit extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method getDefaultProps\n\t */\n\tstatic defaultProps = {\n\t\ttableAttributes: {\n\t\t\tborder: 1,\n\t\t\tcellPadding: 0,\n\t\t\tcellSpacing: 0,\n\t\t\tstyle: 'table-layout: fixed; width: 100%;',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableEdit\n\t * @memberof ButtonTableEdit\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableEdit';\n\n\t/**\n\t * Lifecycle. Invoked once before the component is mounted.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method getInitialState\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.rowsRef = React.createRef();\n\t\tthis.colsRef = React.createRef();\n\t\tthis.state = {\n\t\t\tcols: 3,\n\t\t\trows: 3,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client (not on the server),\n\t * immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the link input to immediately allow editing.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis.rowsRef.current.focus();\n\t}\n\n\t/**\n\t * Creates a table.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method _createTable\n\t * @protected\n\t */\n\t_createTable = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst tableUtils = new CKEDITOR.Table(editor);\n\t\tconst {cols, rows} = this.state;\n\n\t\ttableUtils.create({\n\t\t\tattrs: this.props.tableAttributes,\n\t\t\tcols: Math.max(MINIMUM_GRID_VALUE, cols),\n\t\t\trows: Math.max(MINIMUM_GRID_VALUE, rows),\n\t\t});\n\n\t\tthis.props.cancelExclusive();\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n\n\t/**\n\t * Handles a change in input value. Sets the provided value from the user back to the input.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method _handleChange\n\t * @param {String} inputName The name of the input which value should be updated.\n\t * @param {SyntheticEvent} event The provided event.\n\t * @protected\n\t */\n\t_handleChange = (inputName, event) => {\n\t\tthis.setState({\n\t\t\t[inputName]: event.target.value,\n\t\t});\n\t};\n\n\t/**\n\t * Monitors key interaction inside the input element to respond to the keys:\n\t * - Enter: Creates the table.\n\t * - Escape: Discards the changes.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method _handleKeyDown\n\t * @param {SyntheticEvent} event The keyboard event.\n\t * @protected\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === KEY_ENTER || event.keyCode === KEY_ESC) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (event.keyCode === KEY_ENTER) {\n\t\t\tthis._createTable();\n\t\t} else if (event.keyCode === KEY_ESC) {\n\t\t\tthis.props.cancelExclusive();\n\t\t}\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst time = Date.now();\n\t\tconst rowsId = time + INPUT_NAMES.ROWS;\n\t\tconst colsId = time + INPUT_NAMES.COLS;\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-edit-table\">\n\t\t\t\t<label htmlFor={rowsId}>{AlloyEditor.Strings.rows}</label>\n\t\t\t\t<div className=\"ae-container-input small\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\tid={rowsId}\n\t\t\t\t\t\tmin={MINIMUM_GRID_VALUE}\n\t\t\t\t\t\tonChange={this._handleChange.bind(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tINPUT_NAMES.ROWS\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\tplaceholder=\"Rows\"\n\t\t\t\t\t\tref={this.rowsRef}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={this.state.rows}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<label htmlFor={colsId}>{AlloyEditor.Strings.columns}</label>\n\t\t\t\t<div className=\"ae-container-input small\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\tid={colsId}\n\t\t\t\t\t\tmin={MINIMUM_GRID_VALUE}\n\t\t\t\t\t\tonChange={this._handleChange.bind(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tINPUT_NAMES.COLS\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\tplaceholder=\"Colums\"\n\t\t\t\t\t\tref={this.colsRef}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={this.state.cols}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<button\n\t\t\t\t\taria-label=\"Confirm\"\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this._createTable}>\n\t\t\t\t\t<ButtonIcon symbol=\"check\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ButtonTableEdit;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\n/**\n * Provides functionality for calculating the point of interaction of the user with the Editor.\n *\n * @class WidgetInteractionPoint\n */\nconst WidgetInteractionPoint = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The provided editor event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetInteractionPoint\n\t\t * @property {SyntheticEvent} editorEvent\n\t\t */\n\t\teditorEvent: PropTypes.object,\n\t},\n\n\t/**\n\t * Returns the position, in page coordinates, according to which a widget should appear.\n\t * Depending on the direction of the selection, the wdiget may appear above of or on bottom of the selection.\n\t *\n\t * It depends on the props editorEvent to analyze the following user-interaction parameters:\n\t * - {Object} selectionData The data about the selection in the editor as returned from\n\t * {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t * - {Number} pos Contains the coordinates of the position, considered as most appropriate.\n\t * This may be the point where the user released the mouse, or just the beginning or the end of\n\t * the selection.\n\t *\n\t * @instance\n\t * @memberof WidgetInteractionPoint\n\t * @method getInteractionPoint\n\t * @return {Object} An Object which contains the following properties:\n\t * direction, x, y, where x and y are in page coordinates and direction can be one of these:\n\t * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t */\n\tgetInteractionPoint() {\n\t\tconst eventPayload = this.props.editorEvent\n\t\t\t? this.props.editorEvent.data\n\t\t\t: null;\n\n\t\tif (!eventPayload) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectionData = eventPayload.selectionData;\n\n\t\tconst nativeEvent = eventPayload.nativeEvent;\n\n\t\tconst pos = {\n\t\t\tx: eventPayload.nativeEvent.pageX,\n\t\t\ty: selectionData.region.top,\n\t\t};\n\n\t\tlet direction = selectionData.region.direction;\n\n\t\tconst endRect = selectionData.region.endRect;\n\n\t\tconst startRect = selectionData.region.startRect;\n\n\t\tif (endRect && startRect && startRect.top === endRect.top) {\n\t\t\tdirection = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t}\n\n\t\tlet x;\n\t\tlet y;\n\n\t\t// If we have the point where user released the mouse, show Toolbar at this point\n\t\t// otherwise show it on the middle of the selection.\n\n\t\tif (pos.x && pos.y) {\n\t\t\tx = this._getXPoint(selectionData, pos.x);\n\n\t\t\tif (direction === CKEDITOR.SELECTION_BOTTOM_TO_TOP) {\n\t\t\t\ty = Math.min(pos.y, selectionData.region.top);\n\t\t\t} else {\n\t\t\t\ty = Math.max(\n\t\t\t\t\tpos.y,\n\t\t\t\t\tthis._getYPoint(selectionData, nativeEvent)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tx = selectionData.region.left + selectionData.region.width / 2;\n\n\t\t\tif (direction === CKEDITOR.SELECTION_TOP_TO_BOTTOM) {\n\t\t\t\ty = this._getYPoint(selectionData, nativeEvent);\n\t\t\t} else {\n\t\t\t\ty = selectionData.region.top;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdirection,\n\t\t\tx,\n\t\t\ty,\n\t\t};\n\t},\n\n\t/**\n\t * Returns the position of the Widget.\n\t *\n\t * @instance\n\t * @memberof WidgetInteractionPoint\n\t * @method _getXPoint\n\t * @param {Object} eventX The X coordinate received from the native event (mouseup).\n\t * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t * @protected\n\t * @return {Number} The calculated X point in page coordinates.\n\t */\n\t_getXPoint(selectionData, eventX) {\n\t\tconst region = selectionData.region;\n\n\t\tconst left = region.startRect ? region.startRect.left : region.left;\n\t\tconst right = region.endRect ? region.endRect.right : region.right;\n\n\t\tlet x;\n\n\t\tif (left < eventX && right > eventX) {\n\t\t\tx = eventX;\n\t\t} else {\n\t\t\tconst leftDist = Math.abs(left - eventX);\n\t\t\tconst rightDist = Math.abs(right - eventX);\n\n\t\t\tif (leftDist < rightDist) {\n\t\t\t\t// user raised the mouse on left on the selection\n\t\t\t\tx = left;\n\t\t\t} else {\n\t\t\t\tx = right;\n\t\t\t}\n\t\t}\n\n\t\treturn x;\n\t},\n\n\t/**\n\t * Returns the position of the Widget.\n\t *\n\t * @instance\n\t * @memberof WidgetInteractionPoint\n\t * @method _getYPoint\n\t * @param {Object} nativeEvent The data about event is fired\n\t * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t * @protected\n\t * @return {Number} The calculated Y point in page coordinates.\n\t */\n\t_getYPoint(selectionData, nativeEvent) {\n\t\tlet y = 0;\n\n\t\tif (selectionData && nativeEvent) {\n\t\t\tconst elementTarget = new CKEDITOR.dom.element(nativeEvent.target);\n\n\t\t\tif (\n\t\t\t\telementTarget.$ &&\n\t\t\t\telementTarget.getStyle('overflow') === 'auto'\n\t\t\t) {\n\t\t\t\ty =\n\t\t\t\t\tnativeEvent.target.offsetTop +\n\t\t\t\t\tnativeEvent.target.offsetHeight;\n\t\t\t} else {\n\t\t\t\ty = selectionData.region.bottom;\n\t\t\t}\n\t\t}\n\n\t\treturn y;\n\t},\n};\n\nexport default WidgetInteractionPoint;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from './lang';\n\n/**\n * Attribute implementation.\n *\n * @class Attribute\n * @constructor\n */\nfunction Attribute(config) {\n\tthis.__config__ = config || {};\n\tthis.__ATTRS__ = {};\n}\n\nAttribute.prototype = {\n\tconstructor: Attribute,\n\n\t/**\n\t * Retrieves the value of an attribute.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method get\n\t * @param {String} attr The attribute which value should be retrieved.\n\t * @return {Any} The value of the attribute.\n\t */\n\tget(attr) {\n\t\tconst currentAttr = this.constructor.ATTRS[attr];\n\n\t\tif (!currentAttr) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._isInitialized(attr)) {\n\t\t\tthis._init(attr);\n\t\t}\n\n\t\tlet curValue = this.__ATTRS__[attr];\n\n\t\tif (currentAttr.getter) {\n\t\t\tcurValue = this._callStringOrFunction(currentAttr.getter, curValue);\n\t\t}\n\n\t\treturn curValue;\n\t},\n\n\t/**\n\t * Sets the value of an attribute.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method set\n\t * @param {String} attr The attribute which value should be set.\n\t * @param {Any} value The value which should be set to the attribute.\n\t */\n\tset(attr, value) {\n\t\tconst currentAttr = this.constructor.ATTRS[attr];\n\n\t\tif (!currentAttr) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._isInitialized(attr)) {\n\t\t\tthis._init(attr);\n\t\t}\n\n\t\tif (currentAttr.readOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentAttr.writeOnce && this._isInitialized(attr)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tcurrentAttr.validator &&\n\t\t\t!this._callStringOrFunction(currentAttr.validator, value)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentAttr.setter) {\n\t\t\tvalue = this._callStringOrFunction(currentAttr.setter, value);\n\t\t}\n\n\t\tthis.__ATTRS__[attr] = value;\n\t},\n\n\t/**\n\t * Calls the provided param as function with the supplied arguments.\n\t * If param provided as string, a corresponding function in this object will\n\t * be called. If provided param is a function, it will be directly called.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method _callStringOrFunction\n\t * @param  {Any|Array} args The arguments which will be provided to the called function\n\t * @param  {String|Function} stringOrFunction The function which should be called\n\t * @protected\n\t * @return {Any} The returned value from the called function\n\t */\n\t_callStringOrFunction(stringOrFunction, args) {\n\t\tlet result = null;\n\n\t\tif (!Lang.isArray(args)) {\n\t\t\targs = [args];\n\t\t}\n\n\t\tif (\n\t\t\tLang.isString(stringOrFunction) &&\n\t\t\tLang.isFunction(this[stringOrFunction])\n\t\t) {\n\t\t\tresult = this[stringOrFunction](...args);\n\t\t} else if (Lang.isFunction(stringOrFunction)) {\n\t\t\tresult = stringOrFunction.apply(this, args);\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Initializes an attribute. Sets its default value depending on the flags of the\n\t * attribute and the passed configuration object to the constructor.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method _init\n\t * @param {String} attr The name of the attribute which have to be initialized.\n\t * @protected\n\t */\n\t_init(attr) {\n\t\tlet value;\n\n\t\tconst currentAttr = this.constructor.ATTRS[attr];\n\n\t\t// Check if there is default value or passed one via configuration object\n\t\tconst hasDefaultValue = Object.prototype.hasOwnProperty.call(\n\t\t\tcurrentAttr,\n\t\t\t'value'\n\t\t);\n\t\tconst hasPassedValueViaConfig = Object.prototype.hasOwnProperty.call(\n\t\t\tthis.__config__,\n\t\t\tattr\n\t\t);\n\n\t\t// If there is valueFn, set the value to be the result of invocation of this function\n\t\tif (currentAttr.valueFn) {\n\t\t\tvalue = this._callStringOrFunction(currentAttr.valueFn, value);\n\n\t\t\tthis.__ATTRS__[attr] = value;\n\t\t}\n\t\t// else if the attribute has readOnly flag, set the default value from the attribute,\n\t\t// regardless if there is value or not\n\t\telse if (currentAttr.readOnly) {\n\t\t\tvalue = currentAttr.value;\n\t\t}\n\t\t// else if the attribute has writeOnce value, set it from the passed configuration or from the\n\t\t// default value, in this order. Otherwise, return miserable.\n\t\telse if (currentAttr.writeOnce) {\n\t\t\tif (hasPassedValueViaConfig) {\n\t\t\t\tvalue = this.__config__[attr];\n\t\t\t} else if (hasDefaultValue) {\n\t\t\t\tvalue = currentAttr.value;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// These two cases below are easy - set the value to be from the passed config or\n\t\t// from the default value, in this order.\n\t\telse if (hasPassedValueViaConfig) {\n\t\t\tvalue = this.__config__[attr];\n\t\t} else if (hasDefaultValue) {\n\t\t\tvalue = currentAttr.value;\n\t\t}\n\n\t\t// If there is validator, and user passed config object - check the returned value.\n\t\t// If it is false, then set as initial value the default one.\n\t\t// However, if there is no default value, just return.\n\t\tif (\n\t\t\tcurrentAttr.validator &&\n\t\t\thasPassedValueViaConfig &&\n\t\t\t!this._callStringOrFunction(currentAttr.validator, value)\n\t\t) {\n\t\t\tif (hasDefaultValue) {\n\t\t\t\tvalue = currentAttr.value;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If there is setter and user passed config object - pass the value thought the setter.\n\t\t// The value might be one from defaultFn, default value or provided from the config.\n\t\tif (currentAttr.setter && hasPassedValueViaConfig) {\n\t\t\tvalue = this._callStringOrFunction(currentAttr.setter, value);\n\t\t}\n\n\t\t// Finally, set the value as initial value to the storage with values.\n\t\tthis.__ATTRS__[attr] = value;\n\t},\n\n\t/**\n\t * Checks if an attribute is initialized. An attribute is considered as initialized\n\t * when there is an own property with this name in the local collection of attribute values\n\t * for the current instance.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method _isInitialized\n\t * @param {String} attr The attribute which should be checked if it is initialized.\n\t * @protected\n\t * @return {Boolean} Returns true if the attribute has been initialized, false otherwise.\n\t */\n\t_isInitialized(attr) {\n\t\treturn Object.prototype.hasOwnProperty.call(this.__ATTRS__, attr);\n\t},\n};\n\nexport default Attribute;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst tableSelectionGetArrowBoxClasses = function() {\n\treturn 'ae-arrow-box ae-arrow-box-bottom';\n};\n\nconst SelectionGetArrowBoxClasses = {\n\ttable: tableSelectionGetArrowBoxClasses,\n};\n\nexport default SelectionGetArrowBoxClasses;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ReactDOM from 'react-dom';\n\n// Default gutter value for toolbar positioning\nconst DEFAULT_GUTTER = {\n\tleft: 0,\n\ttop: 0,\n};\n\n/**\n * Centers a Toolbar according to given rectangle\n *\n * @method centerToolbar\n * @param {Object} toolbar The toolbar to be centered\n * @param {Object} rect The rectangle according to which the Toolbar will be centered\n */\nconst centerToolbar = function(toolbar, rect) {\n\tconst toolbarNode = ReactDOM.findDOMNode(toolbar);\n\n\tconst nativeEditor = toolbar.context.editor.get('nativeEditor');\n\tconst uiNode = nativeEditor.config.uiNode || document.body;\n\tconst uiNodeStyle = getComputedStyle(uiNode);\n\tconst uiNodeMarginLeft = parseInt(\n\t\tuiNodeStyle.getPropertyValue('margin-left'),\n\t\t10\n\t);\n\tconst uiNodeMarginRight = parseInt(\n\t\tuiNodeStyle.getPropertyValue('margin-right'),\n\t\t10\n\t);\n\tconst totalWidth =\n\t\tuiNodeMarginLeft + uiNode.clientWidth + uiNodeMarginRight;\n\n\tconst halfNodeWidth = toolbarNode.offsetWidth / 2;\n\tconst scrollPosition = new CKEDITOR.dom.window(window).getScrollPosition();\n\n\tconst gutter = toolbar.props.gutter || DEFAULT_GUTTER;\n\n\tconst widgetXY = toolbar.getWidgetXYPoint(\n\t\trect.left + rect.width / 2 - scrollPosition.x,\n\t\trect.top + scrollPosition.y,\n\t\tCKEDITOR.SELECTION_BOTTOM_TO_TOP\n\t);\n\n\tconst caretPosition = nativeEditor.getSelection();\n\tconst ranges = caretPosition.getRanges();\n\tlet offsetHeight = 0;\n\n\tif (ranges && ranges.length === 1) {\n\t\tlet startContainer = ranges[0].startContainer;\n\t\tif (startContainer.$.nodeType !== Node.ELEMENT_NODE) {\n\t\t\tstartContainer = startContainer.getParent();\n\t\t}\n\t\tif (startContainer) {\n\t\t\tconst startContainerClientRect = startContainer.getClientRect();\n\t\t\toffsetHeight = startContainerClientRect.y - rect.top;\n\t\t}\n\t}\n\n\tconst endPosition = [\n\t\trect.left + rect.width / 2 - halfNodeWidth - scrollPosition.x,\n\t\trect.top +\n\t\t\toffsetHeight -\n\t\t\ttoolbarNode.offsetHeight +\n\t\t\tscrollPosition.y -\n\t\t\tgutter.top,\n\t];\n\n\tif (endPosition[0] < 0) {\n\t\tendPosition[0] = 0;\n\t} else if (endPosition[0] > totalWidth - toolbarNode.offsetWidth) {\n\t\tendPosition[0] = totalWidth - toolbarNode.offsetWidth;\n\t}\n\n\ttoolbar.moveToPoint(widgetXY, endPosition);\n};\n\n/**\n * Sets the position of a toolbar according to the position of the selected image\n *\n * @method imageSelectionSetPosition\n * @param {Object} payload Payload, should contain the selection data for retrieving the\n * client rectangle of the selected image\n * @return {Boolean} True, in all cases\n */\nconst imageSelectionSetPosition = function(payload) {\n\tconst selectionData = payload.selectionData\n\t\t? payload.selectionData\n\t\t: payload.editorEvent\n\t\t? payload.editorEvent.data.selectionData\n\t\t: null;\n\n\tif (selectionData && selectionData.element) {\n\t\tconst nativeEditor = payload.editor.get('nativeEditor');\n\t\tconst uiNode = nativeEditor.config.uiNode;\n\n\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\tconst rect = selectionData.element.getClientRect();\n\t\trect.top += scrollTop;\n\n\t\tcenterToolbar(this, rect);\n\n\t\treturn true;\n\t}\n};\n\n/**\n * Sets the position of a toolbar according to the position of the selected image\n *\n * @method tableSelectionSetPosition\n * @param {Object} payload Object, which contains the selection data for retrieving the\n * client rectangle of the selected table\n * @return {Boolean} True, in all cases\n */\nconst tableSelectionSetPosition = function(payload) {\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\tconst uiNode = nativeEditor.config.uiNode;\n\n\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\tconst table = new CKEDITOR.Table(nativeEditor).getFromSelection();\n\tconst rect = table.getClientRect();\n\trect.top += scrollTop;\n\n\tcenterToolbar(this, rect);\n\n\treturn true;\n};\n\nconst SelectionSetPosition = {\n\timage: imageSelectionSetPosition,\n\ttable: tableSelectionSetPosition,\n};\n\nexport default SelectionSetPosition;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport SelectionGetArrowBoxClasses from './selection-arrowbox';\nimport SelectionSetPosition from './selection-position';\nimport SelectionTest from './selection-test';\n\nconst Selections = [\n\t{\n\t\tname: 'embed',\n\t\tbuttons: ['embedRemove', 'embedEdit'],\n\t\ttest: SelectionTest.embed,\n\t},\n\t{\n\t\tname: 'embedUrl',\n\t\tbuttons: ['embedVideo', 'embedVideoEdit'],\n\t\ttest: SelectionTest.embedUrl,\n\t},\n\t{\n\t\tname: 'link',\n\t\tbuttons: ['linkEdit'],\n\t\ttest: SelectionTest.link,\n\t},\n\t{\n\t\tname: 'image',\n\t\tbuttons: ['imageLeft', 'imageCenter', 'imageRight', 'removeImage'],\n\t\tsetPosition: SelectionSetPosition.image,\n\t\ttest: SelectionTest.image,\n\t},\n\t{\n\t\tname: 'text',\n\t\tbuttons: {\n\t\t\tfull: [\n\t\t\t\t[\n\t\t\t\t\t'Font',\n\t\t\t\t\t'FontSize',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'bold',\n\t\t\t\t\t'italic',\n\t\t\t\t\t'underline',\n\t\t\t\t\t'strike',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'link',\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'paragraphAlign',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'ul',\n\t\t\t\t\t'ol',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'h1',\n\t\t\t\t\t'h2',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'indentBlock',\n\t\t\t\t\t'outdentBlock',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'TextColor',\n\t\t\t\t\t'BGColor',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'code',\n\t\t\t\t\t'quote',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'removeFormat',\n\t\t\t\t],\n\t\t\t],\n\n\t\t\tsimple: ['styles', 'bold', 'italic', 'underline', 'link'],\n\t\t},\n\t\ttest: SelectionTest.text,\n\t},\n\t{\n\t\tname: 'table',\n\t\tbuttons: [\n\t\t\t'tableHeading',\n\t\t\t'tableRow',\n\t\t\t'tableColumn',\n\t\t\t'tableCell',\n\t\t\t'tableRemove',\n\t\t],\n\t\tgetArrowBoxClasses: SelectionGetArrowBoxClasses.table,\n\t\tsetPosition: SelectionSetPosition.table,\n\t\ttest: SelectionTest.table,\n\t},\n];\n\nexport default Selections;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport './addimages';\n\nimport './autolink';\n\nimport './autolist';\n\nimport './dragresize';\n\nimport './dragresize_ie11';\n\nimport './embed';\nimport embedurl from './embedurl';\n\nimport './imagealignment';\n\nimport './pasteimages';\n\nimport './placeholder';\n\nimport './selectionkeystrokes';\n\nimport './tableresize';\n\nimport './tabletools';\n\nexport {embedurl};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport * as Base from '../components/base';\nimport Buttons from '../components/buttons';\nimport * as Compat from '../components/compat';\nimport Toolbars from '../components/toolbars';\nimport Attribute from '../oop/attribute';\nimport Lang from '../oop/lang';\nimport extend from '../oop/oop';\nimport SelectionGetArrowBoxClasses from '../selections/selection-arrowbox';\nimport SelectionSetPosition from '../selections/selection-position';\nimport SelectionTest from '../selections/selection-test';\nimport Selections from '../selections/selections';\nimport Core from './core';\n\nimport '../plugins';\n\n// An object containing all currently registered plugins in AlloyEditor.\nconst BRIDGE_BUTTONS = {};\n\n/**\n * Creates an instance of AlloyEditor.\n *\n * @memberof AlloyEditor\n * @method editable\n * @static\n * @param {String|Node} node The Node ID or HTMl node, which AlloyEditor should use as an editable area.\n * @param {Object} config Configuration attributes for the current instance of AlloyEditor.\n * @return {Object} An instance of {{#crossLink \"Core\"}}{{/crossLink}}\n */\nconst editable = function(node, config) {\n\tconfig = config || {};\n\tconfig.srcNode = node;\n\n\tAlloyEditor.implementEventTarget();\n\n\treturn new Core(config);\n};\n\n/**\n * The full URL for the AlloyEditor installation directory.\n * It is possible to manually provide the base path by setting a\n * global variable named `ALLOYEDITOR_BASEPATH`. This global variable\n * must be set **before** the editor script loading.\n *\n * @memberof AlloyEditor\n * @method getBasePath\n * @static\n * @return {String} The found base path\n */\nconst getBasePath = function() {\n\t// Find out the editor directory path, based on its <script> tag.\n\tlet path = window.ALLOYEDITOR_BASEPATH || '';\n\n\tif (!path) {\n\t\tconst scripts = document.getElementsByTagName('script');\n\n\t\tfor (let i = 0; i < scripts.length; i++) {\n\t\t\tconst match = scripts[i].src.match(AlloyEditor.regexBasePath);\n\n\t\t\tif (match) {\n\t\t\t\tpath = match[1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// In IE (only) the script.src string is the raw value entered in the\n\t// HTML source. Other browsers return the full resolved URL instead.\n\tif (path.indexOf(':/') === -1 && path.slice(0, 2) !== '//') {\n\t\t// Absolute path.\n\t\tif (path.indexOf('/') === 0) {\n\t\t\tpath = location.href.match(/^.*?:\\/\\/[^/]*/)[0] + path;\n\t\t}\n\t\t// Relative path.\n\t\telse {\n\t\t\tpath = location.href.match(/^[^?]*\\/(?:)/)[0] + path;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error(\n\t\t\t'The AlloyEditor installation path could not be automatically detected. Please set the global variable \"ALLOYEDITOR_BASEPATH\" before creating editor instances.'\n\t\t);\n\t}\n\n\treturn path;\n};\n\n/**\n * Detects and load the corresponding language file if AlloyEditor language strings are not already present.\n * The function fires a {{#crossLink \"AlloyEditor/languageResourcesLoaded:event\"}}{{/crossLink}} event\n *\n * @memberof AlloyEditor\n * @method loadLanguageResources\n * @static\n * @param {Function} callback Optional callback to be called when AlloyEditor loads the language resource.\n */\nconst loadLanguageResources = function(callback) {\n\tAlloyEditor.implementEventTarget();\n\n\tif (Lang.isFunction(callback)) {\n\t\tif (AlloyEditor.Strings) {\n\t\t\tsetTimeout(callback, 0);\n\t\t} else {\n\t\t\tAlloyEditor.once('languageResourcesLoaded', () => {\n\t\t\t\tsetTimeout(callback, 0);\n\t\t\t});\n\t\t}\n\t}\n\n\tif (!AlloyEditor._langResourceRequested) {\n\t\tAlloyEditor._langResourceRequested = true;\n\n\t\tconst languages = [\n\t\t\t'af',\n\t\t\t'ar',\n\t\t\t'bg',\n\t\t\t'bn',\n\t\t\t'bs',\n\t\t\t'ca',\n\t\t\t'cs',\n\t\t\t'cy',\n\t\t\t'da',\n\t\t\t'de',\n\t\t\t'el',\n\t\t\t'en-au',\n\t\t\t'en-ca',\n\t\t\t'en-gb',\n\t\t\t'en',\n\t\t\t'eo',\n\t\t\t'es',\n\t\t\t'et',\n\t\t\t'eu',\n\t\t\t'fa',\n\t\t\t'fi',\n\t\t\t'fo',\n\t\t\t'fr-ca',\n\t\t\t'fr',\n\t\t\t'gl',\n\t\t\t'gu',\n\t\t\t'he',\n\t\t\t'hi',\n\t\t\t'hr',\n\t\t\t'hu',\n\t\t\t'id',\n\t\t\t'is',\n\t\t\t'it',\n\t\t\t'ja',\n\t\t\t'ka',\n\t\t\t'km',\n\t\t\t'ko',\n\t\t\t'ku',\n\t\t\t'lt',\n\t\t\t'lv',\n\t\t\t'mk',\n\t\t\t'mn',\n\t\t\t'ms',\n\t\t\t'nb',\n\t\t\t'nl',\n\t\t\t'no',\n\t\t\t'pl',\n\t\t\t'pt-br',\n\t\t\t'pt',\n\t\t\t'ro',\n\t\t\t'ru',\n\t\t\t'si',\n\t\t\t'sk',\n\t\t\t'sl',\n\t\t\t'sq',\n\t\t\t'sr-latn',\n\t\t\t'sr',\n\t\t\t'sv',\n\t\t\t'th',\n\t\t\t'tr',\n\t\t\t'tt',\n\t\t\t'ug',\n\t\t\t'uk',\n\t\t\t'vi',\n\t\t\t'zh-cn',\n\t\t\t'zh',\n\t\t];\n\n\t\tconst userLanguage =\n\t\t\tnavigator.language || navigator.userLanguage || 'en';\n\n\t\tconst parts = userLanguage\n\t\t\t.toLowerCase()\n\t\t\t.match(/([a-z]+)(?:-([a-z]+))?/);\n\t\tlet lang = parts[1];\n\t\tconst locale = parts[2];\n\n\t\tif (languages.indexOf(lang + '-' + locale) >= 0) {\n\t\t\tlang = lang + '-' + locale;\n\t\t} else if (languages.indexOf(lang) === -1) {\n\t\t\tlang = 'en';\n\t\t}\n\n\t\tCKEDITOR.scriptLoader.load(\n\t\t\tAlloyEditor.getUrl('lang/alloy-editor/' + lang + '.js'),\n\t\t\tloaded => {\n\t\t\t\tif (loaded) {\n\t\t\t\t\tAlloyEditor.fire('languageResourcesLoaded');\n\t\t\t\t}\n\t\t\t},\n\t\t\t/* eslint-disable no-invalid-this */\n\t\t\tthis // Always `AlloyEditor`.\n\t\t\t/* eslint-enable no-invalid-this */\n\t\t);\n\t}\n};\n\n/**\n * Gets the full URL for AlloyEditor resources. By default, URLs\n * returned by this function contain a querystring parameter (\"t\")\n * set to the {@link CKEDITOR#timestamp} value.\n *\n * @memberof AlloyEditor\n * @method getUrl\n * @static\n * @param {String} resource The resource whose full URL we want to get.\n * It may be a full, absolute, or relative URL.\n * @return {String} The full URL.\n */\nconst getUrl = function(resource) {\n\tconst basePath = AlloyEditor.getBasePath();\n\n\t// If this is not a full or absolute path.\n\tif (resource.indexOf(':/') === -1 && resource.indexOf('/') !== 0) {\n\t\tresource = basePath + resource;\n\t}\n\n\t// Add the timestamp, except for directories.\n\tif (\n\t\tCKEDITOR.timestamp &&\n\t\tresource.charAt(resource.length - 1) !== '/' &&\n\t\t!/[&?]t=/.test(resource)\n\t) {\n\t\tresource +=\n\t\t\t(resource.indexOf('?') >= 0 ? '&' : '?') +\n\t\t\t't=' +\n\t\t\tCKEDITOR.timestamp;\n\t}\n\n\treturn resource;\n};\n\n/**\n * Implements event firing and subscribing via CKEDITOR.event.\n *\n * @memberof AlloyEditor\n * @method implementEventTarget\n * @static\n */\nconst implementEventTarget = function() {\n\tif (!AlloyEditor.fire && !AlloyEditor.on) {\n\t\tCKEDITOR.event.implementOn(AlloyEditor);\n\t}\n};\n\n/**\n * Regular expression which should match the script which have been used to load AlloyEditor.\n *\n * @memberof AlloyEditor\n * @property regexBasePath\n * @type {RegExp}\n * @static\n */\nconst regexBasePath = /(^|.*[\\\\/])(?:alloy-editor[^/]+|alloy-editor)\\.js(?:\\?.*|;.*)?$/i;\n\n/**\n * Fired when AlloyEditor detects the browser language and loads the corresponding language file. Once this event\n * is fired, AlloyEditor.Strings will be populated with data.\n *\n * @event languageResourcesLoaded\n */\n\n/**\n * Returns the required plugin names needed for a given plugin\n * if it is already registered or an empty array.\n *\n * @memberof AlloyEditor\n * @method getButtons\n * @param {Array} buttons An array of buttons or plugin names.\n * @return {Function} A function that can be invoked to resolve the requested button names.\n * @static\n */\nconst getButtons = function(buttons) {\n\treturn function() {\n\t\treturn buttons.reduce((acc, val) => {\n\t\t\tval = BRIDGE_BUTTONS[val] || [val];\n\t\t\treturn acc.concat(val);\n\t\t}, []);\n\t};\n};\n\n/**\n * Register a button and try to get its required plugins.\n *\n * @memberof AlloyEditor\n * @method registerBridgeButton\n * @param {String} buttonName The name of the button.\n * @param {String} pluginName The name of the plugin that registers the button.\n * @static\n */\nconst registerBridgeButton = function(buttonName, pluginName) {\n\tif (!BRIDGE_BUTTONS[pluginName]) {\n\t\tBRIDGE_BUTTONS[pluginName] = [];\n\t}\n\n\tBRIDGE_BUTTONS[pluginName].push(buttonName);\n};\n\n/**\n * @method OOP\n * @memberof AlloyEditor\n */\nconst OOP = {\n\textend,\n};\n\nexport {\n\tAttribute,\n\tBase,\n\tButtons,\n\tCompat,\n\tCore,\n\tLang,\n\tOOP,\n\tSelectionGetArrowBoxClasses,\n\tSelectionSetPosition,\n\tSelectionTest,\n\tSelections,\n\tToolbars,\n\teditable,\n\tgetBasePath,\n\tgetButtons,\n\tgetUrl,\n\timplementEventTarget,\n\tloadLanguageResources,\n\tregexBasePath,\n\tregisterBridgeButton,\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nexport {default as ButtonActionStyle} from './button-action-style';\nexport {default as ButtonCommandActive} from './button-command-active';\nexport {default as ButtonCommand} from './button-command';\nexport {default as ButtonKeystroke} from './button-keystroke';\nexport {default as ButtonProps} from './button-props';\nexport {default as ButtonStateClasses} from './button-state-classes';\nexport {default as ButtonStyle} from './button-style';\nexport {default as ToolbarButtons} from './toolbar-buttons';\nexport {default as WidgetDropdown} from './widget-dropdown';\nexport {default as WidgetExclusive} from './widget-exclusive';\nexport {default as WidgetFocusManager} from './widget-focus-manager';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ButtonAccessibilityImageAlt from './button-accessibility-image-alt.jsx';\nimport ButtonBackgroundColor from './button-background-color.jsx';\nimport ButtonBold from './button-bold.jsx';\nimport ButtonCameraImage from './button-camera-image.jsx';\nimport ButtonCamera from './button-camera.jsx';\nimport ButtonCode from './button-code.jsx';\nimport ButtonColor from './button-color.jsx';\nimport ButtonCommandListItem from './button-command-list-item.jsx';\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonDropdown from './button-dropdown.jsx';\nimport ButtonEmbedEdit from './button-embed-edit.jsx';\nimport ButtonEmbedVideoEdit from './button-embed-video-edit.jsx';\nimport ButtonEmbedVideo from './button-embed-video.jsx';\nimport ButtonEmbed from './button-embed.jsx';\nimport ButtonH1 from './button-h1.jsx';\nimport ButtonH2 from './button-h2.jsx';\nimport ButtonHline from './button-hline.jsx';\nimport ButtonImageAlignCenter from './button-image-align-center.jsx';\nimport ButtonImageAlignLeft from './button-image-align-left.jsx';\nimport ButtonImageAlignRight from './button-image-align-right.jsx';\nimport ButtonImage from './button-image.jsx';\nimport ButtonIndentBlock from './button-indent-block.jsx';\nimport ButtonItalic from './button-italic.jsx';\nimport ButtonItemSelectorAudio from './button-item-selector-audio.jsx';\nimport ButtonItemSelectorImage from './button-item-selector-image.jsx';\nimport ButtonItemSelectorVideo from './button-item-selector-video.jsx';\nimport ButtonLinkAutocompleteList from './button-link-autocomplete-list.jsx';\nimport ButtonLinkBrowse from './button-link-browse.jsx';\nimport ButtonLinkEditBrowse from './button-link-edit-browse.jsx';\nimport ButtonLinkEdit from './button-link-edit.jsx';\nimport ButtonLinkTargetEdit from './button-link-target-edit.jsx';\nimport ButtonLink from './button-link.jsx';\nimport ButtonOl from './button-ol.jsx';\nimport ButtonOutdentBlock from './button-outdent-block.jsx';\nimport ButtonParagraphAlignLeft from './button-paragraph-align-left.jsx';\nimport ButtonParagraphAlignRight from './button-paragraph-align-right.jsx';\nimport ButtonParagraphAlign from './button-paragraph-align.jsx';\nimport ButtonParagraphCenter from './button-paragraph-center.jsx';\nimport ButtonParagraphJustify from './button-paragraph-justify.jsx';\nimport ButtonQuote from './button-quote.jsx';\nimport ButtonRemoveFormat from './button-remove-format.jsx';\nimport ButtonRemoveImage from './button-remove-image.jsx';\nimport ButtonSeparator from './button-separator.jsx';\nimport ButtonSpacing from './button-spacing.jsx';\nimport ButtonStrike from './button-strike.jsx';\nimport ButtonStylesListHeader from './button-styles-list-header.jsx';\nimport ButtonStylesListItemRemove from './button-styles-list-item-remove.jsx';\nimport ButtonStylesListItem from './button-styles-list-item.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\nimport ButtonStyles from './button-styles.jsx';\nimport ButtonSubscript from './button-subscript.jsx';\nimport ButtonSuperscript from './button-superscript.jsx';\nimport ButtonTableCell from './button-table-cell.jsx';\nimport ButtonTableColumn from './button-table-column.jsx';\nimport ButtonTableEdit from './button-table-edit.jsx';\nimport ButtonTableHeading from './button-table-heading.jsx';\nimport ButtonTableRemove from './button-table-remove.jsx';\nimport ButtonTableRow from './button-table-row.jsx';\nimport ButtonTable from './button-table.jsx';\nimport ButtonTargetList from './button-target-list.jsx';\nimport ButtonTwitter from './button-twitter.jsx';\nimport ButtonUl from './button-ul.jsx';\nimport ButtonUnderline from './button-underline.jsx';\n\nexport default {\n\t[ButtonAccessibilityImageAlt.key]: ButtonAccessibilityImageAlt,\n\t[ButtonBackgroundColor.key]: ButtonBackgroundColor,\n\t[ButtonBold.key]: ButtonBold,\n\t[ButtonCameraImage.key]: ButtonCameraImage,\n\t[ButtonCamera.key]: ButtonCamera,\n\t[ButtonCode.key]: ButtonCode,\n\t[ButtonColor.key]: ButtonColor,\n\t[ButtonCommandListItem.key]: ButtonCommandListItem,\n\t[ButtonCommandsList.key]: ButtonCommandsList,\n\t[ButtonDropdown.key]: ButtonDropdown,\n\t[ButtonEmbedEdit.key]: ButtonEmbedEdit,\n\t[ButtonEmbed.key]: ButtonEmbed,\n\t[ButtonEmbedVideoEdit.key]: ButtonEmbedVideoEdit,\n\t[ButtonEmbedVideo.key]: ButtonEmbedVideo,\n\t[ButtonH1.key]: ButtonH1,\n\t[ButtonH2.key]: ButtonH2,\n\t[ButtonHline.key]: ButtonHline,\n\t[ButtonImageAlignCenter.key]: ButtonImageAlignCenter,\n\t[ButtonImageAlignLeft.key]: ButtonImageAlignLeft,\n\t[ButtonImageAlignRight.key]: ButtonImageAlignRight,\n\t[ButtonImage.key]: ButtonImage,\n\t[ButtonIndentBlock.key]: ButtonIndentBlock,\n\t[ButtonItalic.key]: ButtonItalic,\n\t[ButtonItemSelectorAudio.key]: ButtonItemSelectorAudio,\n\t[ButtonItemSelectorImage.key]: ButtonItemSelectorImage,\n\t[ButtonItemSelectorVideo.key]: ButtonItemSelectorVideo,\n\t[ButtonLinkAutocompleteList.key]: ButtonLinkAutocompleteList,\n\t[ButtonLinkBrowse.key]: ButtonLinkBrowse,\n\t[ButtonLinkEditBrowse.key]: ButtonLinkEditBrowse,\n\t[ButtonLinkEdit.key]: ButtonLinkEdit,\n\t[ButtonLinkTargetEdit.key]: ButtonLinkTargetEdit,\n\t[ButtonLink.key]: ButtonLink,\n\t[ButtonOl.key]: ButtonOl,\n\t[ButtonOutdentBlock.key]: ButtonOutdentBlock,\n\t[ButtonParagraphAlign.key]: ButtonParagraphAlign,\n\t[ButtonParagraphAlignLeft.key]: ButtonParagraphAlignLeft,\n\t[ButtonParagraphAlignRight.key]: ButtonParagraphAlignRight,\n\t[ButtonParagraphCenter.key]: ButtonParagraphCenter,\n\t[ButtonParagraphJustify.key]: ButtonParagraphJustify,\n\t[ButtonQuote.key]: ButtonQuote,\n\t[ButtonRemoveFormat.key]: ButtonRemoveFormat,\n\t[ButtonRemoveImage.key]: ButtonRemoveImage,\n\t[ButtonSeparator.key]: ButtonSeparator,\n\t[ButtonSpacing.key]: ButtonSpacing,\n\t[ButtonStrike.key]: ButtonStrike,\n\t[ButtonStylesListHeader.key]: ButtonStylesListHeader,\n\t[ButtonStylesListItemRemove.key]: ButtonStylesListItemRemove,\n\t[ButtonStylesListItem.key]: ButtonStylesListItem,\n\t[ButtonStylesList.key]: ButtonStylesList,\n\t[ButtonStyles.key]: ButtonStyles,\n\t[ButtonSubscript.key]: ButtonSubscript,\n\t[ButtonSuperscript.key]: ButtonSuperscript,\n\t[ButtonTableCell.key]: ButtonTableCell,\n\t[ButtonTableColumn.key]: ButtonTableColumn,\n\t[ButtonTableEdit.key]: ButtonTableEdit,\n\t[ButtonTableHeading.key]: ButtonTableHeading,\n\t[ButtonTableRemove.key]: ButtonTableRemove,\n\t[ButtonTableRow.key]: ButtonTableRow,\n\t[ButtonTable.key]: ButtonTable,\n\t[ButtonTargetList.key]: ButtonTargetList,\n\t[ButtonTwitter.key]: ButtonTwitter,\n\t[ButtonUl.key]: ButtonUl,\n\t[ButtonUnderline.key]: ButtonUnderline,\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonAccessibilityImageAlt class provides functionality for changing text color in a document.\n *\n * @class ButtonAccessibilityImageAlt\n *\n */\nclass ButtonAccessibilityImageAlt extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'imageAlt';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst selection = props.context.editor\n\t\t\t.get('nativeEditor')\n\t\t\t.getSelection();\n\n\t\tconst element =\n\t\t\tselection.getSelectedElement() || selection.getStartElement();\n\n\t\tthis._element = element;\n\n\t\tconst imageElement = this._element.findOne('img');\n\n\t\tconst imageAlt = imageElement\n\t\t\t? imageElement.getAttribute('alt')\n\t\t\t: this._element.getAttribute('alt');\n\n\t\tthis.state = {\n\t\t\timageAlt,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn (\n\t\t\t\t<div className=\"ae-container-edit-link\">\n\t\t\t\t\t<div className=\"ae-container-input xxl\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\taria-label=\"alt\"\n\t\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\t\tonChange={this._handleAltChange}\n\t\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\t\tplaceholder=\"alt\"\n\t\t\t\t\t\t\tref=\"refAltInput\"\n\t\t\t\t\t\t\ttitle=\"alt\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={this.state.imageAlt}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-label={AlloyEditor.Strings.confirm}\n\t\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\t\tonClick={this._updateImageAlt}\n\t\t\t\t\t\ttitle={AlloyEditor.Strings.confirm}>\n\t\t\t\t\t\t<ButtonIcon symbol=\"check\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this._requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}>\n\t\t\t\t\t<small className=\"ae-icon small\">Alt</small>\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the user cursor on the widget's input.\n\t *\n\t * @protected\n\t * @method _focusAltInput\n\t */\n\t_focusAltInput() {\n\t\tconst instance = this;\n\n\t\tconst focusAltEl = function() {\n\t\t\tReactDOM.findDOMNode(instance.refs.refAltInput).focus();\n\t\t};\n\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(focusAltEl);\n\t\t} else {\n\t\t\tsetTimeout(focusAltEl, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Event attached to alt input that fires when its value is changed\n\t *\n\t * @protected\n\t * @method  _handleAltChange\n\t * @param {MouseEvent} event\n\t */\n\t_handleAltChange = event => {\n\t\tthis.setState({\n\t\t\timageAlt: event.target.value,\n\t\t});\n\n\t\tthis._focusAltInput();\n\t};\n\n\t/**\n\t * Event attached to al tinput that fires when key is down\n\t * This method check that enter key is pushed to update the component´s state\n\t *\n\t * @protected\n\t * @method  _handleKeyDown\n\t * @param {MouseEvent} event\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === 13) {\n\t\t\tevent.preventDefault();\n\n\t\t\tthis._updateImageAlt();\n\t\t}\n\t};\n\n\t/**\n\t * Requests the link button to be rendered in exclusive mode to allow the creation of a link.\n\t *\n\t * @protected\n\t * @method _requestExclusive\n\t */\n\t_requestExclusive = () => {\n\t\tthis.props.requestExclusive(ButtonAccessibilityImageAlt.key);\n\t};\n\n\t/**\n\t * Method called by clicking ok button or pushing key enter to update imageAlt state and to update alt property from the image that is selected\n\t * This method calls cancelExclusive to show the previous toolbar before enter to edit alt property\n\t *\n\t * @protected\n\t * @method  _updateImageAlt\n\t */\n\t_updateImageAlt = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst imageAlt = this.refs.refAltInput.value;\n\n\t\tthis.setState({\n\t\t\timageAlt,\n\t\t});\n\n\t\tconst imageElement = this._element.findOne('img');\n\t\tconst image = imageElement ? imageElement : this._element;\n\n\t\timage.setAttribute('alt', imageAlt);\n\n\t\teditor.fire('actionPerformed', this);\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the alt button)\n\t\tthis.props.cancelExclusive();\n\t};\n}\n\nexport default EditorContext.toProps(ButtonAccessibilityImageAlt);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\n\nclass ButtonBackgroundColor extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'backgroundColor';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Indicates whether the styles list is expanded or not.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Boolean} expanded\n\t\t */\n\t\texpanded: PropTypes.bool,\n\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * Indicates whether the remove styles item should appear in the styles list.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Boolean} showRemoveStylesItem\n\t\t */\n\t\tshowRemoveStylesItem: PropTypes.bool,\n\n\t\t/**\n\t\t * List of the styles the button is able to handle.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Array} styles\n\t\t */\n\t\tstyles: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\n\t\t/**\n\t\t * Callback provided by the button host to notify when the styles list has been expanded.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Function} toggleDropdown\n\t\t */\n\t\ttoggleDropdown: PropTypes.func,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet activeColor = AlloyEditor.Strings.normal;\n\n\t\tlet activeColorClass = '';\n\n\t\tconst colors = this._getColors();\n\n\t\tconst itemStyle = {\n\t\t\telement: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: '',\n\t\t\t},\n\t\t};\n\n\t\tcolors.forEach(item => {\n\t\t\titemStyle.attributes.class = item.styleClass;\n\n\t\t\tif (this._checkActive(itemStyle)) {\n\t\t\t\tactiveColor = item.name;\n\n\t\t\t\tactiveColorClass = item.style.attributes.class;\n\t\t\t}\n\t\t});\n\n\t\tconst {expanded, tabIndex, toggleDropdown} = this.props;\n\n\t\tconst buttonStylesProps = {\n\t\t\tactiveStyle: activeColor,\n\t\t\tonDismiss: toggleDropdown,\n\t\t\tshowRemoveStylesItem: false,\n\t\t\tstyles: colors,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={tabIndex}>\n\t\t\t\t\t<span className={activeColorClass}>\n\t\t\t\t\t\t<ButtonIcon symbol=\"textbox\" />\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t\t{expanded && <ButtonStylesList {...buttonStylesProps} />}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_applyStyle(className) {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst styleConfig = {\n\t\t\telement: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: className,\n\t\t\t},\n\t\t};\n\n\t\teditor.getSelection().lock();\n\n\t\tthis._getColors().forEach(item => {\n\t\t\tstyleConfig.attributes.class = item.styleClass;\n\n\t\t\tif (this._checkActive(styleConfig)) {\n\t\t\t\teditor.removeStyle(new CKEDITOR.style(styleConfig));\n\t\t\t}\n\t\t});\n\n\t\tstyleConfig.attributes.class = className;\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\teditor.applyStyle(style);\n\n\t\teditor.getSelection().unlock();\n\n\t\teditor.fire('actionPerformed', this);\n\t}\n\n\t/**\n\t * Checks if the given color definition is applied to the current selection in the editor.\n\t *\n\t * @instance\n\t * @memberof ButtonBackgroundColor\n\t * @method _checkActive\n\t * @param {Object} styleConfig color definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t * @protected\n\t * @return {Boolean} Returns true if the color is applied to the selection, false otherwise.\n\t */\n\t_checkActive(styleConfig) {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\t// Styles with wildcard element (*) won't be considered active by CKEditor. Defaulting\n\t\t// to a 'span' element works for most of those cases with no defined element.\n\t\tstyleConfig = CKEDITOR.tools.merge({element: 'span'}, styleConfig);\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\treturn style.checkActive(nativeEditor.elementPath(), nativeEditor);\n\t}\n\n\t/**\n\t * Returns an array of colors. Each color consists of two properties:\n\t * - name - the style name, for example \"default\"\n\t * - style - an object with one property, called `element` which value\n\t * represents the style which have to be applied to the element.\n\t *\n\t * @instance\n\t * @memberof ButtonBackgroundColor\n\t * @method _getColor\n\t * @protected\n\t * @return {Array<object>} An array of objects containing the colors.\n\t */\n\t_getColors() {\n\t\treturn (\n\t\t\tthis.props.styles || [\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.normal,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-body',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: '',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, ''),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.primary,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-primary',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-primary',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-primary'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.disabled,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-secondary',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-secondary',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-secondary'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.success,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-success',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-success',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-success'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.danger,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-danger',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-danger',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-danger'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.warning,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-warning',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-warning',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-warning'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.info,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-info',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-info',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-info'),\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonBackgroundColor;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonBold class provides functionality for styling an selection with strong (bold) style.\n *\n * @class ButtonBold\n * @uses ButtonCommand\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonBold extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonBold\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'bold',\n\t\tkeystroke: {\n\t\t\tfn: 'execCommand',\n\t\t\tkeys: CKEDITOR.CTRL + 66 /* B*/,\n\t\t\tname: 'bold',\n\t\t},\n\t\tstyle: 'coreStyles_bold',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default bold\n\t * @memberof ButtonBold\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'bold';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonBold\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button  ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.bold}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-bold\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.bold}>\n\t\t\t\t<ButtonIcon symbol=\"bold\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonKeystroke(ButtonStateClasses(ButtonStyle(ButtonBold)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCameraImage from './button-camera-image.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonCamera class renders in two different ways:\n *\n * - Normal: Just a button that allows to switch to the edition mode.\n * - Exclusive: Renders ButtonCameraImage in order to take photo from the camera.\n *\n * @class ButtonCamera\n */\nclass ButtonCamera extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default camera\n\t * @memberof ButtonCamera\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'camera';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonCamera\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn <ButtonCameraImage {...this.props} />;\n\t\t} else {\n\t\t\tconst disabled = !(\n\t\t\t\tnavigator.getUserMedia ||\n\t\t\t\t(navigator.webkitGetUserMedia &&\n\t\t\t\t\tlocation.protocol === 'https') ||\n\t\t\t\tnavigator.mozGetUserMedia ||\n\t\t\t\tnavigator.msGetUserMedia\n\t\t\t);\n\n\t\t\tconst label = disabled\n\t\t\t\t? AlloyEditor.Strings.cameraDisabled\n\t\t\t\t: AlloyEditor.Strings.camera;\n\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={label}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-image-camera\"\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tonClick={this.props.requestExclusive.bind(ButtonCamera.key)}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={label}>\n\t\t\t\t\t<ButtonIcon symbol=\"camera\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default ButtonCamera;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonActionStyle from '../base/button-action-style';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonCode class provides wraps a selection in `pre` element.\n *\n * @class ButtonCode\n * @uses ButtonActionStyle\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonCode extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonCode\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tstyle: {\n\t\t\telement: 'pre',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default code\n\t * @memberof ButtonCode\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'code';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonCode\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.code}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-code\"\n\t\t\t\tonClick={this.applyStyle}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.code}>\n\t\t\t\t<ButtonIcon symbol=\"code\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonActionStyle(ButtonStateClasses(ButtonStyle(ButtonCode)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\n\n/**\n * The ButtonColor class provides functionality for changing text color in a document.\n *\n *\n * @class ButtonColor\n */\nclass ButtonColor extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'color';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Indicates whether the styles list is expanded or not.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Boolean} expanded\n\t\t */\n\t\texpanded: PropTypes.bool,\n\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * Indicates whether the remove styles item should appear in the styles list.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Boolean} showRemoveStylesItem\n\t\t */\n\t\tshowRemoveStylesItem: PropTypes.bool,\n\n\t\t/**\n\t\t * List of the styles the button is able to handle.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Array} styles\n\t\t */\n\t\tstyles: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\n\t\t/**\n\t\t * Callback provided by the button host to notify when the styles list has been expanded.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Function} toggleDropdown\n\t\t */\n\t\ttoggleDropdown: PropTypes.func,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet activeColor = AlloyEditor.Strings.normal;\n\n\t\tconst colors = this._getColors();\n\n\t\tcolors.some(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\tactiveColor = item.name;\n\t\t\t}\n\t\t});\n\n\t\tconst {expanded, tabIndex, toggleDropdown} = this.props;\n\n\t\tconst buttonStylesProps = {\n\t\t\tactiveStyle: activeColor,\n\t\t\tonDismiss: toggleDropdown,\n\t\t\tshowRemoveStylesItem: false,\n\t\t\tstyles: colors,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={tabIndex}>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"color-picker\" />\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t\t{expanded && <ButtonStylesList {...buttonStylesProps} />}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_applyStyle(className) {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst styleConfig = {\n\t\t\telement: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: className,\n\t\t\t},\n\t\t};\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\teditor.getSelection().lock();\n\n\t\tthis._getColors().forEach(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\teditor.removeStyle(new CKEDITOR.style(item.style));\n\t\t\t}\n\t\t});\n\n\t\teditor.applyStyle(style);\n\n\t\teditor.getSelection().unlock();\n\n\t\teditor.fire('actionPerformed', this);\n\t}\n\n\t/**\n\t * Checks if the given color definition is applied to the current selection in the editor.\n\t *\n\t * @instance\n\t * @memberof ButtonColor\n\t * @method _checkActive\n\t * @param {Object} styleConfig Color definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t * @protected\n\t * @return {Boolean} Returns true if the color is applied to the selection, false otherwise.\n\t */\n\t_checkActive(styleConfig) {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\t// Styles with wildcard element (*) won't be considered active by CKEditor. Defaulting\n\t\t// to a 'span' element works for most of those cases with no defined element.\n\t\tstyleConfig = CKEDITOR.tools.merge({element: 'span'}, styleConfig);\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\treturn style.checkActive(nativeEditor.elementPath(), nativeEditor);\n\t}\n\n\t/**\n\t * Returns an array of colors. Each color consists of two properties:\n\t * - name - The style name, for example \"default\".\n\t * - style - An object with one property, called `element` which value\n\t *          represents the style which have to be applied to the element.\n\t * - styleFn - The function that is invoked to apply the style to the element.\n\t *\n\t * @instance\n\t * @memberof ButtonColor\n\t * @method _getColor\n\t * @protected\n\t * @return {Array<object>} An array of objects containing the colors.\n\t */\n\t_getColors() {\n\t\treturn (\n\t\t\tthis.props.styles || [\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.primary,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-primary',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-primary'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.success,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-success',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-success'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.danger,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-danger',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-danger'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.warning,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-warning',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-warning'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.info,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-info',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-info'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.dark,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-dark'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.darkGray,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-gray-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-gray-dark'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.secondary,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-secondary',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-secondary'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.light,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-light'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.lighter,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-lighter'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.white,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-white'),\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonColor;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ButtonEmbedVideoEdit from './button-embed-video-edit.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonEmbedVideo class provides functionality for changing text color in a document.\n *\n * @class ButtonEmbedVideo\n */\nclass ButtonEmbedVideo extends React.Component {\n\tstatic key = 'embedVideo';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonEmbedVideo\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonEmbedVideo\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn <ButtonEmbedVideoEdit {...this.props} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.video}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-embed-video\"\n\t\t\t\t\tonClick={this.props.requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.video}>\n\t\t\t\t\t<ButtonIcon symbol=\"video\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default ButtonEmbedVideo;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonEmbedEdit from './button-embed-edit.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonEmbed class provides functionality for creating and editing an embed link in a document.\n * ButtonEmbed renders in two different modes:\n *\n * - Normal: Just a button that allows to switch to the edition mode\n * - Exclusive: The ButtonEmbedEdit UI with all the link edition controls.\n *\n * @class ButtonEmbed\n * @uses ButtonKeystroke\n */\nclass ButtonEmbed extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbed\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tkeystroke: {\n\t\t\tfn: '_requestExclusive',\n\t\t\tkeys: CKEDITOR.CTRL + CKEDITOR.SHIFT + 76 /* L*/,\n\t\t\tname: 'embed',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default embed\n\t * @memberof ButtonEmbed\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'embed';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbed\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn <ButtonEmbedEdit {...this.props} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.link}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-embed\"\n\t\t\t\t\tonClick={this._requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.link}>\n\t\t\t\t\t<ButtonIcon symbol=\"plus\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Requests the link button to be rendered in exclusive mode to allow the embedding of a link.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbed\n\t * @method _requestExclusive\n\t * @protected\n\t */\n\t_requestExclusive = () => {\n\t\tthis.props.requestExclusive(ButtonEmbed.key);\n\t};\n}\n\nexport default ButtonKeystroke(ButtonEmbed);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonActionStyle from '../base/button-action-style';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonH1 class provides wraps a selection in `h1` element.\n *\n * @class ButtonH1\n * @uses ButtonActionStyle\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonH1 extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonH1\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tstyle: {\n\t\t\telement: 'h1',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default h1\n\t * @memberof ButtonH1\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'h1';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonH1\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.h1}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-h1\"\n\t\t\t\tonClick={this.applyStyle}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.h1}>\n\t\t\t\t<ButtonIcon symbol=\"h1\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonActionStyle(ButtonStateClasses(ButtonStyle(ButtonH1)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonActionStyle from '../base/button-action-style';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonH2 class provides wraps a selection in `h2` element.\n *\n * @class ButtonH2\n * @uses ButtonActionStyle\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonH2 extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonH2\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tstyle: {\n\t\t\telement: 'h2',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default h2\n\t * @memberof ButtonH2\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'h2';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonH2\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.h2}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-h2\"\n\t\t\t\tonClick={this.applyStyle}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.h2}>\n\t\t\t\t<ButtonIcon symbol=\"h2\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonActionStyle(ButtonStateClasses(ButtonStyle(ButtonH2)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonHline class provides inserts horizontal line.\n *\n * @class ButtonHline\n * @uses ButtonCommand\n */\nclass ButtonHline extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonHline\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'horizontalrule',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default hline\n\t * @memberof ButtonHline\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'hline';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonHline\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.horizontalrule}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-hline\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.horizontalrule}>\n\t\t\t\t<ButtonIcon symbol=\"hr\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonHline);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonImageAlignCenter class provides functionality for aligning an image in the center.\n *\n * @class ButtonImageAlignCenter\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonImageAlignCenter extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignCenter\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifycenter',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default imageCenter\n\t * @memberof ButtonImageAlignCenter\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'imageCenter';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignCenter\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignCenter}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-image-align-center\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignCenter}>\n\t\t\t\t<ButtonIcon symbol=\"align-image-center\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonImageAlignCenter))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonImageAlignLeft class provides functionality for aligning an image on left.\n *\n * @class ButtonImageAlignLeft\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonImageAlignLeft extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignLeft\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyleft',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default imageLeft\n\t * @memberof ButtonImageAlignLeft\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'imageLeft';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignLeft\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignLeft}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-image-align-left\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignLeft}>\n\t\t\t\t<ButtonIcon symbol=\"align-image-left\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonImageAlignLeft))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonImageAlignRight class provides functionality for aligning an image on right.\n *\n * @class ButtonImageAlignRight\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonImageAlignRight extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignRight\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyright',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default imageRight\n\t * @memberof ButtonImageAlignRight\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'imageRight';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignRight\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignRight}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-image-align-right\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignRight}>\n\t\t\t\t<ButtonIcon symbol=\"align-image-right\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonImageAlignRight))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonImage class inserts an image to the content.\n *\n * @class ButtonImage\n */\nclass ButtonImage extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default image\n\t * @memberof ButtonImage\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'imageFromFile';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.fileInput = React.createRef();\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonImage\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst inputSyle = {display: 'none'};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.image}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-image\"\n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.image}>\n\t\t\t\t\t<ButtonIcon symbol=\"document-image\" />\n\t\t\t\t</button>\n\n\t\t\t\t<input\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\tonChange={this._onInputChange}\n\t\t\t\t\tref={this.fileInput}\n\t\t\t\t\tstyle={inputSyle}\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Simulates click on the input element. This will open browser's native file open dialog.\n\t *\n\t * @instance\n\t * @memberof ButtonImage\n\t * @method handleClick\n\t * @param {SyntheticEvent} event The received click event on the button.\n\t */\n\thandleClick = () => {\n\t\tthis.fileInput.current.click();\n\t};\n\n\t/**\n\t * On input change, reads the chosen file and fires an event `beforeImageAdd` with the image which will be added\n\t * to the content. The image file will be passed in the `imageFiles` property.\n\t * If any of the listeners returns `false` or cancels the event, the image won't be added to the content.\n\t * Otherwise, an event `imageAdd` will be fired with the inserted element into the editable area.\n\t * The passed params will be:\n\t * - `el` - the created img element\n\t * - `file` - the original image file from the input element\n\t *\n\t * @fires ButtonImage#beforeImageAdd\n\t * @fires ButtonImage#imageAdd\n\t * @instance\n\t * @memberof ButtonImage\n\t * @method _onInputChange\n\t * @protected\n\t */\n\t_onInputChange = () => {\n\t\tconst inputEl = this.fileInput.current;\n\n\t\t// On IE11 the function might be called with an empty array of\n\t\t// files. In such a case, no actions will be taken.\n\t\tif (!inputEl.files.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst reader = new FileReader();\n\t\tconst file = inputEl.files[0];\n\n\t\treader.onload = event => {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\tconst result = editor.fire('beforeImageAdd', {\n\t\t\t\timageFiles: file,\n\t\t\t});\n\n\t\t\tif (result) {\n\t\t\t\tconst el = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t\t`<img src=\"${event.target.result}\">`\n\t\t\t\t);\n\n\t\t\t\teditor.insertElement(el);\n\n\t\t\t\teditor.fire('actionPerformed', this);\n\n\t\t\t\tconst imageData = {\n\t\t\t\t\tel,\n\t\t\t\t\tfile,\n\t\t\t\t};\n\n\t\t\t\teditor.fire('imageAdd', imageData);\n\t\t\t}\n\t\t};\n\n\t\treader.readAsDataURL(file);\n\n\t\tinputEl.value = '';\n\t};\n}\n\nexport default ButtonImage;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonIndentBlock class provides functionality for indenting the selected blocks.\n *\n * @class ButtonIndentBlock\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonIndentBlock extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonIndentBlock\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'indent',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default indentBlock\n\t * @memberof ButtonIndentBlock\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'indentBlock';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonIndentBlock\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.indent}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-indent-block\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.indent}>\n\t\t\t\t<ButtonIcon symbol=\"indent-less\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonIndentBlock))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonItalic class provides functionality for styling an selection with italic (em) style.\n *\n * @class ButtonItalic\n * @uses ButtonCommand\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonItalic extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonItalic\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'italic',\n\t\tkeystroke: {\n\t\t\tfn: 'execCommand',\n\t\t\tkeys: CKEDITOR.CTRL + 73 /* I*/,\n\t\t\tname: 'italic',\n\t\t},\n\t\tstyle: 'coreStyles_italic',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default italic\n\t * @memberof ButtonItalic\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'italic';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonItalic\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.italic}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-italic\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.italic}>\n\t\t\t\t<ButtonIcon symbol=\"italic\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonKeystroke(ButtonStateClasses(ButtonStyle(ButtonItalic)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * @class ButtonItemSelectorAudio\n * @uses ButtonCommand\n */\nclass ButtonItemSelectorAudio extends React.Component {\n\tstatic defaultProps = {\n\t\tcommand: 'audioselector',\n\t};\n\n\tstatic key = 'audio';\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.audio}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-audio\"\n\t\t\t\tonClick={this._handleClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.audio}>\n\t\t\t\t<ButtonIcon symbol=\"audio\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t_handleClick = () => {\n\t\tthis.execCommand(null);\n\t};\n}\n\nexport default ButtonCommand(ButtonItemSelectorAudio);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * @class ButtonItemSelectorImage\n * @uses ButtonCommand\n */\nclass ButtonItemSelectorImage extends React.Component {\n\tstatic defaultProps = {\n\t\tcommand: 'imageselector',\n\t};\n\n\tstatic key = 'image';\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.image}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-image\"\n\t\t\t\tonClick={this._handleClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.image}>\n\t\t\t\t<ButtonIcon symbol=\"picture\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t_handleClick = () => {\n\t\tthis.execCommand(null);\n\t};\n}\n\nexport default ButtonCommand(ButtonItemSelectorImage);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * @class ButtonItemSelectorVideo\n * @uses ButtonCommand\n */\nclass ButtonItemSelectorVideo extends React.Component {\n\tstatic defaultProps = {\n\t\tcommand: 'videoselector',\n\t};\n\n\tstatic key = 'video';\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.video}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-video\"\n\t\t\t\tonClick={this._handleClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.video}>\n\t\t\t\t<ButtonIcon symbol=\"video\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t_handleClick = () => {\n\t\tthis.execCommand(null);\n\t};\n}\n\nexport default ButtonCommand(ButtonItemSelectorVideo);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonProps from '../base/button-props';\nimport ButtonLinkEditBrowse from './button-link-edit-browse.jsx';\nimport ButtonLink from './button-link.jsx';\n\n/**\n * The ButtonLinkBrowse class provides functionality for changing text color in a document.\n *\n * @uses ButtonKeystroke\n * @uses ButtonProps\n *\n * @class ButtonLinkBrowse\n */\nclass ButtonLinkBrowse extends React.Component {\n\tstatic defaultProps = {\n\t\tkeystroke: {\n\t\t\tfn: '_requestExclusive',\n\t\t\tkeys: CKEDITOR.CTRL + 76 /* L*/,\n\t\t\tname: 'linkBrowse',\n\t\t},\n\t};\n\n\tstatic key = 'linkBrowse';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\tthis.props = this.mergeButtonCfgProps();\n\n\t\t\treturn <ButtonLinkEditBrowse {...this.props} />;\n\t\t} else {\n\t\t\treturn <ButtonLink {...this.props} />;\n\t\t}\n\t}\n\n\t/**\n\t * Requests the link button to be rendered in exclusive mode to allow the creation of a link.\n\t *\n\t * @protected\n\t * @method _requestExclusive\n\t */\n\t_requestExclusive() {\n\t\tthis.props.requestExclusive(ButtonLinkBrowse.key);\n\t}\n}\n\nexport default ButtonProps(ButtonKeystroke(ButtonLinkBrowse));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonOrderedList class provides functionality for creating ordered lists in an editor.\n *\n * @class ButtonOrderedList\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonOrderedList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonOrderedList\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'numberedlist',\n\t\tstyle: {\n\t\t\telement: 'ol',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default ol\n\t * @memberof ButtonOrderedList\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'ol';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonOrderedList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.numberedlist}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-ol\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.numberedlist}>\n\t\t\t\t<ButtonIcon symbol=\"list-ol\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonStateClasses(ButtonStyle(ButtonOrderedList))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonOutdentBlock class provides functionality for outdenting blocks.\n *\n * @class ButtonOutdentBlock\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonOutdentBlock extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonOutdentBlock\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'outdent',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default outdentBlock\n\t * @memberof ButtonOutdentBlock\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'outdentBlock';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonOutdentBlock\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.outdent}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-outdent-block\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.outdent}>\n\t\t\t\t<ButtonIcon symbol=\"indent-more\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonOutdentBlock))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphAlignLeft class provides functionality for aligning a paragraph on left.\n *\n * @class ButtonParagraphAlignLeft\n *\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphAlignLeft extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlignLeft\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyleft',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default paragraphLeft\n\t * @memberof ButtonParagraphAlignLeft\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'paragraphLeft';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlignLeft\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignLeft}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-paragraph-align-left\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignLeft}>\n\t\t\t\t<ButtonIcon symbol=\"align-left\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonParagraphAlignLeft))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphAlignRight class provides functionality for aligning a paragraph on right.\n *\n * @class ButtonParagraphAlignRight\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphAlignRight extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlignRight\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyright',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default paragraphRight\n\t * @memberof ButtonParagraphAlignRight\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'paragraphRight';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlignRight\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignRight}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-paragraph-align-right\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignRight}>\n\t\t\t\t<ButtonIcon symbol=\"align-right\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonParagraphAlignRight))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphAlign class provides functionality to work with table rows.\n *\n * @class ButtonParagraphAlign\n */\nclass ButtonParagraphAlign extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'paragraphAlign';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlign\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonParagraphAlign.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tinlineIcons={false}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst activeCommand = this._getCommands()\n\t\t\t.filter(alignment => {\n\t\t\t\tconst command = editor.getCommand(alignment.command);\n\n\t\t\t\treturn command ? command.state === CKEDITOR.TRISTATE_ON : false;\n\t\t\t})\n\t\t\t.pop();\n\n\t\tconst iconClassName = activeCommand.icon;\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-dropdown ae-container-dropdown-xsmall ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={activeCommand.label}\n\t\t\t\t\taria-owns={buttonCommandsListId}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.row}>\n\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t<ButtonIcon symbol={iconClassName} />\n\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlign\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'justifyleft',\n\t\t\t\t\ticon: 'align-left',\n\t\t\t\t\tlabel: AlloyEditor.Strings.alignLeft,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'justifycenter',\n\t\t\t\t\ticon: 'align-center',\n\t\t\t\t\tlabel: AlloyEditor.Strings.alignCenter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'justifyright',\n\t\t\t\t\ticon: 'align-right',\n\t\t\t\t\tlabel: AlloyEditor.Strings.alignRight,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'justifyblock',\n\t\t\t\t\ticon: 'align-justify',\n\t\t\t\t\tlabel: AlloyEditor.Strings.alignJustify,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonParagraphAlign;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphCenter class provides functionality for centering a paragraph.\n *\n * @class ButtonParagraphCenter\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphCenter extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphCenter\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifycenter',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default paragraphCenter\n\t * @memberof ButtonParagraphCenter\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'paragraphCenter';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphCenter\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignCenter}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-paragraph-center\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignCenter}>\n\t\t\t\t<ButtonIcon symbol=\"align-center\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonParagraphCenter))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphJustify class provides functionality for justfying a paragraph.\n *\n * @class ButtonParagraphJustify\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphJustify extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphJustify\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyblock',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default paragraphJustify\n\t * @memberof ButtonParagraphJustify\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'paragraphJustify';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphJustify\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignJustify}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-paragraph-justify\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignJustify}>\n\t\t\t\t<ButtonIcon symbol=\"align-justify\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonParagraphJustify))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonQuote class wraps a selection in `blockquote` element.\n *\n * @class ButtonQuote\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonQuote extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonQuote\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'blockquote',\n\t\tstyle: {\n\t\t\telement: 'blockquote',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default quote\n\t * @memberof ButtonQuote\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'quote';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonQuote\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.quote}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-quote\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.quote}>\n\t\t\t\t<ButtonIcon symbol=\"quote-right\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonStateClasses(ButtonStyle(ButtonQuote)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonRemoveFormat class removes style formatting.\n *\n * @class ButtonRemoveFormat\n * @uses ButtonCommand\n */\nclass ButtonRemoveFormat extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonRemoveFormat\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'removeFormat',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default removeFormat\n\t * @memberof ButtonRemoveFormat\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'removeFormat';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonRemoveFormat\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.removeformat}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-removeformat\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.removeformat}>\n\t\t\t\t<ButtonIcon symbol=\"remove-style\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonRemoveFormat);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonRemoveImage class removes an image using a CKEDITOR.command.\n *\n * @class ButtonRemoveImage\n * @uses ButtonCommand\n */\nclass ButtonRemoveImage extends React.Component {\n\tstatic defaultProps = {\n\t\tcommand: 'removeImage',\n\t};\n\n\tstatic key = 'removeImage';\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.removeImage}\n\t\t\t\taria-pressed={false}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttitle={AlloyEditor.Strings.removeImage}>\n\t\t\t\t<ButtonIcon symbol=\"times-circle\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonRemoveImage);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\n/**\n * The ButtonSeparator function renders a simple separator.\n */\nfunction ButtonSeparator(_props) {\n\treturn <span className=\"ae-separator\" />;\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default separator\n * @memberof ButtonSeparator\n * @property {String} key\n * @static\n */\nButtonSeparator.key = 'separator';\n\nexport default ButtonSeparator;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\n\n/**\n * The ButtonSpacing class provides functionality for changing text spacing in a document.\n *\n * @class ButtonSpacing\n */\nclass ButtonSpacing extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'spacing';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Indicates whether the styles list is expanded or not.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Boolean} expanded\n\t\t */\n\t\texpanded: PropTypes.bool,\n\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * Indicates whether the remove styles item should appear in the styles list.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Boolean} showRemoveStylesItem\n\t\t */\n\t\tshowRemoveStylesItem: PropTypes.bool,\n\n\t\t/**\n\t\t * List of the styles the button is able to handle.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Array} styles\n\t\t */\n\t\tstyles: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\n\t\t/**\n\t\t * Callback provided by the button host to notify when the styles list has been expanded.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Function} toggleDropdown\n\t\t */\n\t\ttoggleDropdown: PropTypes.func,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet activeSpacing = '1.0x';\n\n\t\tconst spacings = this._getSpacings();\n\n\t\tspacings.forEach(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\tactiveSpacing = item.name;\n\t\t\t}\n\t\t});\n\n\t\tconst {editor, expanded, tabIndex, toggleDropdown} = this.props;\n\n\t\tconst buttonStylesProps = {\n\t\t\tactiveStyle: activeSpacing,\n\t\t\teditor,\n\t\t\tonDismiss: toggleDropdown,\n\t\t\tshowRemoveStylesItem: false,\n\t\t\tstyles: spacings,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-container-dropdown-small ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={tabIndex}>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"separator\" />\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t{activeSpacing}\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t\t{expanded && <ButtonStylesList {...buttonStylesProps} />}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_applyStyle(className) {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst styleConfig = {\n\t\t\telement: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: className,\n\t\t\t},\n\t\t};\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\teditor.getSelection().lock();\n\n\t\tthis._getSpacings().forEach(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\teditor.removeStyle(new CKEDITOR.style(item.style));\n\t\t\t}\n\t\t});\n\n\t\teditor.applyStyle(style);\n\n\t\teditor.getSelection().unlock();\n\n\t\teditor.fire('actionPerformed', this);\n\t}\n\n\t/**\n\t * Checks if the given spacing definition is applied to the current selection in the editor.\n\t *\n\t * @instance\n\t * @memberof Spacing\n\t * @method _checkActive\n\t * @param {Object} styleConfig Spacing definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t * @protected\n\t * @return {Boolean} Returns true if the spacing is applied to the selection, false otherwise.\n\t */\n\t_checkActive(styleConfig) {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\tlet active = true;\n\n\t\tconst elementPath = nativeEditor.elementPath();\n\n\t\tif (elementPath && elementPath.lastElement) {\n\t\t\tstyleConfig.attributes.class.split(' ').forEach(className => {\n\t\t\t\tactive = active && elementPath.lastElement.hasClass(className);\n\t\t\t});\n\t\t} else {\n\t\t\tactive = false;\n\t\t}\n\n\t\treturn active;\n\t}\n\n\t/**\n\t * Returns an array of spacings. Each spacing consists from three properties:\n\t * - name - the style name, for example \"default\"\n\t * - style - an object with one property, called `element` which value\n\t * represents the style which have to be applied to the element.\n\t * - styleFn - a function which applies selected style to the editor selection\n\t *\n\t * @instance\n\t * @memberof Spacing\n\t * @method _getSpacings\n\t * @protected\n\t * @return {Array<object>} An array of objects containing the spacings.\n\t */\n\t_getSpacings() {\n\t\treturn (\n\t\t\tthis.props.styles || [\n\t\t\t\t{\n\t\t\t\t\tname: '1.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: '',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, ''),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '1.5x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-1 mb-1',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-1 mb-1'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '2.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-2 mb-2',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-2 mb-2'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '3.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-3 mb-3',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-3 mb-3'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '4.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-4 mb-4',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-4 mb-4'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '5.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-5 mb-5',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-5 mb-5'),\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonSpacing;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonStrike class styles a selection with strike style.\n *\n * @class ButtonStrike\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonStrike extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonStrike\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'strike',\n\t\tstyle: 'coreStyles_strike',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default strike\n\t * @memberof ButtonStrike\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'strike';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t * @instance\n\t * @memberof ButtonStrike\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.strike}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-strike\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.strike}>\n\t\t\t\t<ButtonIcon symbol=\"strikethrough\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonStateClasses(ButtonStyle(ButtonStrike)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\n\n/**\n * The ButtonStyles class provides functionality for styling a selection with a list of\n * configurable and customizable styles. The allowed styles follow CKEDITOR.Style configuration\n * (http://docs.ckeditor.com/#!/api/CKEDITOR.style)\n *\n * @class ButtonStyles\n */\nclass ButtonStyles extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default styles\n\t * @memberof ButtonStyles\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'styles';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonStyles\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet activeStyle = AlloyEditor.Strings.normal;\n\n\t\tconst styles = this._getStyles();\n\n\t\tstyles.forEach(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\tactiveStyle = item.name;\n\t\t\t}\n\t\t});\n\n\t\tlet buttonStylesList;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonStylesList = (\n\t\t\t\t<ButtonStylesList\n\t\t\t\t\tactiveStyle={activeStyle}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t\tshowRemoveStylesItem={this.props.showRemoveStylesItem}\n\t\t\t\t\tstyles={styles}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-dropdown ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={AlloyEditor.Strings.styles + ' ' + activeStyle}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.styles + ' ' + activeStyle}>\n\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t<span className=\"ae-container-dropdown-selected-item\">\n\t\t\t\t\t\t\t{activeStyle}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t{buttonStylesList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Checks if the given style definition is applied to the current selection in the editor.\n\t *\n\t * @instance\n\t * @memberof ButtonStyles\n\t * @method _checkActive\n\t * @param {Object} styleConfig Style definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t * @protected\n\t * @return {Boolean} Returns true if the style is applied to the selection, false otherwise.\n\t */\n\t_checkActive(styleConfig) {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\t// Styles with wildcard element (*) won't be considered active by CKEditor. Defaulting\n\t\t// to a 'span' element works for most of those cases with no defined element.\n\t\tstyleConfig = CKEDITOR.tools.merge({element: 'span'}, styleConfig);\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\treturn style.checkActive(nativeEditor.elementPath(), nativeEditor);\n\t}\n\n\t/**\n\t * Returns an array of styles. Each style consists from two properties:\n\t * - name - the style name, for example \"h1\"\n\t * - style - an object with one property, called `element` which value\n\t * represents the style which have to be applied to the element.\n\t *\n\t * @instance\n\t * @memberof ButtonStyles\n\t * @method _getStyles\n\t * @protected\n\t * @return {Array<object>} An array of objects containing the styles.\n\t */\n\t_getStyles() {\n\t\treturn (\n\t\t\tthis.props.styles || [\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.h1,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'h1',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.h2,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'h2',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.formatted,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'pre',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.cite,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'cite',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.code,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'code',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonStyles;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonSubscript class provides functionality for applying subscript style to a text selection.\n *\n * @class ButtonSubscript\n *\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonSubscript extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonSubscript\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'subscript',\n\t\tstyle: 'coreStyles_subscript',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default subscript\n\t * @memberof ButtonSubscript\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'subscript';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonSubscript\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.subscript}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-subscript\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.subscript}>\n\t\t\t\t<ButtonIcon symbol=\"subscript\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonStateClasses(ButtonStyle(ButtonSubscript)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonSuperscript class provides functionality for applying superscript style to a text selection.\n *\n * @class ButtonSuperscript\n *\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonSuperscript extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonSuperscript\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'superscript',\n\t\tstyle: 'coreStyles_superscript',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default superscript\n\t * @memberof ButtonSuperscript\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'superscript';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonSuperscript\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.superscript}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-superscript\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.superscript}>\n\t\t\t\t<ButtonIcon symbol=\"superscript\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonStateClasses(ButtonStyle(ButtonSuperscript))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableCell class provides functionality to work with table cells.\n *\n * @class ButtonTableCell\n */\nclass ButtonTableCell extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableCell\n\t * @memberof ButtonTableCell\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableCell';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableCell\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonTableCell.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={AlloyEditor.Strings.cell}\n\t\t\t\t\taria-owns={buttonCommandsListId}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.cell}>\n\t\t\t\t\t<ButtonIcon symbol=\"add-cell\" />\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonTableCell\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellInsertBefore',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellInsertBefore,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellInsertAfter',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellInsertAfter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellDelete',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellDelete,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellMerge',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellMerge,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellMergeDown',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellMergeDown,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellMergeRight',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellMergeRight,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellHorizontalSplit',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellSplitHorizontal,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellVerticalSplit',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellSplitVertical,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonTableCell;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableColumn class provides functionality to work with table columns.\n *\n * @class ButtonTableColumn\n */\nclass ButtonTableColumn extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableColumn\n\t * @memberof ButtonTableColumn\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableColumn';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableColumn\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonTableColumn.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={AlloyEditor.Strings.column}\n\t\t\t\t\taria-owns={buttonCommandsListId}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"listbox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.column}>\n\t\t\t\t\t<ButtonIcon symbol=\"add-column\" />\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonTableColumn\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'columnInsertBefore',\n\t\t\t\t\tlabel: AlloyEditor.Strings.columnInsertBefore,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'columnInsertAfter',\n\t\t\t\t\tlabel: AlloyEditor.Strings.columnInsertAfter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'columnDelete',\n\t\t\t\t\tlabel: AlloyEditor.Strings.columnDelete,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonTableColumn;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableHeading class provides functionality to work with table heading.\n *\n * @class ButtonTableHeading\n */\nclass ButtonTableHeading extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableRow\n\t * @memberof ButtonTableHeading\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableHeading';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableHeading\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonTableHeading.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\tconst activeHeading = new CKEDITOR.Table(\n\t\t\tthis.context.editor.get('nativeEditor')\n\t\t).getHeading();\n\t\tconst activeHeadingIntro = AlloyEditor.Strings.headers + ':';\n\t\tconst activeHeadingLabel =\n\t\t\tAlloyEditor.Strings['headers' + activeHeading];\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-dropdown-xl ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label=\"\"\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle=\"\">\n\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t<span className=\"ae-container-dropdown-selected-item\">\n\t\t\t\t\t\t\t{activeHeadingIntro}{' '}\n\t\t\t\t\t\t\t<strong>{activeHeadingLabel}</strong>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonTableHeading\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'tableHeadingNone',\n\t\t\t\t\tlabel: AlloyEditor.Strings.headersNone,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'tableHeadingRow',\n\t\t\t\t\tlabel: AlloyEditor.Strings.headersRow,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'tableHeadingColumn',\n\t\t\t\t\tlabel: AlloyEditor.Strings.headersColumn,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'tableHeadingBoth',\n\t\t\t\t\tlabel: AlloyEditor.Strings.headersBoth,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonTableHeading;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableRemove class provides functionality for removing a table\n *\n * @class ButtonTableRemove\n */\nclass ButtonTableRemove extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableRemove\n\t * @memberof ButtonTableRemove\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableRemove';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableRemove\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.deleteTable}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-table-remove\"\n\t\t\t\tonClick={this._removeTable}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.deleteTable}>\n\t\t\t\t<ButtonIcon symbol=\"trash\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t/**\n\t * Removes the table in the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonTableRemove\n\t * @method _removeTable\n\t * @protected\n\t */\n\t_removeTable = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst tableUtils = new CKEDITOR.Table(editor);\n\n\t\ttableUtils.remove();\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n}\n\nexport default ButtonTableRemove;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableRow class provides functionality to work with table rows.\n *\n * @class ButtonTableRow\n */\nclass ButtonTableRow extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableRow\n\t * @memberof ButtonTableRow\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableRow';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableRow\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonTableRow.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={AlloyEditor.Strings.row}\n\t\t\t\t\taria-owns={buttonCommandsListId}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.row}>\n\t\t\t\t\t<ButtonIcon symbol=\"add-row\" />\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonTableRow\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'rowInsertBefore',\n\t\t\t\t\tlabel: AlloyEditor.Strings.rowInsertBefore,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'rowInsertAfter',\n\t\t\t\t\tlabel: AlloyEditor.Strings.rowInsertAfter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'rowDelete',\n\t\t\t\t\tlabel: AlloyEditor.Strings.rowDelete,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonTableRow;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonTableEdit from './button-table-edit.jsx';\n\n/**\n * The ButtonTable class provides functionality for creating and editing a table in a document. ButtonTable\n * renders in two different modes:\n *\n * - Normal: Just a button that allows to switch to the edition mode\n * - Exclusive: The ButtonTableEdit UI with all the table edition controls.\n *\n * @class ButtonTable\n */\nclass ButtonTable extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default table\n\t * @memberof ButtonTable\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'table';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTable\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn <ButtonTableEdit {...this.props} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.table}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-table\"\n\t\t\t\t\tonClick={this.props.requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.table}>\n\t\t\t\t\t<ButtonIcon symbol=\"table\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default ButtonTable;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\nconst MAX_TWEET_LENGTH = 280;\n\n/**\n * The ButtonTwitter class provides functionality for creating a link which\n * allows people to tweet part of the content in the editor.\n *\n * @class ButtonTwitter\n * @uses ButtonStateClasses\n */\nclass ButtonTwitter extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default twitter\n\t * @memberof ButtonTwitter\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'twitter';\n\n\t/**\n\t * Creates or removes the twitter link on the selection.\n\t *\n\t * @instance\n\t * @memberof ButtonTwitter\n\t * @method handleClick\n\t */\n\thandleClick = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst linkUtils = new CKEDITOR.Link(editor);\n\n\t\tif (this.isActive()) {\n\t\t\tlinkUtils.remove(linkUtils.getFromSelection());\n\t\t} else {\n\t\t\tlinkUtils.create(this._getHref(), {\n\t\t\t\tclass: 'ae-twitter-link',\n\t\t\t\ttarget: '_blank',\n\t\t\t});\n\t\t}\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n\n\t/**\n\t * Checks if the current selection is contained within a link that points to twitter.com/intent/tweet.\n\t *\n\t * @instance\n\t * @memberof ButtonTwitter\n\t * @method isActive\n\t * @return {Boolean} True if the selection is inside a twitter link, false otherwise.\n\t */\n\tisActive() {\n\t\tconst link = new CKEDITOR.Link(\n\t\t\tthis.context.editor.get('nativeEditor')\n\t\t).getFromSelection();\n\n\t\treturn (\n\t\t\tlink &&\n\t\t\tlink.getAttribute('href').indexOf('twitter.com/intent/tweet') !== -1\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTwitter\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.twitter}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-twitter\"\n\t\t\t\tonClick={this.handleClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.twitter}>\n\t\t\t\t<ButtonIcon symbol=\"twitter\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t/**\n\t * Generates the appropriate twitter url based on the selected text and the configuration\n\t * options received via props.\n\t *\n\t * @instance\n\t * @memberof ButtonTwitter\n\t * @method _getHref\n\t * @protected\n\t * @return {String} A valid twitter url with the selected text and given configuration.\n\t */\n\t_getHref() {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\t\tconst selectedText = nativeEditor\n\t\t\t.getSelection()\n\t\t\t.getSelectedText()\n\t\t\t.substring(0, MAX_TWEET_LENGTH);\n\t\tconst url = this.props.url;\n\t\tconst via = this.props.via;\n\t\tlet twitterHref =\n\t\t\t'https://twitter.com/intent/tweet?text=' + selectedText;\n\n\t\tif (url) {\n\t\t\ttwitterHref += '&url=' + url;\n\t\t}\n\n\t\tif (via) {\n\t\t\ttwitterHref += '&via=' + via;\n\t\t}\n\n\t\treturn twitterHref;\n\t}\n}\n\nexport default ButtonStateClasses(ButtonTwitter);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonUnorderedlist class provides functionality for creating unordered lists in an editor.\n *\n * @class ButtonUnorderedlist\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonUnorderedlist extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonUnorderedlist\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'bulletedlist',\n\t\tstyle: {\n\t\t\telement: 'ul',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default ul\n\t * @memberof ButtonUnorderedlist\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'ul';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonUnorderedlist\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.bulletedlist}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-ul\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.bulletedlist}>\n\t\t\t\t<ButtonIcon symbol=\"list-ul\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonStateClasses(ButtonStyle(ButtonUnorderedlist))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonUnderline class provides functionality for underlying a text selection.\n *\n * @class ButtonUnderline\n * @uses ButtonCommand\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonUnderline extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonUnderline\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'underline',\n\t\tkeystroke: {\n\t\t\tfn: 'execCommand',\n\t\t\tkeys: CKEDITOR.CTRL + 85 /* U*/,\n\t\t\tname: 'underline',\n\t\t},\n\t\tstyle: 'coreStyles_underline',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default underline\n\t * @memberof ButtonUnderline\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'underline';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonUnderline\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.underline}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-underline\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.underline}>\n\t\t\t\t<ButtonIcon symbol=\"underline\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonKeystroke(ButtonStateClasses(ButtonStyle(ButtonUnderline)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nexport {default as ButtonActionStyle} from './button-action-style';\nexport {default as ButtonCommandActive} from './button-command-active';\nexport {default as ButtonCommand} from './button-command';\nexport {default as ButtonKeystroke} from './button-keystroke';\nexport {default as ButtonProps} from './button-props';\nexport {default as ButtonStateClasses} from './button-state-classes';\nexport {default as ButtonStyle} from './button-style';\nexport {default as ToolbarButtons} from './toolbar-buttons';\nexport {default as WidgetArrowBox} from './widget-arrow-box';\nexport {default as WidgetDropdown} from './widget-dropdown';\nexport {default as WidgetExclusive} from './widget-exclusive';\nexport {default as WidgetFocusManager} from './widget-focus-manager';\nexport {default as WidgetInteractionPoint} from './widget-interaction-point';\nexport {default as WidgetPosition} from './widget-position';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonActionStyle is a mixin that provides applying style\n * implementation for a button based on the `applyStyle` and\n * `removeStyle` API of CKEDITOR.\n *\n * To execute properly, the component has to expose the following\n * methods which can be obtained out of the box using the {{#crossLink\n * \"ButtonStyle\"}}{{/crossLink}} mixin:\n * - `Function` {{#crossLink \"ButtonStyle/isActive\"}}{{/crossLink}} to\n *    check the active state\n * - `Function` {{#crossLink \"ButtonStyle/getStyle\"}}{{/crossLink}} to\n *    return the style that should be applied\n *\n * @class ButtonActionStyle\n */\nconst ButtonActionStyle = {\n\t/**\n\t * Removes or applies the component style to the current selection.\n\t *\n\t * @instance\n\t * @memberof ButtonActionStyle\n\t * @method applyStyle\n\t */\n\tapplyStyle() {\n\t\tif (Lang.isFunction(this.isActive) && Lang.isFunction(this.getStyle)) {\n\t\t\tconst editor = this.props.editor.get('nativeEditor');\n\n\t\t\teditor.getSelection().lock();\n\n\t\t\tif (this.isActive()) {\n\t\t\t\teditor.removeStyle(this.getStyle());\n\t\t\t} else {\n\t\t\t\teditor.applyStyle(this.getStyle());\n\t\t\t}\n\n\t\t\teditor.getSelection().unlock();\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t}\n\t},\n};\n\nexport default ButtonActionStyle;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * ButtonCommandActive is a mixin that provides an `isActive` method to\n * determine if a context-aware command is currently in an active state.\n *\n * @class ButtonCommandActive\n */\nconst ButtonCommandActive = {\n\t/**\n\t * Checks if the command is active in the current selection.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandActive\n\t * @method isActive\n\t * @return {Boolean} True if the command is active, false otherwise.\n\t */\n\tisActive() {\n\t\tconst editor = this.props.editor.get('nativeEditor');\n\n\t\tconst command = editor.getCommand(this.props.command);\n\n\t\treturn command ? command.state === CKEDITOR.TRISTATE_ON : false;\n\t},\n};\n\nexport default ButtonCommandActive;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\n/**\n * ButtonCommand is a mixin that executes a command via CKEDITOR's API.\n *\n * @class ButtonCommand\n */\nconst ButtonCommand = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The command that should be executed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonCommand\n\t\t * @property {String} command\n\t\t */\n\t\tcommand: PropTypes.string.isRequired,\n\n\t\t/**\n\t\t * Indicates that the command may cause the editor to have a different.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonCommand\n\t\t * @property {boolean} modifiesSelection\n\t\t */\n\t\tmodifiesSelection: PropTypes.bool,\n\t},\n\n\t/**\n\t * Executes a CKEditor command and fires `actionPerformed` event.\n\t *\n\t * @instance\n\t * @memberof ButtonCommand\n\t * @param {Object=} data Optional data to be passed to CKEDITOR's `execCommand` method.\n\t * @method execCommand\n\t */\n\texecCommand(data) {\n\t\tconst editor = this.props.editor.get('nativeEditor');\n\n\t\teditor.execCommand(this.props.command, data);\n\n\t\tif (this.props.modifiesSelection) {\n\t\t\teditor.selectionChange(true);\n\t\t}\n\n\t\teditor.fire('actionPerformed', this);\n\t},\n};\n\nexport default ButtonCommand;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonKeystroke is a mixin that provides a `keystroke` prop that allows configuring\n * a function of the instance to be invoked upon the keystroke activation.\n *\n * @class ButtonKeystroke\n */\nconst ButtonKeystroke = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The keystroke definition. An object with the following properties:\n\t\t * - fn: The function to be executed\n\t\t * - keys: The keystroke definition, as expected by http://docs.ckeditor.com/#!/api/CKEDITOR.editor-method-setKeystroke\n\t\t * - name: The name for the CKEditor command that will be created. If empty,\n\t\t * a random name will be created on the fly\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonKeystroke\n\t\t * @property {Object} keystroke\n\t\t */\n\t\tkeystroke: PropTypes.object.isRequired,\n\t},\n\n\t/**\n\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonKeystroke\n\t * @method componentWillMount\n\t */\n\tcomponentWillMount() {\n\t\tconst nativeEditor = this.props.editor.get('nativeEditor');\n\t\tconst keystroke = this.props.keystroke;\n\n\t\tconst commandName =\n\t\t\tkeystroke.name || ((Math.random() * 1e9) >>> 0).toString();\n\n\t\tlet command = nativeEditor.getCommand(commandName);\n\n\t\tif (!command) {\n\t\t\tcommand = new CKEDITOR.command(nativeEditor, {\n\t\t\t\texec: function(editor) {\n\t\t\t\t\tconst keystrokeFn = keystroke.fn;\n\n\t\t\t\t\tif (Lang.isString(keystrokeFn)) {\n\t\t\t\t\t\tthis[keystrokeFn].call(this, editor);\n\t\t\t\t\t} else if (Lang.isFunction(keystrokeFn)) {\n\t\t\t\t\t\tkeystrokeFn.call(this, editor);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t});\n\n\t\t\tnativeEditor.addCommand(commandName, command);\n\t\t}\n\n\t\tthis._defaultKeystrokeCommand =\n\t\t\tnativeEditor.keystrokeHandler.keystrokes[keystroke.keys];\n\n\t\tnativeEditor.setKeystroke(keystroke.keys, commandName);\n\t},\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t *\n\t * @instance\n\t * @memberof ButtonKeystroke\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tthis.props.editor\n\t\t\t.get('nativeEditor')\n\t\t\t.setKeystroke(\n\t\t\t\tthis.props.keystroke.keys,\n\t\t\t\tthis._defaultKeystrokeCommand\n\t\t\t);\n\t},\n};\n\nexport default ButtonKeystroke;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\nimport ButtonLinkEdit from '../buttons/button-link-edit.jsx';\n\n/**\n * ButtonProps is a mixin that provides a style prop and some methods to apply the resulting\n * style and checking if it is present in a given path or selection.\n *\n * @class ButtonProps\n */\nconst ButtonProps = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The editor instance where the component is being used.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonProps\n\t\t * @property {Object} editor\n\t\t */\n\t\teditor: PropTypes.object.isRequired,\n\t},\n\n\t/**\n\t * Merges the properties, passed to the current component with user's configuration\n\t * via `buttonCfg` property.\n\t *\n\t * @instance\n\t * @memberof ButtonProps\n\t * @method mergeButtonCfgProps\n\t * @param {Object} props The properties to be merged with the provided configuration for this\n\t * button. If not passed, the user configuration will be merged with `this.props`\n\t * @return {Object} The merged properties\n\t */\n\tmergeButtonCfgProps(props) {\n\t\tprops = props || this.props;\n\n\t\tconst nativeEditor = this.props.editor.get('nativeEditor');\n\t\tconst buttonCfg = nativeEditor.config.buttonCfg || {};\n\t\tconst result = CKEDITOR.tools.merge(\n\t\t\tprops,\n\t\t\tbuttonCfg[ButtonLinkEdit.key]\n\t\t);\n\n\t\treturn result;\n\t},\n};\n\nexport default ButtonProps;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonStateClasses is a mixin that decorates the domElement of a component\n * with different CSS classes based on the current state of the element.\n *\n * To check for state, the component can expose the following methods:\n * - `Function` **isActive** to check the active state\n * - `Function` **isDisabled** to check the disabled state\n *\n * @class ButtonStateClasses\n */\nconst ButtonStateClasses = {\n\t/**\n\t * Returns the list of state classes associated to the current element's state, according\n\t * to the results of the isActive and isDisabled methods.\n\t *\n\t * @instance\n\t * @memberof ButtonStateClasses\n\t * @method getStateClasses\n\t * @return {String} A string with the state CSS classes.\n\t */\n\tgetStateClasses() {\n\t\tlet stateClasses = '';\n\n\t\t// Check for active state\n\t\tif (Lang.isFunction(this.isActive) && this.isActive()) {\n\t\t\tstateClasses += 'ae-button-pressed';\n\t\t}\n\n\t\t// Check for disabled state\n\t\tif (Lang.isFunction(this.isDisabled) && this.isDisabled()) {\n\t\t\tstateClasses += ' ae-button-disabled';\n\t\t}\n\n\t\treturn stateClasses;\n\t},\n};\n\nexport default ButtonStateClasses;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonStyle is a mixin that provides a style prop and some methods to\n * apply the resulting style and checking if it is present in a given\n * path or selection.\n *\n * @class ButtonStyle\n */\nconst ButtonStyle = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The style the button should handle. Allowed values are:\n\t\t * - Object as described by\n\t\t *   http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t\t * - String pointing to an object inside the editor instance\n\t\t *   configuration. For example, `style = 'coreStyles_bold'` will\n\t\t *   try to retrieve the style object from\n\t\t *   `editor.config.coreStyles_bold`. Nested properties such as\n\t\t *   `style = 'myplugin.myConfig.myStyle'` are also supported\n\t\t *   and will try to retrieve the style object from the editor\n\t\t *   configuration as well.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @property {Object|String} style\n\t\t */\n\t\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\n\t\t/**\n\t\t * The style function the button should handle.\n\t\t * If specified, style function has higher priority than style property.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @property {function} styleFn\n\t\t */\n\t\tstyleFn: PropTypes.func,\n\t},\n\n\t/**\n\t * Lifecycle. Invoked once, both on the client and server,\n\t * immediately before the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonStyle\n\t * @method componentWillMount\n\t */\n\tcomponentWillMount() {\n\t\tlet style = this.props.style;\n\n\t\tif (Lang.isString(style)) {\n\t\t\tconst parts = style.split('.');\n\t\t\tlet currentMember = this.props.editor.get('nativeEditor').config;\n\t\t\tlet property = parts.shift();\n\n\t\t\twhile (\n\t\t\t\tproperty &&\n\t\t\t\tLang.isObject(currentMember) &&\n\t\t\t\tLang.isObject(currentMember[property])\n\t\t\t) {\n\t\t\t\tcurrentMember = currentMember[property];\n\t\t\t\tproperty = parts.shift();\n\t\t\t}\n\n\t\t\tif (Lang.isObject(currentMember)) {\n\t\t\t\tstyle = currentMember;\n\t\t\t}\n\t\t}\n\n\t\tthis._style = new CKEDITOR.style(style);\n\t},\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted\n\t * from the DOM.\n\t *\n\t * @instance\n\t * @memberof ButtonStyle\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tthis._style = null;\n\t},\n\n\t/**\n\t * Returns instance of CKEDITOR.style which represents the current\n\t * button style.\n\t *\n\t * @instance\n\t * @memberof ButtonStyle\n\t * @method getStyle\n\t * @return {CKEDITOR.style} The current style representation.\n\t */\n\tgetStyle() {\n\t\treturn this._style;\n\t},\n\n\t/**\n\t * Checks if style is active in the current selection.\n\t *\n\t * @instance\n\t * @memberof ButtonStyle\n\t * @method isActive\n\t * @return {Boolean} True if style is active, false otherwise.\n\t */\n\tisActive() {\n\t\tconst editor = this.props.editor.get('nativeEditor');\n\n\t\tconst elementPath = editor.elementPath();\n\n\t\treturn this.getStyle().checkActive(elementPath, editor);\n\t},\n};\n\nexport default ButtonStyle;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport Lang from '../../oop/lang';\n\n/**\n * ToolbarButtons is a mixin which provides a list of buttons which have\n * to be displayed on the current toolbar depending on user preferences\n * and given state.\n *\n * @class ToolbarButtons\n */\nconst ToolbarButtons = {\n\t/**\n\t * Analyses the current selection and returns the buttons or button\n\t * groups to be rendered.\n\t *\n\t * @instance\n\t * @method getToolbarButtonGroups\n\t * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n\t * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n\t * @return {Array} An Array which contains the buttons or button groups that should be rendered.\n\t */\n\tgetToolbarButtonGroups(buttons, additionalProps) {\n\t\tconst instance = this;\n\n\t\tif (Lang.isFunction(buttons)) {\n\t\t\tbuttons = buttons.call(this) || [];\n\t\t}\n\n\t\treturn buttons.reduce((list, button) => {\n\t\t\tif (Array.isArray(button)) {\n\t\t\t\tlist.push(instance.getToolbarButtons(button, additionalProps));\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\treturn instance.getToolbarButtons(buttons, additionalProps);\n\t\t\t}\n\t\t}, []);\n\t},\n\n\t/**\n\t * Analyzes the current selection and the buttons exclusive mode value to figure out which\n\t * buttons should be present in a given state.\n\t *\n\t * @instance\n\t * @memberof ToolbarButtons\n\t * @method getToolbarButtons\n\t * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n\t * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n\t * @return {Array} An Array which contains the buttons that should be rendered.\n\t */\n\tgetToolbarButtons(buttons, additionalProps) {\n\t\tconst buttonProps = {};\n\n\t\tconst nativeEditor = this.props.editor.get('nativeEditor');\n\t\tconst buttonCfg = nativeEditor.config.buttonCfg || {};\n\n\t\tif (Lang.isFunction(buttons)) {\n\t\t\tbuttons = buttons.call(this) || [];\n\t\t}\n\n\t\tconst toolbarButtons = this.filterExclusive(\n\t\t\tbuttons\n\t\t\t\t.filter(button => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tbutton &&\n\t\t\t\t\t\t(AlloyEditor.Buttons[button] ||\n\t\t\t\t\t\t\tAlloyEditor.Buttons[button.name])\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.map(button => {\n\t\t\t\t\tif (Lang.isString(button)) {\n\t\t\t\t\t\tbuttonProps[button] = buttonCfg[button];\n\t\t\t\t\t\tbutton = AlloyEditor.Buttons[button];\n\t\t\t\t\t} else if (Lang.isString(button.name)) {\n\t\t\t\t\t\tbuttonProps[\n\t\t\t\t\t\t\tAlloyEditor.Buttons[button.name].key\n\t\t\t\t\t\t] = CKEDITOR.tools.merge(buttonCfg[button], button.cfg);\n\t\t\t\t\t\tbutton = AlloyEditor.Buttons[button.name];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn button;\n\t\t\t\t})\n\t\t).map(function(button, index) {\n\t\t\tlet props = this.mergeExclusiveProps(\n\t\t\t\t{\n\t\t\t\t\teditor: this.props.editor,\n\t\t\t\t\tkey:\n\t\t\t\t\t\tbutton.key !== 'separator'\n\t\t\t\t\t\t\t? button.key\n\t\t\t\t\t\t\t: `${button.key}-${index}`,\n\t\t\t\t\ttabKey: button.key,\n\t\t\t\t\ttabIndex:\n\t\t\t\t\t\tthis.props.trigger &&\n\t\t\t\t\t\tthis.props.trigger.props.tabKey === button.key\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: -1,\n\t\t\t\t\ttrigger: this.props.trigger,\n\t\t\t\t},\n\t\t\t\tbutton.key\n\t\t\t);\n\n\t\t\tprops = this.mergeDropdownProps(props, button.key);\n\n\t\t\tif (additionalProps) {\n\t\t\t\tprops = CKEDITOR.tools.merge(props, additionalProps);\n\t\t\t}\n\n\t\t\tprops = CKEDITOR.tools.merge(props, buttonProps[button.key]);\n\n\t\t\treturn React.createElement(button, props);\n\t\t}, this);\n\n\t\treturn toolbarButtons;\n\t},\n};\n\nexport default ToolbarButtons;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * Provides functionality for displaying Widget Arrow box on top or on bottom of the widget\n * depending on the point of user interaction with the editor.\n *\n * @class WidgetArrowBox\n */\nconst WidgetArrowBox = {\n\t/**\n\t * Returns the list of arrow box classes associated to the current element's state. It relies\n\t * on the getInteractionPoint method to calculate the selection direction.\n\t *\n\t * @instance\n\t * @memberof WidgetArrowBox\n\t * @method getArrowBoxClasses\n\t * @return {String} A string with the arrow box CSS classes.\n\t */\n\tgetArrowBoxClasses() {\n\t\tlet arrowBoxClasses = 'ae-arrow-box';\n\n\t\tif (\n\t\t\tLang.isFunction(this.getInteractionPoint) &&\n\t\t\tthis.getInteractionPoint()\n\t\t) {\n\t\t\tif (\n\t\t\t\tthis.getInteractionPoint().direction ===\n\t\t\t\tCKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t) {\n\t\t\t\tarrowBoxClasses += ' ae-arrow-box-top';\n\t\t\t} else {\n\t\t\t\tarrowBoxClasses += ' ae-arrow-box-bottom';\n\t\t\t}\n\t\t}\n\n\t\treturn arrowBoxClasses;\n\t},\n};\n\nexport default WidgetArrowBox;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ReactDOM from 'react-dom';\n\n/**\n * Provides functionality for managing different dropdowns inside a widget.\n *\n * @class WidgetDropdown\n */\nconst WidgetDropdown = {\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof WidgetDropdown\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps(_nextProps) {\n\t\tthis.setState({\n\t\t\tdropdownTrigger: null,\n\t\t\titemDropdown: null,\n\t\t});\n\t},\n\n\t/**\n\t * Lifecycle. Invoked once before the component is mounted.\n\t *\n\t * @instance\n\t * @memberof WidgetDropdown\n\t * @method getInitialState\n\t */\n\tgetInitialState() {\n\t\treturn {\n\t\t\tdropdownTrigger: null,\n\t\t\titemDropdown: null,\n\t\t};\n\t},\n\n\t/**\n\t * Merges the provided object with two more properties:\n\t * - expanded - boolean flag which indicates if an widget should be\n\t *   rendered exclusively.\n\t * - toggleDropdown - function, which can be used by an widget in\n\t *   order to obtain exclusive state.\n\t *\n\t * @instance\n\t * @memberof WidgetDropdown\n\t * @method mergeDropdownProps\n\t * @param {Object} obj The properties container which should be merged with the properties, related\n\t *    to dropdown state.\n\t * @param {Object} itemKey They key of an React Widget which contains the dropdown.\n\t * @return {Object} The merged object.\n\t */\n\tmergeDropdownProps(obj, itemKey) {\n\t\treturn CKEDITOR.tools.merge(obj, {\n\t\t\texpanded: this.state.itemDropdown === itemKey ? true : false,\n\t\t\ttabIndex: this.state.dropdownTrigger === itemKey ? 0 : -1,\n\t\t\ttoggleDropdown: this.toggleDropdown.bind(this, itemKey),\n\t\t});\n\t},\n\n\t/**\n\t * Sets the active dropdown of the widget or discards the toggled\n\t * item from the state.\n\t *\n\t * @instance\n\t * @memberof WidgetDropdown\n\t * @method toggleDropdown\n\t * @param {Object} itemDropdown The widget which requests to toggle its dropdown.\n\t * @param {Number} toggleDirection User movement direction when toggled via keyboard.\n\t */\n\ttoggleDropdown(itemDropdown, toggleDirection) {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tdropdownTrigger: itemDropdown,\n\t\t\t\titemDropdown:\n\t\t\t\t\titemDropdown !== this.state.itemDropdown\n\t\t\t\t\t\t? itemDropdown\n\t\t\t\t\t\t: null,\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\tif (!this.state.itemDropdown) {\n\t\t\t\t\tif (this.moveFocus) {\n\t\t\t\t\t\tthis.moveFocus(toggleDirection);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tReactDOM.findDOMNode(this).focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t},\n};\n\nexport default WidgetDropdown;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Provides functionality for managing exclusive state of an widget.\n * The exclusive state means that a button may request to be the only rendered\n * widget in its parent container. WidgetExclusive will manage this state by\n * filtering and suppressing the other sibling widgets from displaying.\n *\n * @class WidgetExclusive\n */\nconst WidgetExclusive = {\n\t/**\n\t * Cancels the exclusive state of an widget.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method cancelExclusive\n\t * @param {Object} itemExclusive The widget which exclusive state should be canceled.\n\t */\n\tcancelExclusive(itemExclusive) {\n\t\tif (this.state.itemExclusive === itemExclusive) {\n\t\t\tthis.setState({\n\t\t\t\titemExclusive: null,\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t * Calling this.setState() within this function will not trigger an\n\t * additional render.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method componentWillReceiveProps\n\t * @param {Object} nextProps Object containing the current set of properties.\n\t */\n\tcomponentWillReceiveProps(_nextProps) {\n\t\t// Receiving properties means that the component is being\n\t\t// re-rendered.  Re-rendering is triggered by editorInteraction,\n\t\t// so we have to reset the exclusive state and render the UI\n\t\t// according to the new selection.\n\t\tthis.setState({\n\t\t\titemExclusive: null,\n\t\t});\n\t},\n\n\t/**\n\t * Filters the items and returns only those with exclusive state.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method filterExclusive\n\t * @param {Array} items The widgets to be filtered.\n\t * @return {Array|Object} The item with executive state.\n\t */\n\tfilterExclusive(items) {\n\t\treturn items.filter(item => {\n\t\t\tif (this.state.itemExclusive) {\n\t\t\t\tif (this.state.itemExclusive === item.key) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Merges the provided object with three more properties:\n\t * - cancelExclusive - function, which can be used by a widget in\n\t *   order to cancel executive state.\n\t * - renderExclusive - boolean flag which indicates if an widget\n\t *   should be rendered exclusively.\n\t * - requestExclusive - function, which can be used by a widget in\n\t *   order to obtain exclusive state.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method mergeExclusiveProps\n\t * @param {Object} obj The properties container which should be merged with the properties, related\n\t *    to exclusive state.\n\t * @param {Object} itemKey They key of an React Widget which should be rendered exclusively.\n\t * @return {Object} The merged object.\n\t */\n\tmergeExclusiveProps(obj, itemKey) {\n\t\treturn CKEDITOR.tools.merge(obj, {\n\t\t\tcancelExclusive: this.cancelExclusive.bind(this, itemKey),\n\t\t\trenderExclusive: this.state.itemExclusive === itemKey,\n\t\t\trequestExclusive: this.requestExclusive.bind(this, itemKey),\n\t\t});\n\t},\n\n\t/**\n\t * Requests and sets exclusive state of an widget.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method requestExclusive\n\t * @param {Object} itemExclusive The widget which requests exclusive state.\n\t */\n\trequestExclusive(itemExclusive) {\n\t\tthis.setState({\n\t\t\titemExclusive,\n\t\t});\n\t},\n};\n\nexport default WidgetExclusive;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\nimport Lang from '../../oop/lang';\n\nconst DIRECTION_NONE = 0;\nconst DIRECTION_NEXT = 1;\nconst DIRECTION_PREV = -1;\n\nconst ACTION_NONE = 0;\nconst ACTION_MOVE_FOCUS = 1;\nconst ACTION_DISMISS_FOCUS = 2;\n\n/**\n * WidgetFocusManager is a mixin that provides keyboard navigation inside a widget. To do this,\n * it exposes the following props and methods:\n *\n * @class WidgetFocusManager\n */\nconst WidgetFocusManager = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * Callback method to be invoked when the focus manager is to be dismissed. This happens\n\t\t * in the following scenarios if a dismiss callback has been specified:\n\t\t * - A dismiss key has been pressed\n\t\t * - In a non-circular focus manager, when:\n\t\t *     - The active descendant is the first one and a prev key has been pressed.\n\t\t *     - The active descendant is the last one and a next key has been pressed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {Function} onDismiss\n\t\t */\n\t\tonDismiss: PropTypes.func,\n\n\t\t/**\n\t\t * Indicates if focus should be set to the first/last descendant when the limits are reached.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {boolean} circular\n\t\t */\n\t\tcircular: PropTypes.bool.isRequired,\n\n\t\t/**\n\t\t * Indicate if should focus the first child of a container\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {Boolean} focusFirstChild\n\t\t */\n\t\tfocusFirstChild: PropTypes.bool,\n\n\t\t/**\n\t\t * String representing the CSS selector used to define the elements that should be handled.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {String} descendants\n\t\t */\n\t\tdescendants: PropTypes.string.isRequired,\n\n\t\t/**\n\t\t * Object representing the keys used to navigate between descendants. The format for the prop is:\n\t\t * `{dismiss: value, dismissNext: value, dismissPrev: value, next: value, prev: value}` where\n\t\t * value can be both a number or an array of numbers with the allowed keyCodes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {Object} keys\n\t\t */\n\t\tkeys: PropTypes.object.isRequired,\n\t},\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._refresh();\n\t},\n\n\t/**\n\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t * Refreshes the descendants list.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method componentDidUpdate\n\t */\n\tcomponentDidUpdate() {\n\t\tthis._refresh();\n\t},\n\n\t/**\n\t * Focuses the current active descendant.\n\t *\n\t * Several Widgets can be nested in a component hierarchy by attaching this focus method to\n\t * the widget DOM node, transferring the DOM focus control to the inner FocusManager.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method focus\n\t */\n\tfocus(event) {\n\t\tif (!event || this._isValidTarget(event.target)) {\n\t\t\tif (this._descendants && this._descendants.length) {\n\t\t\t\tconst activeDescendantEl = this._descendants[\n\t\t\t\t\tthis._activeDescendant\n\t\t\t\t];\n\t\t\t\t// When user clicks with the mouse, the activeElement is already set and there\n\t\t\t\t// is no need to focus it. Focusing of the active descendant (usually some button) is required\n\t\t\t\t// in case of keyboard navigation, because the focused element might be not the first button,\n\t\t\t\t// but the div element, which contains the button.\n\t\t\t\tif (\n\t\t\t\t\tdocument.activeElement !== activeDescendantEl &&\n\t\t\t\t\t!this.props.focusFirstChild\n\t\t\t\t) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._descendants.indexOf(document.activeElement) === -1\n\t\t\t\t\t) {\n\t\t\t\t\t\tactiveDescendantEl.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (event) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Handles the key events on a DOM node to execute the appropriate navigation when needed.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @param {Object} event The Keyboard event that was detected on the widget DOM node.\n\t * @method handleKey\n\t */\n\thandleKey(event) {\n\t\tif (this._isValidTarget(event.target) && this._descendants) {\n\t\t\tconst action = this._getFocusAction(event);\n\n\t\t\tif (action.type) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif (action.type === ACTION_MOVE_FOCUS) {\n\t\t\t\t\tthis._moveFocus(action.direction);\n\t\t\t\t}\n\n\t\t\t\tif (action.type === ACTION_DISMISS_FOCUS) {\n\t\t\t\t\tthis.props.onDismiss(action.direction);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Moves the focus among descendants in the especified direction.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method moveFocus\n\t * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n\t */\n\tmoveFocus(direction) {\n\t\tdirection = Lang.isNumber(direction) ? direction : 0;\n\n\t\tthis._moveFocus(direction);\n\t},\n\n\t/**\n\t * Returns the action, if any, that a keyboard event in the current focus manager state\n\t * should produce.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _getFocusAction\n\t * @param {object} event The Keyboard event.\n\t * @protected\n\t * @return {Object} An action object with type and direction properties.\n\t */\n\t_getFocusAction(event) {\n\t\tconst action = {\n\t\t\ttype: ACTION_NONE,\n\t\t};\n\n\t\tif (this.props.keys) {\n\t\t\tconst direction = this._getFocusMoveDirection(event);\n\n\t\t\tif (direction) {\n\t\t\t\taction.direction = direction;\n\t\t\t\taction.type = ACTION_MOVE_FOCUS;\n\t\t\t}\n\n\t\t\tconst dismissAction = this._getFocusDismissAction(event, direction);\n\n\t\t\tif (dismissAction.dismiss) {\n\t\t\t\taction.direction = dismissAction.direction;\n\t\t\t\taction.type = ACTION_DISMISS_FOCUS;\n\t\t\t}\n\t\t}\n\n\t\treturn action;\n\t},\n\n\t/**\n\t * Returns the dismiss action, if any, the focus manager should execute to yield the focus. This\n\t * will happen in any of these scenarios if a dismiss callback has been specified:\n\t * - A dismiss key has been pressed\n\t * - In a non-circular focus manager, when:\n\t *     - The active descendant is the first one and a prev key has been pressed.\n\t *     - The active descendant is the last one and a next key has been pressed.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _getFocusDismissAction\n\t * @param {Number} focusMoveDirection The focus movement direction (if any).\n\t * @param {Object} event The Keyboard event.\n\t * @protected\n\t * @return {Object} A dismiss action with dismiss and direction properties.\n\t */\n\t_getFocusDismissAction(event, focusMoveDirection) {\n\t\tconst dismissAction = {\n\t\t\tdirection: focusMoveDirection,\n\t\t\tdismiss: false,\n\t\t};\n\n\t\tif (this.props.onDismiss) {\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.dismiss)) {\n\t\t\t\tdismissAction.dismiss = true;\n\t\t\t}\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.dismissNext)) {\n\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\tdismissAction.direction = DIRECTION_NEXT;\n\t\t\t}\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.dismissPrev)) {\n\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\tdismissAction.direction = DIRECTION_PREV;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!dismissAction.dismiss &&\n\t\t\t\t!this.props.circular &&\n\t\t\t\tfocusMoveDirection\n\t\t\t) {\n\t\t\t\tdismissAction.dismiss =\n\t\t\t\t\t(focusMoveDirection === DIRECTION_PREV &&\n\t\t\t\t\t\tthis._activeDescendant === 0) ||\n\t\t\t\t\t(focusMoveDirection === DIRECTION_NEXT &&\n\t\t\t\t\t\tthis._activeDescendant ===\n\t\t\t\t\t\t\tthis._descendants.length - 1);\n\t\t\t}\n\t\t}\n\n\t\treturn dismissAction;\n\t},\n\n\t/**\n\t * Returns the direction, if any, in which the focus should be moved. In presence of the\n\t * shift key modifier, the direction of the movement is inverted.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _getFocusMoveDirection\n\t * @param {Object} event The Keyboard event.\n\t * @protected\n\t * @return {Number} The computed direction of the expected focus movement.\n\t */\n\t_getFocusMoveDirection(event) {\n\t\tlet direction = DIRECTION_NONE;\n\n\t\tif (this._isValidKey(event.keyCode, this.props.keys.next)) {\n\t\t\tdirection = DIRECTION_NEXT;\n\t\t}\n\t\tif (this._isValidKey(event.keyCode, this.props.keys.prev)) {\n\t\t\tdirection = DIRECTION_PREV;\n\t\t}\n\n\t\tif (event.shifKey) {\n\t\t\tdirection *= -1;\n\t\t}\n\n\t\treturn direction;\n\t},\n\n\t/**\n\t * Indicates if a given keyCode is valid for the given set of keys.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _isValidKey\n\t * @param {Array|Number} keys A key set. Can be a number an array of numbers representing the allowed keyCodes.\n\t * @param {Number} keyCode An event keyCode.\n\t * @protected\n\t * @return {Boolean} A boolean value indicating if the key is valid.\n\t */\n\t_isValidKey(keyCode, keys) {\n\t\treturn Lang.isArray(keys)\n\t\t\t? keys.indexOf(keyCode) !== -1\n\t\t\t: keyCode === keys;\n\t},\n\n\t/**\n\t * Indicates if a given element is valid for focus management. User input elements such as\n\t * input, select or textarea are excluded.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _isValidKey\n\t * @param {DOMNode} element A DOM element.\n\t * @protected\n\t * @return {Boolean} A boolean value indicating if the element is valid.\n\t */\n\t_isValidTarget(element) {\n\t\tconst tagName = element.tagName.toLowerCase();\n\n\t\treturn (\n\t\t\ttagName !== 'input' &&\n\t\t\ttagName !== 'select' &&\n\t\t\ttagName !== 'textarea'\n\t\t);\n\t},\n\n\t/**\n\t * Moves the focus among descendants in the especified direction.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _moveFocus\n\t * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n\t * @protected\n\t */\n\t_moveFocus(direction) {\n\t\tconst numDescendants = this._descendants.length;\n\n\t\tlet descendant = this._descendants[this._activeDescendant];\n\n\t\tdescendant.setAttribute('tabIndex', -1);\n\n\t\tthis._activeDescendant += direction;\n\n\t\tif (this.props.circular) {\n\t\t\t// Calculate proper modulo result since remainder operator doesn't behave in the\n\t\t\t// same way for negative numbers\n\t\t\tthis._activeDescendant =\n\t\t\t\t((this._activeDescendant % numDescendants) + numDescendants) %\n\t\t\t\tnumDescendants;\n\t\t} else {\n\t\t\tthis._activeDescendant = Math.max(\n\t\t\t\tMath.min(this._activeDescendant, numDescendants - 1),\n\t\t\t\t0\n\t\t\t);\n\t\t}\n\n\t\tdescendant = this._descendants[this._activeDescendant];\n\n\t\tdescendant.setAttribute('tabIndex', 0);\n\t\tdescendant.focus();\n\t},\n\n\t/**\n\t * Refreshes the descendants list by executing the CSS selector again and resets the descendants tabIndex.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _refresh\n\t * @protected\n\t */\n\t_refresh() {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tif (domNode) {\n\t\t\tconst descendants = domNode.querySelectorAll(\n\t\t\t\tthis.props.descendants\n\t\t\t);\n\n\t\t\tlet priorityDescendants = [];\n\n\t\t\tthis._descendants = [];\n\n\t\t\tArray.prototype.slice.call(descendants).forEach(item => {\n\t\t\t\tconst dataTabIndex = item.getAttribute('data-tabindex');\n\n\t\t\t\tif (dataTabIndex) {\n\t\t\t\t\tpriorityDescendants.push(item);\n\t\t\t\t} else {\n\t\t\t\t\tthis._descendants.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpriorityDescendants = priorityDescendants.sort((a, b) => {\n\t\t\t\treturn (\n\t\t\t\t\tLang.toInt(a.getAttribute('data-tabindex')) >\n\t\t\t\t\tLang.toInt(b.getAttribute('data-tabindex'))\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tthis._descendants = priorityDescendants.concat(this._descendants);\n\n\t\t\tthis._activeDescendant = 0;\n\n\t\t\tthis._descendants.some((item, index) => {\n\t\t\t\tif (item.getAttribute('tabindex') === '0') {\n\t\t\t\t\tthis._activeDescendant = index;\n\t\t\t\t\tthis.focus();\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n};\n\nexport default WidgetFocusManager;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\nimport WidgetInteractionPoint from './widget-interaction-point';\n\n/**\n * Calculates the position where an Widget should be displayed based on\n * the point where user interacted with the editor.\n *\n * @class WidgetPosition\n * @uses WidgetInteractionPoint\n */\nconst WidgetPosition = {\n\tmixins: [WidgetInteractionPoint],\n\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * Should the widget to be restricted to the viewport, or not.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetPosition\n\t\t * @property {Boolean} constrainToViewport\n\t\t * @default true\n\t\t */\n\t\tconstrainToViewport: PropTypes.bool,\n\n\t\t/**\n\t\t * The gutter (vertical and horizontal) between the interaction\n\t\t * point and where the widget should be rendered.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetPosition\n\t\t * @property {Object} gutter\n\t\t * @default {\n\t\t *     left: 0,\n\t\t *     top: 10\n\t\t * }\n\t\t */\n\t\tgutter: PropTypes.object,\n\t},\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in\n\t * the widget.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method getDefaultProps\n\t */\n\tgetDefaultProps() {\n\t\treturn {\n\t\t\tgutter: {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 10,\n\t\t\t},\n\t\t\tconstrainToViewport: true,\n\t\t};\n\t},\n\n\t/**\n\t * Cancels an scheduled animation frame.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method cancelAnimation\n\t */\n\tcancelAnimation() {\n\t\tif (window.cancelAnimationFrame) {\n\t\t\twindow.cancelAnimationFrame(this._animationFrameId);\n\t\t}\n\t},\n\n\t/**\n\t * Returns an object which contains the position of the element in\n\t * page coordinates, restricted to fit to given viewport.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method getConstrainedPosition\n\t * @param {Object} attrs The following properties, provided as numbers:\n\t * - height\n\t * - left\n\t * - top\n\t * - width\n\t * @param {Object} viewPaneSize Optional. If not provided, the current viewport will be used. Should contain at least these properties:\n\t * - width\n\t * @return {Object} An object with `x` and `y` properties, which represent the constrained position of the\n\t * element.\n\t */\n\tgetConstrainedPosition(attrs, viewPaneSize) {\n\t\tviewPaneSize =\n\t\t\tviewPaneSize || new CKEDITOR.dom.window(window).getViewPaneSize();\n\n\t\tlet x = attrs.left;\n\t\tlet y = attrs.top;\n\n\t\tif (attrs.left + attrs.width > viewPaneSize.width) {\n\t\t\tx -= attrs.left + attrs.width - viewPaneSize.width;\n\t\t}\n\n\t\tif (y < 0) {\n\t\t\ty = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tx,\n\t\t\ty,\n\t\t};\n\t},\n\n\t/**\n\t * Returns the position of the Widget taking in consideration the\n\t * {{#crossLink \"WidgetPosition/gutter:attribute\"}}{{/crossLink}} attribute.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @protected\n\t * @method  getWidgetXYPoint\n\t * @param {Number} left The left offset in page coordinates where Toolbar should be shown.\n\t * @param {Number} top The top offset in page coordinates where Toolbar should be shown.\n\t * @param {Number} direction The direction of the selection. May be one of the following:\n\t * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t * @return {Array} An Array with left and top offsets in page coordinates.\n\t */\n\tgetWidgetXYPoint(left, top, direction) {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tconst gutter = this.props.gutter;\n\t\tconst offsetWidth = domNode.offsetWidth;\n\t\tconst halfWidth = offsetWidth / 2;\n\n\t\tif (\n\t\t\tdirection === CKEDITOR.SELECTION_TOP_TO_BOTTOM ||\n\t\t\tdirection === CKEDITOR.SELECTION_BOTTOM_TO_TOP\n\t\t) {\n\t\t\tleft = left - gutter.left - halfWidth;\n\n\t\t\ttop =\n\t\t\t\tdirection === CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t\t\t? top + gutter.top\n\t\t\t\t\t: top - domNode.offsetHeight - gutter.top;\n\t\t} else if (\n\t\t\tdirection === CKEDITOR.SELECTION_LEFT_TO_RIGHT ||\n\t\t\tdirection === CKEDITOR.SELECTION_RIGHT_TO_LEFT\n\t\t) {\n\t\t\tleft =\n\t\t\t\tdirection === CKEDITOR.SELECTION_LEFT_TO_RIGHT\n\t\t\t\t\t? left + gutter.left + domNode.offsetHeight / 2\n\t\t\t\t\t: left - (3 * domNode.offsetHeight) / 2 - gutter.left;\n\n\t\t\ttop = top - gutter.top - domNode.offsetHeight / 2;\n\t\t}\n\n\t\tif (left < 0) {\n\t\t\tleft = 0;\n\t\t}\n\n\t\tif (left > document.body.offsetWidth - halfWidth) {\n\t\t\tleft = document.body.offsetWidth - halfWidth;\n\t\t}\n\n\t\tif (top < 0) {\n\t\t\ttop = 0;\n\t\t}\n\n\t\treturn [left, top];\n\t},\n\n\t/**\n\t * Returns true if the widget is visible, false otherwise\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method isVisible\n\t * @return {Boolean} True if the widget is visible, false otherwise\n\t */\n\tisVisible() {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tif (domNode) {\n\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\treturn domElement.hasClass('alloy-editor-visible');\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Moves a widget from a starting point to a destination point.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method moveToPoint\n\t * @param  {Object} startPoint The starting point for the movement.\n\t * @param  {Object} endPoint The destination point for the movement.\n\t */\n\tmoveToPoint(startPoint, endPoint) {\n\t\tconst domElement = new CKEDITOR.dom.element(ReactDOM.findDOMNode(this));\n\n\t\tdomElement.setStyles({\n\t\t\tleft: startPoint[0] + 'px',\n\t\t\ttop: startPoint[1] + 'px',\n\t\t\topacity: 0,\n\t\t\tpointerEvents: 'none',\n\t\t});\n\n\t\tdomElement.removeClass('alloy-editor-invisible');\n\n\t\tthis._animate(() => {\n\t\t\tdomElement.addClass('ae-toolbar-transition');\n\t\t\tdomElement.addClass('alloy-editor-visible');\n\t\t\tdomElement.setStyles({\n\t\t\t\tleft: endPoint[0] + 'px',\n\t\t\t\ttop: endPoint[1] + 'px',\n\t\t\t\topacity: 1,\n\t\t\t});\n\n\t\t\t// 150ms to match transition-duration for .ae-toolbar-transition:\n\t\t\tsetTimeout(() => {\n\t\t\t\tdomElement.setStyles({\n\t\t\t\t\tpointerEvents: '',\n\t\t\t\t});\n\t\t\t}, 150);\n\t\t});\n\t},\n\n\t/**\n\t * Shows the widget with the default animation transition.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method show\n\t */\n\tshow() {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\t\tconst uiNode = this.props.editor.get('uiNode');\n\n\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\tif (!this.isVisible() && domNode) {\n\t\t\tconst interactionPoint = this.getInteractionPoint();\n\n\t\t\tif (interactionPoint) {\n\t\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\t\tlet finalX, finalY, initialX, initialY;\n\n\t\t\t\tfinalX = initialX = parseFloat(domElement.getStyle('left'));\n\t\t\t\tfinalY = initialY = parseFloat(domElement.getStyle('top'));\n\n\t\t\t\tif (this.props.constrainToViewport) {\n\t\t\t\t\tconst res = this.getConstrainedPosition({\n\t\t\t\t\t\theight: parseFloat(domNode.offsetHeight),\n\t\t\t\t\t\tleft: finalX,\n\t\t\t\t\t\ttop: finalY,\n\t\t\t\t\t\twidth: parseFloat(domNode.offsetWidth),\n\t\t\t\t\t});\n\n\t\t\t\t\tfinalX = res.x;\n\t\t\t\t\tfinalY = res.y;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tinteractionPoint.direction ===\n\t\t\t\t\tCKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t\t) {\n\t\t\t\t\tinitialY =\n\t\t\t\t\t\tthis.props.selectionData.region.bottom + scrollTop;\n\t\t\t\t} else {\n\t\t\t\t\tinitialY = this.props.selectionData.region.top + scrollTop;\n\t\t\t\t}\n\n\t\t\t\tthis.moveToPoint([initialX, initialY], [finalX, finalY]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Updates the widget position based on the current interaction point.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method updatePosition\n\t */\n\tupdatePosition() {\n\t\tconst interactionPoint = this.getInteractionPoint();\n\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tif (interactionPoint && domNode) {\n\t\t\tconst uiNode = this.props.editor.get('uiNode') || document.body;\n\t\t\tconst uiNodeStyle = getComputedStyle(uiNode);\n\t\t\tconst uiNodeMarginLeft = parseInt(\n\t\t\t\tuiNodeStyle.getPropertyValue('margin-left'),\n\t\t\t\t10\n\t\t\t);\n\t\t\tconst uiNodeMarginRight = parseInt(\n\t\t\t\tuiNodeStyle.getPropertyValue('margin-right'),\n\t\t\t\t10\n\t\t\t);\n\t\t\tconst totalWidth =\n\t\t\t\tuiNodeMarginLeft + uiNode.clientWidth + uiNodeMarginRight;\n\n\t\t\tconst scrollTop = uiNode.tagName !== 'BODY' ? uiNode.scrollTop : 0;\n\n\t\t\tconst xy = this.getWidgetXYPoint(\n\t\t\t\tinteractionPoint.x,\n\t\t\t\tinteractionPoint.y,\n\t\t\t\tinteractionPoint.direction\n\t\t\t);\n\t\t\txy[1] += scrollTop;\n\n\t\t\tif (xy[0] < 0) {\n\t\t\t\txy[0] = 0;\n\t\t\t}\n\t\t\tif (xy[0] > totalWidth - domNode.offsetWidth) {\n\t\t\t\txy[0] = totalWidth - domNode.offsetWidth;\n\t\t\t}\n\n\t\t\tnew CKEDITOR.dom.element(domNode).setStyles({\n\t\t\t\tleft: xy[0] + 'px',\n\t\t\t\ttop: xy[1] + 'px',\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Requests an animation frame, if possible, to simulate an animation.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method _animate\n\t * @param {Function} callback The function to be executed on the scheduled frame.\n\t * @protected\n\t */\n\t_animate(callback) {\n\t\tif (window.requestAnimationFrame) {\n\t\t\tthis._animationFrameId = window.requestAnimationFrame(callback);\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t},\n};\n\nexport default WidgetPosition;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ToolbarAdd from './toolbar-add.jsx';\nimport ToolbarStyles from './toolbar-styles.jsx';\n\nexport default {\n\t[ToolbarAdd.key]: ToolbarAdd,\n\t[ToolbarStyles.key]: ToolbarStyles,\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ToolbarButtons from '../base/toolbar-buttons';\nimport WidgetDropdown from '../base/widget-dropdown';\nimport WidgetExclusive from '../base/widget-exclusive';\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonIcon from '../buttons/button-icon.jsx';\n\nconst POSITION_LEFT = 1;\nconst POSITION_RIGHT = 2;\n\n/**\n * The ToolbarAdd class provides functionality for adding content to the editor.\n *\n * @class ToolbarAdd\n * @uses ToolbarButtons\n * @uses WidgetDropdown\n * @uses WidgetExclusive\n * @uses WidgetFocusManager\n */\nclass ToolbarAdd extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client (not on the server),\n\t * immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._updatePosition();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method componentDidUpdate\n\t * @param {Object} prevProps The previous state of the component's properties.\n\t * @param {Object} prevState Component's previous state.\n\t */\n\tcomponentDidUpdate(_prevProps, _prevState) {\n\t\tthis._updatePosition();\n\n\t\t// In case of exclusive rendering, focus the first descendant (button)\n\t\t// so the user will be able to start interacting with the buttons immediately.\n\t\tif (this.props.renderExclusive) {\n\t\t\tthis.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Renders the buttons for adding content or hides the toolbar\n\t * if user interacted with a non-editable element.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method render\n\t * @return {Object|null} The content which should be rendered.\n\t */\n\trender() {\n\t\t// Some operations such as `requestExclusive` may force editor to blur which will\n\t\t// invalidate the `props.editorEvent` stored value, without causing a `props` change.\n\t\t// For example, if the editor is empty, `ae_placeholder` plugin will remove\n\t\t// the target from the DOM and will prevent `add` toolbar from rendering.\n\t\t//\n\t\t// It should be safe to assume that if you have been able to render the toolbar\n\t\t// and request the exclusive mode, then rendering might be kept until the exclusive mode is left.\n\t\tif (\n\t\t\t!this.state.itemExclusive &&\n\t\t\tthis.props.editorEvent &&\n\t\t\tthis.props.editorEvent.data.nativeEvent.target &&\n\t\t\t!this.props.editorEvent.data.nativeEvent.target.isContentEditable\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst buttons = this._getButtons();\n\t\tconst className = this._getToolbarClassName();\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\taria-label={AlloyEditor.Strings.add}\n\t\t\t\tclassName={className}\n\t\t\t\tdata-tabindex={this.props.config.tabIndex || 0}\n\t\t\t\tonFocus={this.focus.bind(this)}\n\t\t\t\tonKeyDown={this.handleKey.bind(this)}\n\t\t\t\trole=\"toolbar\"\n\t\t\t\ttabIndex=\"-1\">\n\t\t\t\t<div className=\"ae-container\">{buttons}</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of buttons that will eventually render to HTML.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method _getButtons\n\t * @protected\n\t * @return {Object} The buttons which have to be rendered.\n\t */\n\t_getButtons() {\n\t\tlet buttons;\n\n\t\tif (this.props.renderExclusive) {\n\t\t\tbuttons = this.getToolbarButtons(this.props.config.buttons);\n\t\t} else {\n\t\t\tif (this.props.selectionData && this.props.selectionData.region) {\n\t\t\t\tbuttons = (\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-label={AlloyEditor.Strings.add}\n\t\t\t\t\t\tclassName=\"ae-button ae-button-add\"\n\t\t\t\t\t\tonClick={this.props.requestExclusive.bind(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tToolbarAdd.key\n\t\t\t\t\t\t)}\n\t\t\t\t\t\ttitle={AlloyEditor.Strings.add}>\n\t\t\t\t\t\t<ButtonIcon symbol=\"plus\" />\n\t\t\t\t\t</button>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn buttons;\n\t}\n\n\t/**\n\t * Returns the class name of the toolbar in case of both exclusive and normal mode.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method _getToolbarClassName\n\t * @protected\n\t * @return {String} The class name which have to be applied to the DOM element.\n\t */\n\t_getToolbarClassName() {\n\t\tlet cssClass = 'ae-toolbar-add';\n\n\t\tif (this.props.renderExclusive) {\n\t\t\tcssClass = 'ae-toolbar ' + this.getArrowBoxClasses();\n\t\t}\n\n\t\treturn cssClass;\n\t}\n\n\t/**\n\t * Calculates and sets the position of the toolbar in exclusive or normal mode.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method _updatePosition\n\t * @protected\n\t */\n\t_updatePosition() {\n\t\tlet region;\n\n\t\t// If component is not mounted, there is nothing to do\n\t\tif (!ReactDOM.findDOMNode(this)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.props.renderExclusive) {\n\t\t\tthis.updatePosition();\n\t\t\tthis.show();\n\t\t} else {\n\t\t\tif (this.props.selectionData) {\n\t\t\t\tregion = this.props.selectionData.region;\n\t\t\t}\n\n\t\t\tif (region) {\n\t\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\t\tconst startRect = region.startRect || region;\n\n\t\t\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\t\t\tconst clientRect = nativeEditor.editable().getClientRect();\n\n\t\t\t\tlet offsetLeft;\n\n\t\t\t\tconst position =\n\t\t\t\t\tthis.props.config.position || this.props.position;\n\n\t\t\t\tif (position === POSITION_LEFT) {\n\t\t\t\t\toffsetLeft =\n\t\t\t\t\t\tclientRect.left -\n\t\t\t\t\t\tdomNode.offsetWidth -\n\t\t\t\t\t\tthis.props.gutterExclusive.left +\n\t\t\t\t\t\t'px';\n\t\t\t\t} else {\n\t\t\t\t\toffsetLeft =\n\t\t\t\t\t\tclientRect.right +\n\t\t\t\t\t\tthis.props.gutterExclusive.left +\n\t\t\t\t\t\t'px';\n\t\t\t\t}\n\n\t\t\t\tdomNode.style.left = offsetLeft;\n\n\t\t\t\tdomNode.style.top =\n\t\t\t\t\tMath.floor((region.bottom + region.top) / 2) + 'px';\n\n\t\t\t\tconst uiNode = this.context.editor.get('uiNode');\n\n\t\t\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\t\t\tif (nativeEditor.element.getStyle('overflow') !== 'auto') {\n\t\t\t\t\tdomNode.style.top =\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tregion.top -\n\t\t\t\t\t\t\t\tdomNode.offsetHeight / 2 +\n\t\t\t\t\t\t\t\tstartRect.height / 2 +\n\t\t\t\t\t\t\t\tscrollTop\n\t\t\t\t\t\t) + 'px';\n\t\t\t\t} else {\n\t\t\t\t\tdomNode.style.top =\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tnativeEditor.element.$.offsetTop +\n\t\t\t\t\t\t\t\tstartRect.height / 2 -\n\t\t\t\t\t\t\t\tdomNode.offsetHeight / 2\n\t\t\t\t\t\t) + 'px';\n\t\t\t\t}\n\n\t\t\t\tdomNode.style.opacity = 1;\n\n\t\t\t\tdomElement.removeClass('ae-arrow-box');\n\n\t\t\t\tthis.cancelAnimation();\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default add\n * @memberof ToolbarAdd\n * @property {String} key\n * @static\n */\nToolbarAdd.key = 'add';\n\n/**\n * Defines the constant for positioning the Toolbar on left of the editable area.\n *\n * @default 1\n * @memberof ToolbarAdd\n * @property {String} left\n * @static\n */\nToolbarAdd.left = POSITION_LEFT;\n\n/**\n * Defines the constant for positioning the Toolbar on right of the editable area.\n *\n * @default 2\n * @memberof ToolbarAdd\n * @property {String} right\n * @static\n */\nToolbarAdd.right = POSITION_RIGHT;\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ToolbarAdd\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nToolbarAdd.defaultProps = {\n\tcircular: true,\n\tdescendants: '.ae-button',\n\tgutterExclusive: {\n\t\tleft: 10,\n\t\ttop: 0,\n\t},\n\tkeys: {\n\t\tdismiss: [27],\n\t\tnext: [39, 40],\n\t\tprev: [37, 38],\n\t},\n\tposition: POSITION_LEFT,\n};\n\nexport default WidgetDropdown(\n\tWidgetExclusive(WidgetFocusManager(ToolbarButtons(ToolbarAdd)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\nimport ToolbarButtons from '../base/toolbar-buttons';\nimport WidgetDropdown from '../base/widget-dropdown';\nimport WidgetExclusive from '../base/widget-exclusive';\nimport WidgetFocusManager from '../base/widget-focus-manager';\n\n/**\n * The ToolbarStyles class hosts the buttons for styling a text selection.\n *\n * @class ToolbarStyles\n * @uses ToolbarButtons\n * @uses WidgetDropdown\n * @uses WidgetExclusive\n * @uses WidgetFocusManager\n */\nclass ToolbarStyles extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client (not on the server),\n\t * immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._updatePosition();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method componentDidUpdate\n\t * @param {Object} prevProps The previous state of the component's properties.\n\t * @param {Object} prevState Component's previous state.\n\t */\n\tcomponentDidUpdate(_prevProps, _prevState) {\n\t\tthis._updatePosition();\n\t}\n\n\t/**\n\t * Lifecycle. Renders the buttons for adding content or hides the toolbar\n\t * if user interacted with a non-editable element.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method render\n\t * @return {Object|null} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst currentSelection = this._getCurrentSelection();\n\n\t\tif (currentSelection) {\n\t\t\tconst getArrowBoxClassesFn = this._getSelectionFunction(\n\t\t\t\tcurrentSelection.getArrowBoxClasses\n\t\t\t);\n\t\t\tlet arrowBoxClasses;\n\n\t\t\tif (getArrowBoxClassesFn) {\n\t\t\t\tarrowBoxClasses = getArrowBoxClassesFn();\n\t\t\t} else {\n\t\t\t\tarrowBoxClasses = this.getArrowBoxClasses();\n\t\t\t}\n\n\t\t\tconst cssClasses = 'ae-toolbar-styles ' + arrowBoxClasses;\n\n\t\t\tlet buttons = currentSelection.buttons;\n\n\t\t\tif (typeof buttons === 'object' && !Array.isArray(buttons)) {\n\t\t\t\tbuttons =\n\t\t\t\t\tbuttons[this.context.editor.get('mode')] ||\n\t\t\t\t\tbuttons['simple'];\n\t\t\t}\n\n\t\t\tconst buttonsGroup = this.getToolbarButtonGroups(buttons, {\n\t\t\t\tmanualSelection: this.props.editorEvent\n\t\t\t\t\t? this.props.editorEvent.data.manualSelection\n\t\t\t\t\t: null,\n\t\t\t\tselectionType: currentSelection.name,\n\t\t\t});\n\n\t\t\tconst hasGroups =\n\t\t\t\tbuttonsGroup.filter(button => {\n\t\t\t\t\treturn Array.isArray(button);\n\t\t\t\t}).length > 0;\n\n\t\t\tlet className = 'ae-container';\n\n\t\t\tif (hasGroups) {\n\t\t\t\tclassName += ' ae-container-column';\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\taria-label={AlloyEditor.Strings.styles}\n\t\t\t\t\tclassName={cssClasses}\n\t\t\t\t\tdata-tabindex={this.props.config.tabIndex || 0}\n\t\t\t\t\tonFocus={this.focus.bind(this)}\n\t\t\t\t\tonKeyDown={this.handleKey.bind(this)}\n\t\t\t\t\trole=\"toolbar\"\n\t\t\t\t\ttabIndex=\"-1\">\n\t\t\t\t\t<div className={className}>\n\t\t\t\t\t\t{buttonsGroup.map((value, index) => {\n\t\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"ae-row\" key={index}>\n\t\t\t\t\t\t\t\t\t\t{value.map(button => {\n\t\t\t\t\t\t\t\t\t\t\treturn button;\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Retrieve a function from String. It converts a fully qualified string into the mapped function.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method _getSelectionFunction\n\t * @param {Function|String} selectionFn A function, or a fully qualified string pointing to the desired one (e.g. 'AlloyEditor.SelectionTest.image').\n\t * @protected\n\t * @return {Function} The mapped function.\n\t */\n\t_getSelectionFunction(selectionFn) {\n\t\tlet selectionFunction;\n\n\t\tif (Lang.isFunction(selectionFn)) {\n\t\t\tselectionFunction = selectionFn;\n\t\t} else if (Lang.isString(selectionFn)) {\n\t\t\tconst parts = selectionFn.split('.');\n\t\t\tlet currentMember = window;\n\t\t\tlet property = parts.shift();\n\n\t\t\twhile (\n\t\t\t\tproperty &&\n\t\t\t\tLang.isObject(currentMember) &&\n\t\t\t\tLang.isObject(currentMember[property])\n\t\t\t) {\n\t\t\t\tcurrentMember = currentMember[property];\n\t\t\t\tproperty = parts.shift();\n\t\t\t}\n\n\t\t\tif (Lang.isFunction(currentMember)) {\n\t\t\t\tselectionFunction = currentMember;\n\t\t\t}\n\t\t}\n\n\t\treturn selectionFunction;\n\t}\n\n\t/**\n\t * Analyzes the current editor selection and returns the selection configuration that matches.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method _getCurrentSelection\n\t * @protected\n\t * @return {Object} The matched selection configuration.\n\t */\n\t_getCurrentSelection() {\n\t\tconst eventPayload = this.props.editorEvent\n\t\t\t? this.props.editorEvent.data\n\t\t\t: null;\n\t\tlet selection;\n\n\t\tif (eventPayload) {\n\t\t\tthis.props.config.selections.some(function(item) {\n\t\t\t\tconst testFn = this._getSelectionFunction(item.test);\n\t\t\t\tlet result;\n\n\t\t\t\tif (testFn) {\n\t\t\t\t\tresult =\n\t\t\t\t\t\teventPayload.manualSelection === item.name ||\n\t\t\t\t\t\ttestFn({\n\t\t\t\t\t\t\tdata: eventPayload,\n\t\t\t\t\t\t\teditor: this.context.editor,\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (result) {\n\t\t\t\t\tselection = item;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, this);\n\t\t}\n\n\t\treturn selection;\n\t}\n\n\t/**\n\t * Calculates and sets the position of the toolbar.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method _updatePosition\n\t * @protected\n\t */\n\t_updatePosition() {\n\t\t// If component is not mounted, there is nothing to do\n\t\tif (!ReactDOM.findDOMNode(this)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentSelection = this._getCurrentSelection();\n\t\tlet result;\n\n\t\t// If current selection has a function called `setPosition`, call it\n\t\t// and check the returned value. If false, fallback to the default positioning logic.\n\t\tif (currentSelection) {\n\t\t\tconst setPositionFn = this._getSelectionFunction(\n\t\t\t\tcurrentSelection.setPosition\n\t\t\t);\n\n\t\t\tif (setPositionFn) {\n\t\t\t\tresult = setPositionFn.call(this, {\n\t\t\t\t\teditor: this.context.editor,\n\t\t\t\t\teditorEvent: this.props.editorEvent,\n\t\t\t\t\tselectionData: this.props.selectionData,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (!result) {\n\t\t\tthis.updatePosition();\n\t\t\tthis.show();\n\t\t}\n\t}\n}\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ToolbarStyles\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nToolbarStyles.defaultProps = {\n\tcircular: true,\n\tdescendants: '.ae-input, .ae-button:not([disabled]), .ae-toolbar-element',\n\tkeys: {\n\t\tdismiss: [27],\n\t\tnext: [39, 40],\n\t\tprev: [37, 38],\n\t},\n};\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default styles\n * @memberof ToolbarStyles\n * @property {String} key\n * @static\n */\nToolbarStyles.key = 'styles';\n\nexport default WidgetDropdown(\n\tWidgetExclusive(WidgetFocusManager(ToolbarButtons(ToolbarStyles)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport '../core';\n\nimport '../plugins';\n\nimport '../components/uibridge';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {removeImageCommand} from '../commands';\nimport UI from '../components/main.jsx';\nimport Base from '../oop/base';\nimport Lang from '../oop/lang';\nimport extend from '../oop/oop';\nimport Selections from '../selections/selections';\nimport EditorContext from './editor-context';\n\nconst EMBED_VIDEO_WIDTH = 560;\nconst EMBED_VIDEO_HEIGHT = 315;\n\n/**\n * AlloyEditor main class. Creates instance of the editor and provides the user configuration\n * to the UI.\n *\n * @class Core\n * @constructor\n * @param {Object} config The configuration to be used.\n */\nfunction Core(config) {\n\tCore.superclass.constructor.call(this, config);\n}\n\nextend(\n\tCore,\n\tBase,\n\t{\n\t\t/**\n\t\t * Initializer lifecycle implementation for the AlloyEditor class. Creates a CKEditor\n\t\t * instance, passing it the provided configuration attributes.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method initializer\n\t\t * @param {Object} config Configuration object literal for the editor.\n\t\t */\n\t\tinitializer(config) {\n\t\t\tconst node = this.get('srcNode');\n\n\t\t\tif (this.get('enableContentEditable')) {\n\t\t\t\tnode.setAttribute('contenteditable', 'true');\n\t\t\t}\n\n\t\t\tconst editor = CKEDITOR.inline(node);\n\n\t\t\teditor.config.allowedContent = this.get('allowedContent');\n\n\t\t\teditor.config.toolbars = this.get('toolbars');\n\n\t\t\teditor.config.removePlugins = this.get('removePlugins');\n\n\t\t\teditor.config.extraPlugins = this.get('extraPlugins');\n\n\t\t\teditor.config.embedProviders = this.get('embedProviders');\n\n\t\t\teditor.config.placeholderClass = this.get('placeholderClass');\n\n\t\t\teditor.config.pasteFromWordRemoveStyles = false;\n\t\t\teditor.config.pasteFromWordRemoveFontStyles = false;\n\n\t\t\teditor.config.selectionKeystrokes = this.get('selectionKeystrokes');\n\n\t\t\teditor.config.spritemap = this.get('spritemap');\n\n\t\t\tLang.mix(editor.config, config);\n\n\t\t\tif (CKEDITOR.env.ie && !CKEDITOR.env.edge) {\n\t\t\t\tconst plugin = 'ae_dragresize_ie11';\n\n\t\t\t\teditor.config.extraPlugins = editor.config.extraPlugins.replace(\n\t\t\t\t\t'ae_dragresize',\n\t\t\t\t\tplugin\n\t\t\t\t);\n\t\t\t\teditor.config.removePlugins = editor.config.removePlugins.replace(\n\t\t\t\t\t'ae_dragresize',\n\t\t\t\t\tplugin\n\t\t\t\t);\n\t\t\t}\n\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tthis._addReadOnlyLinkClickListener(editor);\n\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\tconst extraCommands = this.get('extraCommands');\n\n\t\t\t\tconst extraCommandKeys = Object.keys(extraCommands);\n\t\t\t\tfor (let i = 0; i < extraCommandKeys.length; i++) {\n\t\t\t\t\tconst commandName = extraCommandKeys[i];\n\n\t\t\t\t\tif (editor.commands[commandName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\teditor.addCommand(commandName, extraCommands[commandName]);\n\t\t\t\t}\n\n\t\t\t\teditable.addClass('ae-editable');\n\t\t\t});\n\n\t\t\tthis._editor = editor;\n\n\t\t\tAlloyEditor.loadLanguageResources(this._renderUI.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Destructor lifecycle implementation for the AlloyEdtor class. Destroys the CKEditor\n\t\t * instance and destroys all created toolbars.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method destructor\n\t\t */\n\t\tdestructor() {\n\t\t\tthis._destroyed = true;\n\n\t\t\tif (this._editorUIElement) {\n\t\t\t\tReactDOM.unmountComponentAtNode(this._editorUIElement);\n\t\t\t\tthis._editorUIElement.parentNode.removeChild(\n\t\t\t\t\tthis._editorUIElement\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst nativeEditor = this.get('nativeEditor');\n\n\t\t\tif (nativeEditor) {\n\t\t\t\tconst editable = nativeEditor.editable();\n\n\t\t\t\tif (editable) {\n\t\t\t\t\teditable.removeClass('ae-editable');\n\n\t\t\t\t\tif (this.get('enableContentEditable')) {\n\t\t\t\t\t\tthis.get('srcNode').setAttribute(\n\t\t\t\t\t\t\t'contenteditable',\n\t\t\t\t\t\t\t'false'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._clearSelections();\n\n\t\t\t\tnativeEditor.destroy();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clear selections from window object\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _clearSelections\n\t\t */\n\t\t_clearSelections() {\n\t\t\tconst nativeEditor = this.get('nativeEditor');\n\t\t\tconst isMSSelection = typeof window.getSelection != 'function';\n\n\t\t\tif (isMSSelection) {\n\t\t\t\tnativeEditor.document.$.selection.empty();\n\t\t\t} else {\n\t\t\t\tnativeEditor.document\n\t\t\t\t\t.getWindow()\n\t\t\t\t\t.$.getSelection()\n\t\t\t\t\t.removeAllRanges();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Method to set default link behavior\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _addReadOnlyLinkClickListener\n\t\t * @param {Object} editor\n\t\t */\n\t\t_addReadOnlyLinkClickListener(editor) {\n\t\t\teditor.editable().on('click', this._defaultReadOnlyClickFn, this, {\n\t\t\t\teditor,\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Called on `click` event when the editor is in read only mode. Navigates to link's URL or opens\n\t\t * the link in a new window.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @event readOnlyClick\n\t\t * @protected\n\t\t * @method _defaultReadOnlyClickFn\n\t\t * @param {Object} event The fired `click` event payload\n\t\t */\n\t\t_defaultReadOnlyClickFn(event) {\n\t\t\tconst mouseEvent = event.data.$;\n\t\t\tconst hasCtrlKey = mouseEvent.ctrlKey || mouseEvent.metaKey;\n\t\t\tconst shouldOpen = this._editor.config.readOnly || hasCtrlKey;\n\n\t\t\tmouseEvent.preventDefault();\n\n\t\t\tif (!shouldOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tevent.listenerData.editor\n\t\t\t\t\t.editable()\n\t\t\t\t\t.editor.fire('readOnlyClick', event.data) !== false\n\t\t\t) {\n\t\t\t\tconst ckElement = new CKEDITOR.dom.elementPath(\n\t\t\t\t\tevent.data.getTarget(),\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t\tconst link = ckElement.lastElement;\n\n\t\t\t\tif (link) {\n\t\t\t\t\tconst href = link.$.attributes.href\n\t\t\t\t\t\t? link.$.attributes.href.value\n\t\t\t\t\t\t: null;\n\t\t\t\t\tconst target = hasCtrlKey\n\t\t\t\t\t\t? '_blank'\n\t\t\t\t\t\t: link.$.attributes.target\n\t\t\t\t\t\t? link.$.attributes.target.value\n\t\t\t\t\t\t: null;\n\t\t\t\t\tthis._redirectLink(href, target);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Retrieves the native CKEditor instance. Having this, the developer may use the API of CKEditor OOTB.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _getNativeEditor\n\t\t * @return {Object} The current instance of CKEditor.\n\t\t */\n\t\t_getNativeEditor() {\n\t\t\treturn this._editor;\n\t\t},\n\n\t\t/**\n\t\t * Redirects the browser to a given link\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _redirectLink\n\t\t * @param {string} href The href to take the browser to\n\t\t * @param {string=} target Specifies where to display the link\n\t\t */\n\t\t_redirectLink(href, target) {\n\t\t\tif (target && href) {\n\t\t\t\twindow.open(href, target);\n\t\t\t} else if (href) {\n\t\t\t\twindow.location.href = href;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Renders the specified from the user toolbars.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _renderUI\n\t\t */\n\t\t_renderUI() {\n\t\t\tif (!this._destroyed) {\n\t\t\t\tconst editorUIElement = document.createElement('div');\n\t\t\t\teditorUIElement.className = 'ae-ui';\n\n\t\t\t\tconst uiNode = this.get('uiNode') || document.body;\n\n\t\t\t\tuiNode.appendChild(editorUIElement);\n\n\t\t\t\tconst callbackRef = element => {\n\t\t\t\t\tif (!this._mainUI && element) {\n\t\t\t\t\t\tthis._mainUI = element;\n\t\t\t\t\t\tthis.get('nativeEditor').fire('uiReady');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tReactDOM.render(\n\t\t\t\t\t<EditorContext.Provider value={{editor: this}}>\n\t\t\t\t\t\t<UI\n\t\t\t\t\t\t\teventsDelay={this.get('eventsDelay')}\n\t\t\t\t\t\t\tref={callbackRef}\n\t\t\t\t\t\t\ttoolbars={this.get('toolbars')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</EditorContext.Provider>,\n\t\t\t\t\teditorUIElement\n\t\t\t\t);\n\n\t\t\t\tthis._editorUIElement = editorUIElement;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * The function returns an HTML element from the passed value. If the passed value is a string, it should be\n\t\t * the Id of the element which have to be retrieved from the DOM.\n\t\t * If an HTML Element is passed, the element itself will be returned.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @method _toElement\n\t\t * @protected\n\t\t * @param {!(String|HTMLElement)} value String, which have to correspond to an HTML element from the DOM,\n\t\t * or the HTML element itself. If Id is passed, the HTML element will be retrieved from the DOM.\n\t\t * @return {HTMLElement} An HTML element.\n\t\t */\n\t\t_toElement(value) {\n\t\t\tif (Lang.isString(value)) {\n\t\t\t\tvalue = document.getElementById(value);\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\n\t\t/**\n\t\t * Validates the allowed content attribute. Look\n\t\t * [here](http://docs.ckeditor.com/#!/api/CKEDITOR.config-cfg-allowedContent) for more information about the\n\t\t * supported values.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _validateAllowedContent\n\t\t * @param {Any} value The value to be checked\n\t\t * @return {Boolean} True if the current value is valid configuration, false otherwise\n\t\t */\n\t\t_validateAllowedContent(value) {\n\t\t\treturn (\n\t\t\t\tLang.isString(value) ||\n\t\t\t\tLang.isObject(value) ||\n\t\t\t\tLang.isBoolean(value)\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Validates the value of toolbars attribute\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _validateToolbars\n\t\t * @param {Any} value The value to be checked\n\t\t * @return {Boolean} True if the current value is valid toolbars configuration, false otherwise\n\t\t */\n\t\t_validateToolbars(value) {\n\t\t\treturn Lang.isObject(value) || Lang.isNull(value);\n\t\t},\n\t},\n\t{\n\t\tATTRS: {\n\t\t\t/**\n\t\t\t * Configures the allowed content for the current instance of AlloyEditor.\n\t\t\t * Look on the [official CKEditor API](http://docs.ckeditor.com/#!/api/CKEDITOR.config-cfg-allowedContent)\n\t\t\t * for more information about the valid values.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property allowedContent\n\t\t\t * @default true\n\t\t\t * @writeOnce\n\t\t\t * @type {Boolean, String, Object}\n\t\t\t */\n\t\t\tallowedContent: {\n\t\t\t\tvalidator: '_validateAllowedContent',\n\t\t\t\tvalue: true,\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Callback to be invoked when clicking on the\n\t\t\t * <code>src/components/buttons/button-link-edit-browse.jsx</code>\n\t\t\t * component.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @propety documentBrowseLinkCallback\n\t\t\t * @default undefined\n\t\t\t * @type {Function|undefined}\n\t\t\t */\n\t\t\tdocumentBrowseLinkCallback: {\n\t\t\t\tvalidator: Lang.isFunction,\n\t\t\t\tvalue: undefined,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Configuration for the\n\t\t\t * <code>src/components/buttons/button-link-edit-browse.jsx</code>\n\t\t\t * component.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @propety documentBrowseLinkUrl\n\t\t\t * @default undefined\n\t\t\t * @type {String|undefined}\n\t\t\t */\n\t\t\tdocumentBrowseLinkUrl: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: undefined,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * List of embed providers for videos\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property embedProviders\n\t\t\t * @default []\n\t\t\t * @type Array}\n\t\t\t */\n\t\t\tembedProviders: {\n\t\t\t\tvalidator: Lang.isArray,\n\t\t\t\tvalue: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'facebook',\n\t\t\t\t\t\ttpl: `<iframe allowFullScreen=\"true\" allowTransparency=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t\t frameborder=\"0\" height=\"${EMBED_VIDEO_HEIGHT}\"\n\t\t\t\t\t\t\t\t\t\t\t\t src=\"https://www.facebook.com/plugins/video.php?href={embedId}'\n\t\t\t\t\t\t\t\t\t\t\t\t &show_text=0&width=${EMBED_VIDEO_WIDTH}&height=${EMBED_VIDEO_HEIGHT}\" scrolling=\"no\"\n\t\t\t\t\t\t\t\t\t\t\t\t style=\"border:none;overflow:hidden\" width=\"${EMBED_VIDEO_WIDTH}}\"></iframe>`,\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\turlSchemes: [\n\t\t\t\t\t\t\t'(https?:\\\\/\\\\/(?:www\\\\.)?facebook.com\\\\/\\\\S*\\\\/videos\\\\/\\\\S*)',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'twitch',\n\t\t\t\t\t\ttpl: `<iframe allowfullscreen=\"true\" frameborder=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t height=\"${EMBED_VIDEO_HEIGHT}\"\n\t\t\t\t\t\t\t\t\t\t\t\t src=\"https://player.twitch.tv/?autoplay=false&video={embedId}\"\n\t\t\t\t\t\t\t\t\t\t\t\t scrolling=\"no\" width=\"${EMBED_VIDEO_WIDTH}\"></iframe>`,\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\turlSchemes: [\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?twitch.tv\\\\/videos\\\\/(\\\\S*)$',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'vimeo',\n\t\t\t\t\t\ttpl: `<iframe allowfullscreen frameborder=\"0\" height=\"${EMBED_VIDEO_HEIGHT}\"\n\t\t\t\t\t\t\t\t\t\t\t\t mozallowfullscreen src=\"https://player.vimeo.com/video/{embedId}\"\n\t\t\t\t\t\t\t\t\t\t\t\t webkitallowfullscreen width=\"${EMBED_VIDEO_WIDTH}\"></iframe>`,\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\turlSchemes: [\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?vimeo\\\\.com\\\\/album\\\\/.*\\\\/video\\\\/(\\\\S*)',\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?vimeo\\\\.com\\\\/channels\\\\/.*\\\\/(\\\\S*)',\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?vimeo\\\\.com\\\\/groups\\\\/.*\\\\/videos\\\\/(\\\\S*)',\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?vimeo\\\\.com\\\\/(\\\\S*)$',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'youtube',\n\t\t\t\t\t\ttpl: `<iframe allow=\"autoplay; encrypted-media\" allowfullscreen\n\t\t\t\t\t\t\t\t\t\t\t\t height=\"${EMBED_VIDEO_HEIGHT}\" frameborder=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t src=\"https://www.youtube.com/embed/{embedId}?rel=0\"\n\t\t\t\t\t\t\t\t\t\t\t\t width=\"${EMBED_VIDEO_WIDTH}\"></iframe>`,\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\turlSchemes: [\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?youtube.com\\\\/watch\\\\?v=(\\\\S*)$',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies whether AlloyEditor set the contenteditable attribute\n\t\t\t * to \"true\" on its srcNode.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property enableContentEditable\n\t\t\t * @type Boolean\n\t\t\t * @default true\n\t\t\t * @writeOnce\n\t\t\t */\n\t\t\tenableContentEditable: {\n\t\t\t\tvalidator: Lang.isBoolean,\n\t\t\t\tvalue: true,\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The delay (timeout), in ms, after which events such like key or mouse events will be processed.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property eventsDelay\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\teventsDelay: {\n\t\t\t\tvalidator: Lang.isNumber,\n\t\t\t\tvalue: 100,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The list of extra commands to be added to the editor.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property extraCommands\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\textraCommands: {\n\t\t\t\tvalidator: Lang.isObject,\n\t\t\t\tvalue: {\n\t\t\t\t\tremoveImage: removeImageCommand,\n\t\t\t\t},\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies the extra plugins which have to be loaded to the current CKEditor instance in order to\n\t\t\t * make AlloyEditor to work properly.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property extraPlugins\n\t\t\t * @default 'uicore,selectionregion,dragresize,addimages,placeholder,tabletools,tableresize,autolink'\n\t\t\t * @writeOnce\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\textraPlugins: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue:\n\t\t\t\t\t'ae_uicore,ae_selectionregion,ae_selectionkeystrokes,ae_imagealignment,ae_addimages,ae_placeholder,' +\n\t\t\t\t\t'ae_tabletools,ae_tableresize,ae_autolink,ae_embed,ae_autolist,ae_dragresize,' +\n\t\t\t\t\t'ae_uibridge,ae_richcombobridge,ae_panelmenubuttonbridge,ae_menubridge,ae_menubuttonbridge,ae_buttonbridge,font,colorbutton',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies the \"mode\" for alloy editor\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property mode\n\t\t\t * @default 'simple'\n\t\t\t * @writeOnce\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\tmode: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: 'simple',\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Retrieves the native CKEditor instance. Having this, the developer may use the full API of CKEditor.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property nativeEditor\n\t\t\t * @readOnly\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tnativeEditor: {\n\t\t\t\tgetter: '_getNativeEditor',\n\t\t\t\treadOnly: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies the class, which should be added by Placeholder plugin\n\t\t\t * {{#crossLink \"CKEDITOR.plugins.ae_placeholder}}{{/crossLink}}\n\t\t\t * when editor is not focused.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property placeholderClass\n\t\t\t * @default 'ae-placeholder'\n\t\t\t * @writeOnce\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\tplaceholderClass: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: 'ae-placeholder',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies the plugins, which come by default with CKEditor, but which are not needed by AlloyEditor.\n\t\t\t * These plugins add the default UI for CKeditor, which is no more needed. Please note that AlloyEdtor\n\t\t\t * comes with its own highly optimized copy of CKEditor (just customized via their official download page).\n\t\t\t * This version does not come with the unneeded plugins, so the value of this property won't be needed.\n\t\t\t * However, if you decide to go with the OOTB version of CKEditor, you will have to remove some of the\n\t\t\t * plugins if you decide to use AlloyEditor. Keep in mind that removing these plugins doesn't remove them\n\t\t\t * entirely from CKEditor. It just removes them from its current instance, in which you will use different\n\t\t\t * UI - those of AlloyEditor. You will be fully able to use both OOTB CKEditor and AlloyEditor on the same\n\t\t\t * page!\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property removePlugins\n\t\t\t * @default 'contextmenu,toolbar,elementspath,resize,liststyle,link'\n\t\t\t * @writeOnce\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\tremovePlugins: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: 'contextmenu,toolbar,elementspath,resize,liststyle,link',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Array of manual selection triggers. They can be configured to manually show a specific selection toolbar\n\t\t\t * by forcing the selection type. A selectionKeystroke item consists of a keys property with a [CKEditor keystroke\n\t\t\t * definition](http://docs.ckeditor.com/#!/api/CKEDITOR.config-cfg-keystrokes) and a selection property with\n\t\t\t * the selection name to trigger.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property selectionKeystrokes\n\t\t\t * @type {Array}\n\t\t\t */\n\t\t\tselectionKeystrokes: {\n\t\t\t\tvalidator: Lang.isArray,\n\t\t\t\tvalue: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkeys: CKEDITOR.CTRL + 76 /* L*/,\n\t\t\t\t\t\tselection: 'link',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tkeys: CKEDITOR.CTRL + CKEDITOR.SHIFT + 76 /* L*/,\n\t\t\t\t\t\tselection: 'embed',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The path to the spritemap SVG used for icons\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property spritemap\n\t\t\t * @type String\n\t\t\t * @writeOnce\n\t\t\t */\n\t\t\tspritemap: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: 'alloy-editor/assets/icons/icons.svg',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The Node ID or HTMl node, which AlloyEditor should use as an editable area.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property srcNode\n\t\t\t * @type String | Node\n\t\t\t * @writeOnce\n\t\t\t */\n\t\t\tsrcNode: {\n\t\t\t\tsetter: '_toElement',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The toolbars configuration for this editor instance\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property {Object} toolbars\n\t\t\t */\n\t\t\ttoolbars: {\n\t\t\t\tvalidator: '_validateToolbars',\n\t\t\t\tvalue: {\n\t\t\t\t\tadd: {\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t'imageFromFile',\n\t\t\t\t\t\t\t'embed',\n\t\t\t\t\t\t\t'camera',\n\t\t\t\t\t\t\t'hline',\n\t\t\t\t\t\t\t'table',\n\t\t\t\t\t\t],\n\t\t\t\t\t\ttabIndex: 2,\n\t\t\t\t\t},\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\tselections: Selections,\n\t\t\t\t\t\ttabIndex: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The Node ID or HTMl node, where AlloyEditor's UI should be rendered.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property uiNode\n\t\t\t * @type String | Node\n\t\t\t * @writeOnce\n\t\t\t */\n\t\t\tuiNode: {\n\t\t\t\tsetter: '_toElement',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\t\t},\n\t}\n);\n\nCKEDITOR.event.implementOn(Core);\n\nexport default Core;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport debounce from './debounce';\n\nimport './link';\n\nimport './plugins';\n\nimport './selection-region';\n\nimport './table';\n\nimport './tools';\n\nimport './uicore';\n\nexport {debounce};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Debounce util function. If a function execution is expensive, it might be debounced. This means\n * that it will be executed after some amount of time after its last call. For example, if we attach a\n * a function on scroll event, it might be called hundreds times per second. In this case it may be\n * debounced with, let's say 100ms. The real execution of this function will happen 100ms after last\n * scroll event.\n *\n * @memberof CKEDITOR.tools\n * @method debounce\n * @param {Array} args An array of arguments which the callback will receive.\n * @param {Function} callback The callback which has to be called after given timeout.\n * @param {Number} timeout Timeout in milliseconds after which the callback will be called.\n * @param {Object} context The context in which the callback will be called. This argument is optional.\n * @static\n */\nfunction debounce(callback, timeout, context, args = []) {\n\tlet debounceHandle;\n\n\tconst callFn = function(...callArgs) {\n\t\t/* eslint-disable no-invalid-this */\n\t\tconst callContext = context || this;\n\t\t/* eslint-enable no-invalid-this */\n\n\t\tclearTimeout(debounceHandle);\n\n\t\tdebounceHandle = setTimeout(() => {\n\t\t\tcallback.apply(callContext, [...callArgs, ...args]);\n\t\t}, timeout);\n\t};\n\n\tcallFn.detach = function() {\n\t\tclearTimeout(debounceHandle);\n\t};\n\n\treturn callFn;\n}\n\nCKEDITOR.tools.debounce = CKEDITOR.tools.debounce || debounce;\n\nexport default debounce;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst REGEX_BOOKMARK_SCHEME = /^#.*/i;\nconst REGEX_EMAIL_SCHEME = /^[a-z0-9\\u0430-\\u044F._-]+@/i;\nconst REGEX_URI_SCHEME = /^(?:[a-z][a-z0-9+\\-.]*):|^\\//i;\n\n/**\n * Link class utility. Provides methods for create, delete and update links.\n *\n * @class CKEDITOR.Link\n * @constructor\n * @param {Object} editor The CKEditor instance.\n */\nfunction Link(editor, config) {\n\tthis._editor = editor;\n\tthis.appendProtocol =\n\t\tconfig && config.appendProtocol === false ? false : true;\n}\n\nLink.prototype = {\n\tconstructor: Link,\n\n\t/**\n\t * Advances the editor selection to the next available position after a\n\t * given link or the one in the current selection.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method advanceSelection\n\t * @param {CKEDITOR.dom.element} link The link element which link style should be removed.\n\t */\n\tadvanceSelection(link) {\n\t\tlink = link || this.getFromSelection();\n\n\t\tconst range = this._editor.getSelection().getRanges()[0];\n\n\t\tif (link) {\n\t\t\trange.moveToElementEditEnd(link);\n\n\t\t\tconst nextNode = range.getNextEditableNode();\n\n\t\t\tif (\n\t\t\t\tnextNode &&\n\t\t\t\t!this._editor.element.equals(nextNode.getCommonAncestor(link))\n\t\t\t) {\n\t\t\t\tconst whitespace = /\\s/.exec(nextNode.getText());\n\n\t\t\t\tconst offset = whitespace ? whitespace.index + 1 : 0;\n\n\t\t\t\trange.setStart(nextNode, offset);\n\t\t\t\trange.setEnd(nextNode, offset);\n\t\t\t}\n\t\t}\n\n\t\tthis._editor.getSelection().selectRanges([range]);\n\t},\n\n\t/**\n\t * Create a link with given URI as href.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method create\n\t * @param {Object} attrs A config object with link attributes. These might be arbitrary DOM attributes.\n\t * @param {Object} modifySelection A config object with an advance attribute to indicate if the selection should be moved after the link creation.\n\t * @param {String} URI The URI of the link.\n\t */\n\tcreate(URI, attrs, modifySelection) {\n\t\tconst selection = this._editor.getSelection();\n\n\t\tconst range = selection.getRanges()[0];\n\n\t\tif (range.collapsed) {\n\t\t\tconst text = new CKEDITOR.dom.text(URI, this._editor.document);\n\t\t\trange.insertNode(text);\n\t\t\trange.selectNodeContents(text);\n\t\t}\n\n\t\tURI = this._getCompleteURI(URI);\n\n\t\tconst linkAttrs = CKEDITOR.tools.merge(\n\t\t\t{\n\t\t\t\t'data-cke-saved-href': URI,\n\t\t\t\thref: URI,\n\t\t\t},\n\t\t\tattrs\n\t\t);\n\n\t\tconst style = new CKEDITOR.style({\n\t\t\tattributes: linkAttrs,\n\t\t\telement: 'a',\n\t\t});\n\n\t\tstyle.type = CKEDITOR.STYLE_INLINE;\n\t\tstyle.applyToRange(range, this._editor);\n\n\t\tif (modifySelection && modifySelection.advance) {\n\t\t\tthis.advanceSelection();\n\t\t} else {\n\t\t\trange.select();\n\t\t}\n\t},\n\n\t/**\n\t * Retrieves a link from the current selection.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method getFromSelection\n\t * @return {CKEDITOR.dom.element} The retrieved link or null if not found.\n\t */\n\tgetFromSelection() {\n\t\tconst selection = this._editor.getSelection();\n\n\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\tif (selectedElement && selectedElement.is('a')) {\n\t\t\treturn selectedElement;\n\t\t}\n\n\t\tif (selectedElement && CKEDITOR.env.ie) {\n\t\t\tconst children = selectedElement.getChildren();\n\n\t\t\tconst count = children.count();\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst node = children.getItem(i);\n\n\t\t\t\tif (node.is('a')) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst range = selection.getRanges()[0];\n\n\t\tif (range) {\n\t\t\trange.shrink(CKEDITOR.SHRINK_TEXT);\n\n\t\t\treturn this._editor\n\t\t\t\t.elementPath(range.getCommonAncestor())\n\t\t\t\t.contains('a', 1);\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Removes a link from the editor.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method remove\n\t * @param {CKEDITOR.dom.element} link The link element which link style should be removed.\n\t * @param {Object} modifySelection A config object with an advance attribute to indicate if the selection should be moved after the link creation.\n\t */\n\tremove(link, modifySelection) {\n\t\tconst editor = this._editor;\n\n\t\tif (link) {\n\t\t\tif (modifySelection && modifySelection.advance) {\n\t\t\t\tthis.advanceSelection();\n\t\t\t}\n\n\t\t\tlink.remove(editor);\n\t\t} else {\n\t\t\tconst style = new CKEDITOR.style({\n\t\t\t\talwaysRemoveElement: 1,\n\t\t\t\telement: 'a',\n\t\t\t\ttype: CKEDITOR.STYLE_INLINE,\n\t\t\t});\n\n\t\t\t// 'removeStyle()' removes the style from the editor's current selection.\n\t\t\t//  We need to force the selection to be the whole link element\n\t\t\t//  to remove it properly.\n\n\t\t\tconst selection = editor.getSelection();\n\t\t\tselection.selectElement(selection.getStartElement());\n\n\t\t\teditor.removeStyle(style);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the href of an already existing link.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method update\n\t * @param {CKEDITOR.dom.element} link The link element which href should be removed.\n\t * @param {Object|String} attrs The attributes to update or remove. Attributes with null values will be removed.\n\t * @param {Object} modifySelection A config object with an advance attribute to indicate if the selection should be moved after the link creation.\n\t */\n\tupdate(attrs, link, modifySelection) {\n\t\tconst instance = this;\n\n\t\tlink = link || this.getFromSelection();\n\n\t\tif (typeof attrs === 'string') {\n\t\t\tconst uri = instance._getCompleteURI(attrs);\n\n\t\t\tlink.setAttributes({\n\t\t\t\t'data-cke-saved-href': uri,\n\t\t\t\thref: uri,\n\t\t\t});\n\t\t} else if (typeof attrs === 'object') {\n\t\t\tconst removeAttrs = [];\n\n\t\t\tconst setAttrs = {};\n\n\t\t\tObject.keys(attrs).forEach(key => {\n\t\t\t\tif (attrs[key] === null) {\n\t\t\t\t\tif (key === 'href') {\n\t\t\t\t\t\tremoveAttrs.push('data-cke-saved-href');\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveAttrs.push(key);\n\t\t\t\t} else {\n\t\t\t\t\tif (key === 'href') {\n\t\t\t\t\t\tconst uri = instance._getCompleteURI(attrs[key]);\n\n\t\t\t\t\t\tsetAttrs['data-cke-saved-href'] = uri;\n\t\t\t\t\t\tsetAttrs[key] = uri;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetAttrs[key] = attrs[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlink.removeAttributes(removeAttrs);\n\t\t\tlink.setAttributes(setAttrs);\n\t\t}\n\n\t\tif (modifySelection && modifySelection.advance) {\n\t\t\tthis.advanceSelection(link);\n\t\t}\n\t},\n\n\t/**\n\t * Checks if the URI begins with a '#' symbol to determine if it's an on page bookmark.\n\t * If it doesn't, it then checks if the URI has an '@' symbol. If it does and the URI\n\t * looks like an email and doesn't have 'mailto:', 'mailto:' is added to the URI.\n\t * If it doesn't and the URI doesn't have a scheme, the default 'http' scheme with\n\t * hierarchical path '//' is added to the URI.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method _getCompleteURI\n\t * @param {String} URI The URI of the link.\n\t * @protected\n\t * @return {String} The URI updated with the protocol.\n\t */\n\t_getCompleteURI(URI) {\n\t\tif (REGEX_BOOKMARK_SCHEME.test(URI)) {\n\t\t\treturn URI;\n\t\t} else if (REGEX_EMAIL_SCHEME.test(URI)) {\n\t\t\tURI = 'mailto:' + URI;\n\t\t} else if (!REGEX_URI_SCHEME.test(URI)) {\n\t\t\tURI = this.appendProtocol ? 'http://' + URI : URI;\n\t\t}\n\n\t\treturn URI;\n\t},\n};\n\nCKEDITOR.Link = CKEDITOR.Link || Link;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n// Wraps each of the plugin lifecycle methods in a closure that will\n// set up the editor.__processingPlugin__ variable so it can be globally\n// accessed exposing the plugin being processed and the lifecycle phase\n// in which it is happening\n//\n// @param {Object} plugin The plugin to wrap lifecycle methods\nconst wrapPluginLifecycle = function(plugin) {\n\tconst methods = ['beforeInit', 'init', 'afterInit'];\n\n\tmethods.forEach(methodName => {\n\t\tif (plugin[methodName]) {\n\t\t\tplugin[methodName] = CKEDITOR.tools.override(\n\t\t\t\tplugin[methodName],\n\t\t\t\toriginalPluginMethod => {\n\t\t\t\t\tconst payload = {\n\t\t\t\t\t\tphase: methodName,\n\t\t\t\t\t\tplugin,\n\t\t\t\t\t};\n\n\t\t\t\t\treturn function(editor) {\n\t\t\t\t\t\teditor.__processingPlugin__ = payload;\n\n\t\t\t\t\t\t// eslint-disable-next-line no-invalid-this\n\t\t\t\t\t\toriginalPluginMethod.call(this, editor);\n\n\t\t\t\t\t\teditor.__processingPlugin__ = null;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n};\n\n// Filters the requires object to remove unwanted dependencies. At this point\n// only 'toolbar' has been identified, but more can appear. An unwanted plugin\n// dependency is one that prevents a necessary plugin from being removed\n//\n// @param {string|Array<string>} requires The requires object\n// @return {string} The filtered requires object\nconst filterUnwantedDependencies = function(requires) {\n\tif (typeof requires === 'string') {\n\t\trequires = requires.split(',');\n\t}\n\n\treturn requires.filter(require => {\n\t\treturn require !== 'toolbar';\n\t});\n};\n\n/**\n * CKEDITOR.plugins class utility which adds additional methods to those of CKEditor.\n *\n * @class CKEDITOR.plugins\n */\n\n/**\n * Overrides CKEDITOR.plugins.load method so we can extend the lifecycle methods of\n * the loaded plugins to add some metainformation about the plugin being processed\n *\n * @param {String/Array} names The name of the resource to load. It may be a\n * string with a single resource name, or an array with several names.\n * @param {Function} callback A function to be called when all resources\n * are loaded. The callback will receive an array containing all loaded names.\n * @param {Object} [scope] The scope object to be used for the callback call.\n * @memberof CKEDITOR.plugins\n * @method load\n * @static\n */\nCKEDITOR.plugins.load = CKEDITOR.tools.override(\n\tCKEDITOR.plugins.load,\n\tpluginsLoad => {\n\t\t// Wrap original load function so we can transform the plugin input parameter\n\t\t// before passing it down to the original callback\n\t\treturn function(names, callback, scope) {\n\t\t\t// eslint-disable-next-line no-invalid-this\n\t\t\tpluginsLoad.call(this, names, plugins => {\n\t\t\t\tif (callback) {\n\t\t\t\t\tObject.keys(plugins).forEach(pluginName => {\n\t\t\t\t\t\tconst plugin = plugins[pluginName];\n\n\t\t\t\t\t\tif (plugin.requires) {\n\t\t\t\t\t\t\tplugin.requires = filterUnwantedDependencies(\n\t\t\t\t\t\t\t\tplugin.requires\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twrapPluginLifecycle(plugin);\n\t\t\t\t\t});\n\n\t\t\t\t\tcallback.call(scope, plugins);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t}\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_selectionregion')) {\n\tCKEDITOR.SELECTION_TOP_TO_BOTTOM = 0;\n\tCKEDITOR.SELECTION_BOTTOM_TO_TOP = 1;\n\tCKEDITOR.SELECTION_LEFT_TO_RIGHT = 2;\n\tCKEDITOR.SELECTION_RIGHT_TO_LEFT = 3;\n\n\t/**\n\t * SelectionRegion utility class which provides metadata about the selection. The metadata may be the start and end\n\t * rectangles, caret region, etc. **This class is not intended to be used standalone. Its functions will\n\t * be merged into each editor instance, so the developer may use them directly via the editor, without making\n\t * an instance of this class**.\n\t *\n\t * @class SelectionRegion\n\t * @constructor\n\t */\n\tfunction SelectionRegion() {}\n\n\tSelectionRegion.prototype = {\n\t\tconstructor: SelectionRegion,\n\n\t\t/**\n\t\t * Creates selection from two points in page coordinates.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method createSelectionFromPoint\n\t\t * @param {Number} x X point in page coordinates.\n\t\t * @param {Number} y Y point in page coordinates.\n\t\t */\n\t\tcreateSelectionFromPoint(x, y) {\n\t\t\tthis.createSelectionFromRange(x, y, x, y);\n\t\t},\n\n\t\t/**\n\t\t * Creates selection from range. A range consists from two points in page coordinates.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method createSelectionFromRange\n\t\t * @param {Number} startX X coordinate of the first point.\n\t\t * @param {Number} startY Y coordinate of the first point.\n\t\t * @param {Number} endX X coordinate of the second point.\n\t\t * @param {Number} endY Y coordinate of the second point.\n\t\t */\n\t\tcreateSelectionFromRange(startX, startY, endX, endY) {\n\t\t\tlet end;\n\t\t\tlet endContainer;\n\t\t\tlet endOffset;\n\t\t\tlet range;\n\t\t\tlet start;\n\t\t\tlet startContainer;\n\t\t\tlet startOffset;\n\n\t\t\tif (typeof document.caretPositionFromPoint === 'function') {\n\t\t\t\tstart = document.caretPositionFromPoint(startX, startY);\n\t\t\t\tend = document.caretPositionFromPoint(endX, endY);\n\n\t\t\t\tstartContainer = start.offsetNode;\n\t\t\t\tendContainer = end.offsetNode;\n\n\t\t\t\tstartOffset = start.offset;\n\t\t\t\tendOffset = end.offset;\n\n\t\t\t\trange = this.createRange();\n\t\t\t} else if (typeof document.caretRangeFromPoint === 'function') {\n\t\t\t\tstart = document.caretRangeFromPoint(startX, startY);\n\t\t\t\tend = document.caretRangeFromPoint(endX, endY);\n\n\t\t\t\tstartContainer = start.startContainer;\n\t\t\t\tendContainer = end.startContainer;\n\n\t\t\t\tstartOffset = start.startOffset;\n\t\t\t\tendOffset = end.startOffset;\n\n\t\t\t\trange = this.createRange();\n\t\t\t}\n\n\t\t\tif (range && document.getSelection) {\n\t\t\t\trange.setStart(\n\t\t\t\t\tnew CKEDITOR.dom.node(startContainer),\n\t\t\t\t\tstartOffset\n\t\t\t\t);\n\t\t\t\trange.setEnd(new CKEDITOR.dom.node(endContainer), endOffset);\n\n\t\t\t\tthis.getSelection().selectRanges([range]);\n\t\t\t} else if (typeof document.body.createTextRange === 'function') {\n\t\t\t\tconst selection = this.getSelection();\n\n\t\t\t\tselection.unlock();\n\n\t\t\t\trange = document.body.createTextRange();\n\t\t\t\trange.moveToPoint(startX, startY);\n\n\t\t\t\tconst endRange = range.duplicate();\n\t\t\t\tendRange.moveToPoint(endX, endY);\n\n\t\t\t\trange.setEndPoint('EndToEnd', endRange);\n\t\t\t\trange.select();\n\n\t\t\t\tthis.getSelection().lock();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the region of the current position of the caret. The points are in page coordinates.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getCaretRegion\n\t\t * @return {Object} Returns object with the following properties:\n\t\t * - bottom\n\t\t * - left\n\t\t * - right\n\t\t * - top\n\t\t */\n\t\tgetCaretRegion() {\n\t\t\tconst selection = this.getSelection();\n\n\t\t\tlet region = {\n\t\t\t\tbottom: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t};\n\n\t\t\tconst bookmarks = selection.createBookmarks();\n\n\t\t\tif (!bookmarks.length) {\n\t\t\t\treturn region;\n\t\t\t}\n\n\t\t\tconst bookmarkNodeEl = bookmarks[0].startNode.$;\n\n\t\t\tbookmarkNodeEl.style.display = 'inline-block';\n\n\t\t\tregion = new CKEDITOR.dom.element(bookmarkNodeEl).getClientRect();\n\n\t\t\tbookmarkNodeEl.parentNode.removeChild(bookmarkNodeEl);\n\n\t\t\tconst scrollPos = new CKEDITOR.dom.window(\n\t\t\t\twindow\n\t\t\t).getScrollPosition();\n\n\t\t\tregion.bottom = scrollPos.y + region.bottom;\n\t\t\tregion.left = scrollPos.x + region.left;\n\t\t\tregion.right = scrollPos.x + region.right;\n\t\t\tregion.top = scrollPos.y + region.top;\n\n\t\t\treturn region;\n\t\t},\n\n\t\t/**\n\t\t * Returns data for the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getSelectionData\n\t\t * @return {Object|null} Returns an object with the following data:\n\t\t * - element - The currently selected element, if any\n\t\t * - text - The selected text\n\t\t * - region - The data, returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionRegion:method\"}}{{/crossLink}}\n\t\t */\n\t\tgetSelectionData() {\n\t\t\tconst selection = this.getSelection();\n\n\t\t\tif (!selection.getNative()) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst result = {\n\t\t\t\telement: selection.getSelectedElement(),\n\t\t\t\ttext: selection.getSelectedText(),\n\t\t\t};\n\n\t\t\tresult.region = this.getSelectionRegion(selection);\n\n\t\t\treturn result;\n\t\t},\n\n\t\t/**\n\t\t * Returns the region of the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getSelectionRegion\n\t\t * @return {Object} Returns object which is being returned from\n\t\t * {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getClientRectsRegion:method\"}}{{/crossLink}} with three more properties:\n\t\t * - direction - the direction of the selection. Can be one of these:\n\t\t *   1. CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t *   2. CKEDITOR.SELECTION_BOTTOM_TO_TOP\n\t\t * - height - The height of the selection region\n\t\t * - width - The width of the selection region\n\t\t */\n\t\tgetSelectionRegion() {\n\t\t\tconst region = this.getClientRectsRegion();\n\n\t\t\tregion.direction = this.getSelectionDirection();\n\n\t\t\tregion.height = region.bottom - region.top;\n\t\t\tregion.width = region.right - region.left;\n\n\t\t\treturn region;\n\t\t},\n\n\t\t/**\n\t\t * Returns true if the current selection is empty, false otherwise.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method isSelectionEmpty\n\t\t * @return {Boolean} Returns true if the current selection is empty, false otherwise.\n\t\t */\n\t\tisSelectionEmpty() {\n\t\t\tconst selection = this.getSelection();\n\n\t\t\tif (selection.getType() === CKEDITOR.SELECTION_NONE) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst ranges = selection.getRanges();\n\t\t\treturn ranges && ranges.length === 1 && ranges[0].collapsed;\n\t\t},\n\n\t\t/**\n\t\t * Returns object with data about the [client rectangles](https://developer.mozilla.org/en-US/docs/Web/API/Element.getClientRects) of the selection,\n\t\t * normalized across browses. All offsets below are in page coordinates.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getClientRectsRegion\n\t\t * @return {Object} Returns object with the following data:\n\t\t * - bottom - bottom offset of all client rectangles\n\t\t * - left - left offset of all client rectangles\n\t\t * - right - right offset of all client rectangles\n\t\t * - top - top offset of all client rectangles\n\t\t * - startRect - An Object, which contains the following information:\n\t\t *     + bottom - bottom offset\n\t\t *     + height - the height of the rectangle\n\t\t *     + left - left offset of the selection\n\t\t *     + right - right offset of the selection\n\t\t *     + top - top offset of the selection\n\t\t *     + width - the width of the rectangle\n\t\t * - endRect - An Object, which contains the following information:\n\t\t *     + bottom - bottom offset\n\t\t *     + height - the height of the rectangle\n\t\t *     + left - left offset of the selection\n\t\t *     + right - right offset of the selection\n\t\t *     + top - top offset of the selection\n\t\t *     + width - the width of the rectangle\n\t\t *\n\t\t * If there is no native selection, the objects will be filled with 0.\n\t\t */\n\t\tgetClientRectsRegion() {\n\t\t\tconst selection = this.getSelection();\n\t\t\tconst nativeSelection = selection.getNative();\n\n\t\t\tconst defaultRect = {\n\t\t\t\tbottom: 0,\n\t\t\t\theight: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\twidth: 0,\n\t\t\t};\n\n\t\t\tlet region = {\n\t\t\t\tbottom: 0,\n\t\t\t\tendRect: defaultRect,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tstartRect: defaultRect,\n\t\t\t};\n\n\t\t\tif (!nativeSelection) {\n\t\t\t\treturn region;\n\t\t\t}\n\n\t\t\tlet bottom = 0;\n\t\t\tlet clientRects;\n\t\t\tlet left = Infinity;\n\t\t\tlet right = -Infinity;\n\t\t\tlet top = Infinity;\n\n\t\t\tif (nativeSelection.createRange) {\n\t\t\t\tclientRects = nativeSelection.createRange().getClientRects();\n\t\t\t} else {\n\t\t\t\tclientRects =\n\t\t\t\t\tnativeSelection.rangeCount > 0\n\t\t\t\t\t\t? nativeSelection.getRangeAt(0).getClientRects()\n\t\t\t\t\t\t: [];\n\t\t\t}\n\n\t\t\tif (clientRects.length === 0) {\n\t\t\t\tregion = this.getCaretRegion();\n\t\t\t} else {\n\t\t\t\tfor (let i = 0, length = clientRects.length; i < length; i++) {\n\t\t\t\t\tconst item = clientRects[i];\n\n\t\t\t\t\tif (item.left < left) {\n\t\t\t\t\t\tleft = item.left;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.right > right) {\n\t\t\t\t\t\tright = item.right;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.top < top) {\n\t\t\t\t\t\ttop = item.top;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.bottom > bottom) {\n\t\t\t\t\t\tbottom = item.bottom;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst scrollPos = new CKEDITOR.dom.window(\n\t\t\t\t\twindow\n\t\t\t\t).getScrollPosition();\n\n\t\t\t\tregion.bottom = scrollPos.y + bottom;\n\t\t\t\tregion.left = scrollPos.x + left;\n\t\t\t\tregion.right = scrollPos.x + right;\n\t\t\t\tregion.top = scrollPos.y + top;\n\n\t\t\t\tif (clientRects.length) {\n\t\t\t\t\tconst endRect = clientRects[clientRects.length - 1];\n\t\t\t\t\tconst startRect = clientRects[0];\n\n\t\t\t\t\tregion.endRect = {\n\t\t\t\t\t\tbottom: scrollPos.y + endRect.bottom,\n\t\t\t\t\t\theight: endRect.height,\n\t\t\t\t\t\tleft: scrollPos.x + endRect.left,\n\t\t\t\t\t\tright: scrollPos.x + endRect.right,\n\t\t\t\t\t\ttop: scrollPos.y + endRect.top,\n\t\t\t\t\t\twidth: endRect.width,\n\t\t\t\t\t};\n\n\t\t\t\t\tregion.startRect = {\n\t\t\t\t\t\tbottom: scrollPos.y + startRect.bottom,\n\t\t\t\t\t\theight: startRect.height,\n\t\t\t\t\t\tleft: scrollPos.x + startRect.left,\n\t\t\t\t\t\tright: scrollPos.x + startRect.right,\n\t\t\t\t\t\ttop: scrollPos.y + startRect.top,\n\t\t\t\t\t\twidth: startRect.width,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn region;\n\t\t},\n\n\t\t/**\n\t\t * Retrieves the direction of the selection. The direction is from top to bottom or from bottom to top.\n\t\t * For IE < 9 it is not possible, so the direction for these browsers will be always CKEDITOR.SELECTION_TOP_TO_BOTTOM.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getSelectionDirection\n\t\t * @return {Number} Returns a number which represents selection direction. It might be one of these:\n\t\t * - CKEDITOR.SELECTION_TOP_TO_BOTTOM;\n\t\t * - CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t */\n\t\tgetSelectionDirection() {\n\t\t\tlet direction = CKEDITOR.SELECTION_TOP_TO_BOTTOM;\n\t\t\tconst selection = this.getSelection();\n\t\t\tconst nativeSelection = selection.getNative();\n\n\t\t\tif (!nativeSelection) {\n\t\t\t\treturn direction;\n\t\t\t}\n\n\t\t\tlet anchorNode;\n\n\t\t\tif (\n\t\t\t\t(anchorNode = nativeSelection.anchorNode) &&\n\t\t\t\tanchorNode.compareDocumentPosition\n\t\t\t) {\n\t\t\t\tconst position = anchorNode.compareDocumentPosition(\n\t\t\t\t\tnativeSelection.focusNode\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\t(!position &&\n\t\t\t\t\t\tnativeSelection.anchorOffset >\n\t\t\t\t\t\t\tnativeSelection.focusOffset) ||\n\t\t\t\t\tposition === Node.DOCUMENT_POSITION_PRECEDING\n\t\t\t\t) {\n\t\t\t\t\tdirection = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn direction;\n\t\t},\n\t};\n\n\tCKEDITOR.plugins.add('ae_selectionregion', {\n\t\tinit(editor) {\n\t\t\tlet attr;\n\t\t\tconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\t\t\tfor (attr in SelectionRegion.prototype) {\n\t\t\t\tif (\n\t\t\t\t\thasOwnProperty.call(SelectionRegion.prototype, attr) &&\n\t\t\t\t\ttypeof editor[attr] === 'undefined'\n\t\t\t\t) {\n\t\t\t\t\teditor[attr] = SelectionRegion.prototype[attr];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst IE_NON_DIRECTLY_EDITABLE_ELEMENT = {\n\ttable: 1,\n\tcol: 1,\n\tcolgroup: 1,\n\ttbody: 1,\n\ttd: 1,\n\ttfoot: 1,\n\tth: 1,\n\tthead: 1,\n\ttr: 1,\n};\n\n/**\n * Table class utility. Provides methods for create, delete and update tables.\n *\n * @class CKEDITOR.Table\n * @constructor\n * @param {Object} editor The CKEditor instance.\n */\n\nfunction Table(editor) {\n\tthis._editor = editor;\n}\n\nTable.HEADING_BOTH = 'Both';\nTable.HEADING_COL = 'Column';\nTable.HEADING_NONE = 'None';\nTable.HEADING_ROW = 'Row';\n\nTable.prototype = {\n\tconstructor: Table,\n\n\t/**\n\t * Creates a table.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method create\n\t * @param {Object} config Table configuration object\n\t * @return {Object} The created table\n\t */\n\tcreate(config) {\n\t\tconst editor = this._editor;\n\t\tconst table = this._createElement('table');\n\n\t\tconfig = config || {};\n\n\t\t// Generate the rows and cols.\n\t\tconst tbody = table.append(this._createElement('tbody'));\n\t\tconst rows = config.rows || 1;\n\t\tconst cols = config.cols || 1;\n\n\t\tfor (let i = 0; i < rows; i++) {\n\t\t\tconst row = tbody.append(this._createElement('tr'));\n\t\t\tfor (let j = 0; j < cols; j++) {\n\t\t\t\tconst cell = row.append(this._createElement('td'));\n\n\t\t\t\tcell.appendBogus();\n\t\t\t}\n\t\t}\n\n\t\tthis.setAttributes(table, config.attrs);\n\t\tthis.setHeading(table, config.heading);\n\n\t\t// Insert the table element if we're creating one.\n\t\teditor.insertElement(table);\n\n\t\tconst firstCell = new CKEDITOR.dom.element(table.$.rows[0].cells[0]);\n\t\tconst range = editor.createRange();\n\t\trange.moveToPosition(firstCell, CKEDITOR.POSITION_AFTER_START);\n\t\trange.select();\n\n\t\treturn table;\n\t},\n\n\t/**\n\t * Retrieves a table from the current selection.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method getFromSelection\n\t * @return {CKEDITOR.dom.element} The retrieved table or null if not found.\n\t */\n\tgetFromSelection() {\n\t\tlet table;\n\t\tconst selection = this._editor.getSelection();\n\t\tconst selected = selection.getSelectedElement();\n\n\t\tif (selected && selected.is('table')) {\n\t\t\ttable = selected;\n\t\t} else {\n\t\t\tconst ranges = selection.getRanges();\n\n\t\t\tif (ranges.length > 0) {\n\t\t\t\t// Webkit could report the following range on cell selection (#4948):\n\t\t\t\t// <table><tr><td>[&nbsp;</td></tr></table>]\n\n\t\t\t\t/* istanbul ignore else */\n\t\t\t\tif (CKEDITOR.env.webkit) {\n\t\t\t\t\tranges[0].shrink(CKEDITOR.NODE_ELEMENT);\n\t\t\t\t}\n\n\t\t\t\ttable = this._editor\n\t\t\t\t\t.elementPath(ranges[0].getCommonAncestor(true))\n\t\t\t\t\t.contains('table', 1);\n\t\t\t}\n\t\t}\n\n\t\treturn table;\n\t},\n\n\t/**\n\t * Checks if a given table can be considered as editable. This method\n\t * workarounds a limitation of IE where for some elements (like table),\n\t * `isContentEditable` returns always false. This is because IE does not support\n\t * `contenteditable` on such elements. However, despite such elements\n\t * cannot be set as content editable directly, a content editable SPAN,\n\t * or DIV element can be placed inside the individual table cells.\n\t * See https://msdn.microsoft.com/en-us/library/ms537837%28v=VS.85%29.aspx\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method isEditable\n\t * @param {CKEDITOR.dom.element} el The table element to test if editable\n\t * @return {Boolean}\n\t */\n\tisEditable(el) {\n\t\tif (!CKEDITOR.env.ie || !el.is(IE_NON_DIRECTLY_EDITABLE_ELEMENT)) {\n\t\t\treturn !el.isReadOnly();\n\t\t}\n\n\t\tif (el.hasAttribute('contenteditable')) {\n\t\t\treturn el.getAttribute('contenteditable') !== 'false';\n\t\t}\n\n\t\treturn this.isEditable(el.getParent());\n\t},\n\n\t/**\n\t * Returns which heading style is set for the given table.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method getHeading\n\t * @param {CKEDITOR.dom.element} table The table to gather the heading from. If null, it will be retrieved from the current selection.\n\t * @return {String} The heading of the table. Expected values are `CKEDITOR.Table.NONE`, `CKEDITOR.Table.ROW`, `CKEDITOR.Table.COL` and `CKEDITOR.Table.BOTH`.\n\t */\n\tgetHeading(table) {\n\t\ttable = table || this.getFromSelection();\n\n\t\tif (!table) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst rowHeadingSettings = table.$.tHead !== null;\n\n\t\tlet colHeadingSettings = true;\n\n\t\t// Check if all of the first cells in every row are TH\n\t\tfor (let row = 0; row < table.$.rows.length; row++) {\n\t\t\t// If just one cell isn't a TH then it isn't a header column\n\t\t\tconst cell = table.$.rows[row].cells[0];\n\n\t\t\tif (cell && cell.nodeName.toLowerCase() !== 'th') {\n\t\t\t\tcolHeadingSettings = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet headingSettings = Table.HEADING_NONE;\n\n\t\tif (rowHeadingSettings) {\n\t\t\theadingSettings = Table.HEADING_ROW;\n\t\t}\n\n\t\tif (colHeadingSettings) {\n\t\t\theadingSettings =\n\t\t\t\theadingSettings === Table.HEADING_ROW\n\t\t\t\t\t? Table.HEADING_BOTH\n\t\t\t\t\t: Table.HEADING_COL;\n\t\t}\n\n\t\treturn headingSettings;\n\t},\n\n\t/**\n\t * Removes a table from the editor.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method remove\n\t * @param {CKEDITOR.dom.element} table The table element which table style should be removed.\n\t */\n\tremove(table) {\n\t\tconst editor = this._editor;\n\n\t\tif (table) {\n\t\t\ttable.remove();\n\t\t} else {\n\t\t\ttable = editor.elementPath().contains('table', 1);\n\n\t\t\tif (table) {\n\t\t\t\t// If the table's parent has only one child remove it as well (unless it's a table cell, or the editable element) (#5416, #6289, #12110)\n\t\t\t\tconst parent = table.getParent();\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\tif (\n\t\t\t\t\tparent.getChildCount() === 1 &&\n\t\t\t\t\t!parent.is('td', 'th') &&\n\t\t\t\t\t!parent.equals(editable)\n\t\t\t\t) {\n\t\t\t\t\ttable = parent;\n\t\t\t\t}\n\n\t\t\t\tconst range = editor.createRange();\n\t\t\t\trange.moveToPosition(table, CKEDITOR.POSITION_BEFORE_START);\n\t\t\t\ttable.remove();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Assigns provided attributes to a table.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method setAttributes\n\t * @param {Object} table The table to which the attributes should be assigned\n\t * @param {Object} attrs The attributes which have to be assigned to the table\n\t */\n\tsetAttributes(table, attrs) {\n\t\tif (attrs) {\n\t\t\tObject.keys(attrs).forEach(attr => {\n\t\t\t\ttable.setAttribute(attr, attrs[attr]);\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Sets the appropriate table heading style to a table.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method setHeading\n\t * @param {CKEDITOR.dom.element} table The table element to which the heading should be set. If null, it will be retrieved from the current selection.\n\t * @param {String} heading The table heading to be set. Accepted values are: `CKEDITOR.Table.NONE`, `CKEDITOR.Table.ROW`, `CKEDITOR.Table.COL` and `CKEDITOR.Table.BOTH`.\n\t */\n\tsetHeading(table, heading) {\n\t\ttable = table || this.getFromSelection();\n\n\t\tlet i;\n\t\tlet newCell;\n\t\tlet tableHead;\n\t\tconst tableBody = table.getElementsByTag('tbody').getItem(0);\n\n\t\tlet tableHeading = this.getHeading(table);\n\t\tconst hadColHeading =\n\t\t\ttableHeading === Table.HEADING_COL ||\n\t\t\ttableHeading === Table.HEADING_BOTH;\n\n\t\tconst needColHeading =\n\t\t\theading === Table.HEADING_COL || heading === Table.HEADING_BOTH;\n\t\tconst needRowHeading =\n\t\t\theading === Table.HEADING_ROW || heading === Table.HEADING_BOTH;\n\n\t\t// If we need row heading and don't have a <thead> element yet, move the\n\t\t// first row of the table to the head and convert the nodes to <th> ones.\n\t\tif (!table.$.tHead && needRowHeading) {\n\t\t\tconst tableFirstRow = tableBody.getElementsByTag('tr').getItem(0);\n\t\t\tconst tableFirstRowChildCount = tableFirstRow.getChildCount();\n\n\t\t\t// Change TD to TH:\n\t\t\tfor (i = 0; i < tableFirstRowChildCount; i++) {\n\t\t\t\tconst cell = tableFirstRow.getChild(i);\n\n\t\t\t\t// Skip bookmark nodes. (#6155)\n\t\t\t\tif (\n\t\t\t\t\tcell.type === CKEDITOR.NODE_ELEMENT &&\n\t\t\t\t\t!cell.data('cke-bookmark')\n\t\t\t\t) {\n\t\t\t\t\tcell.renameNode('th');\n\t\t\t\t\tcell.setAttribute('scope', 'col');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttableHead = this._createElement(table.$.createTHead());\n\t\t\ttableHead.append(tableFirstRow.remove());\n\t\t}\n\n\t\t// If we don't need row heading and we have a <thead> element, move the\n\t\t// row out of there and into the <tbody> element.\n\t\tif (table.$.tHead !== null && !needRowHeading) {\n\t\t\t// Move the row out of the THead and put it in the TBody:\n\t\t\ttableHead = this._createElement(table.$.tHead);\n\n\t\t\tconst previousFirstRow = tableBody.getFirst();\n\n\t\t\twhile (tableHead.getChildCount() > 0) {\n\t\t\t\tconst newFirstRow = tableHead.getFirst();\n\t\t\t\tconst newFirstRowChildCount = newFirstRow.getChildCount();\n\n\t\t\t\tfor (i = 0; i < newFirstRowChildCount; i++) {\n\t\t\t\t\tnewCell = newFirstRow.getChild(i);\n\n\t\t\t\t\tif (newCell.type === CKEDITOR.NODE_ELEMENT) {\n\t\t\t\t\t\tnewCell.renameNode('td');\n\t\t\t\t\t\tnewCell.removeAttribute('scope');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnewFirstRow.insertBefore(previousFirstRow);\n\t\t\t}\n\n\t\t\ttableHead.remove();\n\t\t}\n\n\t\ttableHeading = this.getHeading(table);\n\t\tconst hasColHeading =\n\t\t\ttableHeading === Table.HEADING_COL ||\n\t\t\ttableHeading === Table.HEADING_BOTH;\n\n\t\t// If we need column heading and the table doesn't have it, convert every first cell in\n\t\t// every row into a `<th scope=\"row\">` element.\n\t\tif (!hasColHeading && needColHeading) {\n\t\t\tfor (i = 0; i < table.$.rows.length; i++) {\n\t\t\t\tif (table.$.rows[i].cells[0].nodeName.toLowerCase() !== 'th') {\n\t\t\t\t\tnewCell = new CKEDITOR.dom.element(\n\t\t\t\t\t\ttable.$.rows[i].cells[0]\n\t\t\t\t\t);\n\t\t\t\t\tnewCell.renameNode('th');\n\t\t\t\t\tnewCell.setAttribute('scope', 'row');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we don't need column heading but the table has it, convert every first cell in every\n\t\t// row back into a `<td>` element.\n\t\tif (hadColHeading && !needColHeading) {\n\t\t\tfor (i = 0; i < table.$.rows.length; i++) {\n\t\t\t\tconst row = new CKEDITOR.dom.element(table.$.rows[i]);\n\n\t\t\t\tif (row.getParent().getName() === 'tbody') {\n\t\t\t\t\tnewCell = new CKEDITOR.dom.element(row.$.cells[0]);\n\t\t\t\t\tnewCell.renameNode('td');\n\t\t\t\t\tnewCell.removeAttribute('scope');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Creates a new CKEDITOR.dom.element using the passed tag name.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @protected\n\t * @method _createElement\n\t * @param {String} name The tag name from which an element should be created\n\t * @return {CKEDITOR.dom.element} Instance of CKEDITOR DOM element class\n\t */\n\t_createElement(name) {\n\t\treturn new CKEDITOR.dom.element(name, this._editor.document);\n\t},\n};\n\nCKEDITOR.on('instanceReady', event => {\n\tconst headingCommands = [\n\t\tTable.HEADING_NONE,\n\t\tTable.HEADING_ROW,\n\t\tTable.HEADING_COL,\n\t\tTable.HEADING_BOTH,\n\t];\n\n\tconst tableUtils = new Table(event.editor);\n\n\theadingCommands.forEach(heading => {\n\t\tevent.editor.addCommand('tableHeading' + heading, {\n\t\t\texec(_editor) {\n\t\t\t\ttableUtils.setHeading(null, heading);\n\t\t\t},\n\t\t});\n\t});\n});\n\nCKEDITOR.Table = CKEDITOR.Table || Table;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * CKEDITOR.tools class utility which adds additional methods to those of CKEditor.\n *\n * @class CKEDITOR.tools\n */\n\n/**\n * Sends a request using the JSONP technique.\n *\n * @memberof CKEDITOR.tools\n * @method jsonp\n * @param {CKEDITOR.template} urlTemplate The template of the URL to be requested. All properties passed in `urlParams` can be used, plus a `{callback}`, which represent a JSONP callback, must be defined.\n * @param {Function} callback A function to be called in case of success.\n * @param {Function} errorCallback A function to be called in case of failure.\n * @param {Object} urlParams Parameters to be passed to the `urlTemplate`.\n * @return {Object} An object with the following properties:\n *  - id: the transaction ID\n *  - a `cancel()` method\n * @static\n */\nCKEDITOR.tools.jsonp = function(\n\turlTemplate,\n\turlParams,\n\tcallback,\n\terrorCallback\n) {\n\tconst callbackKey = CKEDITOR.tools.getNextNumber();\n\n\turlParams = urlParams || {};\n\turlParams.callback = 'CKEDITOR._.jsonpCallbacks[' + callbackKey + ']';\n\n\tif (!CKEDITOR._.jsonpCallbacks) {\n\t\tCKEDITOR._.jsonpCallbacks = {};\n\t}\n\n\tCKEDITOR._.jsonpCallbacks[callbackKey] = function(response) {\n\t\tsetTimeout(() => {\n\t\t\tcleanUp();\n\n\t\t\tcallback(response);\n\t\t});\n\t};\n\n\tlet scriptElement = new CKEDITOR.dom.element('script');\n\tscriptElement.setAttribute('src', urlTemplate.output(urlParams));\n\tscriptElement.on('error', () => {\n\t\tcleanUp();\n\n\t\tif (errorCallback) {\n\t\t\terrorCallback();\n\t\t}\n\t});\n\n\tfunction cleanUp() {\n\t\tif (scriptElement) {\n\t\t\tscriptElement.remove();\n\t\t\tdelete CKEDITOR._.jsonpCallbacks[callbackKey];\n\t\t\tscriptElement = null;\n\t\t}\n\t}\n\n\tCKEDITOR.document.getBody().append(scriptElement);\n\n\treturn {\n\t\tcancel: cleanUp,\n\t\tid: callbackKey,\n\t};\n};\n\n/**\n * Returns a new object containing all of the properties of all the supplied\n * objects. The properties from later objects will overwrite those in earlier\n * objects.\n *\n * Passing in a single object will create a shallow copy of it.\n *\n * @memberof CKEDITOR.tools\n * @method merge\n * @param {Object} objects* One or more objects to merge.\n * @return {Object} A new merged object.\n * @static\n */\nCKEDITOR.tools.merge =\n\tCKEDITOR.tools.merge ||\n\tfunction(...args) {\n\t\tconst result = {};\n\n\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\tconst obj = args[i];\n\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tresult[key] = obj[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n/**\n * Simulates event on a DOM element.\n *\n * @memberof CKEDITOR.tools\n * @method simulate\n * @param {DOMElement} element The element on which the event shoud be simualted.\n * @param {String} event The name of the event which have to be simulated.\n * @static\n */\nCKEDITOR.tools.simulate = function(element, event) {\n\tconst eventInstance = document.createEvent('Events');\n\teventInstance.initEvent(event, true, false);\n\telement.dispatchEvent(eventInstance);\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_uicore')) {\n\t/**\n\t * UICore class which will handle user interactions with the editor. These interactions\n\t * might be triggered via mouse, keyboard or touch devices. The class fill fire an event via\n\t * CKEditor's event system - \"editorInteraction\". The UI may listen to this event and\n\t * execute some actions - for example to show/hide toolbars.\n\t *\n\t * By default if user presses the Esc key, 'editorInteraction' event won't be fired. However, this behaviour can be changed\n\t * by setting {{#crossLink \"CKEDITOR.plugins.ae_uicore/allowEsc:attribute\"}}{{/crossLink}} config property in editor's configuration to true.\n\t *\n\t * @class ae_uicore\n\t */\n\n\t/**\n\t * Fired when user interacts somehow with the browser. This may be clicking with the mouse, pressing keyboard button,\n\t * or touching screen. This even will be not fired after each interaction. It will be debounced. By default the timeout\n\t * is 50ms. This value can be overwritten via {{#crossLink \"CKEDITOR.plugins.ae_uicore/timeout:attribute\"}}{{/crossLink}}\n\t * property of editor's configuration, like: editor.config.uicore.timeout = 100\n\t *\n\t * @memberof ae_uicore\n\t * @event ae_uicore#editorInteraction\n\t * @param {Object} data An object which contains the following properties:\n\t * - nativeEvent - The event as received from CKEditor.\n\t * - selectionData - The data, returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t */\n\n\t/**\n\t * Fired by UI elements like Toolbars or Buttons when their state changes. The listener updates the live region with the provided data.\n\t *\n\t * @memberof ae_uicore\n\t * @event ae_uicore#ariaUpdate\n\t * @param {Object} data An object which contains the following properties:\n\t * - message - The provided message from the UI element.\n\t */\n\n\t/**\n\t * If set to true, the editor will still fire {{#crossLink \"CKEDITOR.plugins.ae_uicore/editorInteraction:event\"}}{{/crossLink}} event,\n\t * if user presses Esc key.\n\t *\n\t * @memberof ae_uicore\n\t * @attribute allowEsc\n\t * @default false\n\t * @type Boolean\n\t */\n\n\t/**\n\t * Specifies the default timeout after which the {{#crossLink \"CKEDITOR.plugins.ae_uicore/editorInteraction:event\"}}{{/crossLink}} event\n\t * will be fired.\n\t *\n\t * @memberof ae_uicore\n\t * @attribute timeout\n\t * @default 50 (ms)\n\t * @type Number\n\t */\n\n\tCKEDITOR.plugins.add('ae_uicore', {\n\t\t/**\n\t\t * Initializer lifecycle implementation for the UICore plugin.\n\t\t *\n\t\t * @memberof ae_uicore\n\t\t * @method init\n\t\t * @param {Object} editor The current CKEditor instance.\n\t\t * @protected\n\t\t */\n\t\tinit(editor) {\n\t\t\tlet ariaState = [];\n\n\t\t\tconst ariaElement = this._createAriaElement(editor.id);\n\n\t\t\tconst uiTasksTimeout = editor.config.uicore\n\t\t\t\t? editor.config.uicore.timeout\n\t\t\t\t: 50;\n\n\t\t\tconst handleUI = CKEDITOR.tools.debounce(event => {\n\t\t\t\tariaState = [];\n\n\t\t\t\tif (\n\t\t\t\t\tevent.name !== 'keyup' ||\n\t\t\t\t\tevent.data.$.keyCode !== 27 ||\n\t\t\t\t\teditor.config.allowEsc\n\t\t\t\t) {\n\t\t\t\t\tconst selectionData = editor.getSelectionData();\n\n\t\t\t\t\tif (selectionData) {\n\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\tnativeEvent: event.data.$,\n\t\t\t\t\t\t\tselectionData,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, uiTasksTimeout);\n\n\t\t\tconst handleAria = CKEDITOR.tools.debounce(_event => {\n\t\t\t\tariaElement.innerHTML = ariaState.join('. ');\n\t\t\t}, uiTasksTimeout);\n\n\t\t\tconst handleMouseLeave = CKEDITOR.tools.debounce(event => {\n\t\t\t\tconst aeUINodes = document.querySelectorAll('.ae-ui');\n\n\t\t\t\tlet found;\n\n\t\t\t\tfor (let i = 0; i < aeUINodes.length; i++) {\n\t\t\t\t\tif (aeUINodes[i].contains(event.data.$.relatedTarget)) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!found) {\n\t\t\t\t\thandleUI(event);\n\t\t\t\t}\n\t\t\t}, uiTasksTimeout);\n\n\t\t\teditor.on('ariaUpdate', event => {\n\t\t\t\t// handleAria is debounced function, so if it is being called multiple times, it will\n\t\t\t\t// be canceled until some time passes.\n\t\t\t\t// For that reason here we explicitly append the current message to the list of messages\n\t\t\t\t// and call handleAria. Since it is debounced, when some timeout passes,\n\t\t\t\t// all the messages will be applied to the live region and not only the last one.\n\n\t\t\t\tariaState.push(event.data.message);\n\n\t\t\t\thandleAria();\n\t\t\t});\n\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\tconst focusHandler = editable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'focus',\n\t\t\t\t\tevent => {\n\t\t\t\t\t\tfocusHandler.removeListener();\n\n\t\t\t\t\t\teditable.attachListener(editable, 'keyup', handleUI);\n\t\t\t\t\t\teditable.attachListener(editable, 'mouseup', handleUI);\n\t\t\t\t\t\teditable.attachListener(\n\t\t\t\t\t\t\teditable,\n\t\t\t\t\t\t\t'mouseleave',\n\t\t\t\t\t\t\thandleMouseLeave\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\thandleUI(event);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\n\t\t\teditor.on('destroy', _event => {\n\t\t\t\tariaElement.parentNode.removeChild(ariaElement);\n\n\t\t\t\thandleUI.detach();\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Creates and applies an HTML element to the body of the document which will contain ARIA messages.\n\t\t *\n\t\t * @memberof ae_uicore\n\t\t * @method _createAriaElement\n\t\t * @param {String} id The provided id of the element. It will be used as prefix for the final element Id.\n\t\t * @protected\n\t\t * @return {HTMLElement} The created and applied to DOM element.\n\t\t */\n\t\t_createAriaElement(id) {\n\t\t\tconst statusElement = document.createElement('div');\n\n\t\t\tstatusElement.className = 'ae-sr-only';\n\n\t\t\tstatusElement.setAttribute('aria-live', 'polite');\n\t\t\tstatusElement.setAttribute('role', 'status');\n\t\t\tstatusElement.setAttribute('id', id + 'LiveRegion');\n\n\t\t\tdocument.body.appendChild(statusElement);\n\n\t\t\treturn statusElement;\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst isIE = CKEDITOR.env.ie;\n\nif (!CKEDITOR.plugins.get('ae_addimages')) {\n\t/**\n\t * CKEditor plugin which allows Drag&Drop of images directly into the editable area. The image will be encoded\n\t * as Data URI. An event `beforeImageAdd` will be fired with the list of dropped images. If any of the listeners\n\t * returns `false` or cancels the event, the images won't be added to the content. Otherwise,\n\t * an event `imageAdd` will be fired with the inserted element into the editable area.\n\t *\n\t * @class CKEDITOR.plugins.ae_addimages\n\t */\n\n\t/**\n\t * Fired before adding images to the editor.\n\t *\n\t * @event CKEDITOR.plugins.ae_addimages#beforeImageAdd\n\t * @instance\n\t * @memberof CKEDITOR.plugins.ae_addimages\n\t * @param {Array} imageFiles Array of image files\n\t */\n\n\t/**\n\t * Fired when an image is being added to the editor successfully.\n\t *\n\t * @event CKEDITOR.plugins.ae_addimages#imageAdd\n\t * @instance\n\t * @memberof CKEDITOR.plugins.ae_addimages\n\t * @param {CKEDITOR.dom.element} el The created image with src as Data URI\n\t * @param {File} file The image file\n\t */\n\n\tCKEDITOR.plugins.add('ae_addimages', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers a 'dragenter', 'dragover', 'drop' and `paste` events on the editing area.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'dragenter',\n\t\t\t\t\tthis._onDragEnter,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'dragover',\n\t\t\t\t\tthis._onDragOver,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'drop',\n\t\t\t\t\tthis._onDragDrop,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'paste',\n\t\t\t\t\tthis._onPaste,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Accepts an array of dropped files to the editor. Then, it filters the images and sends them for further\n\t\t * processing to {{#crossLink \"CKEDITOR.plugins.ae_addimages/_processFile:method\"}}{{/crossLink}}\n\t\t *\n\t\t * @fires CKEDITOR.plugins.ae_addimages#beforeImageAdd\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _handleFiles\n\t\t * @param {Array} files Array of dropped files. Only the images from this list will be processed.\n\t\t * @param {Object} editor The current editor instance\n\t\t * @protected\n\t\t */\n\t\t_handleFiles(files, editor) {\n\t\t\tlet file;\n\t\t\tlet i;\n\n\t\t\tconst imageFiles = [];\n\n\t\t\tfor (i = 0; i < files.length; i++) {\n\t\t\t\tfile = files[i];\n\n\t\t\t\tif (file.type.indexOf('image') === 0) {\n\t\t\t\t\timageFiles.push(file);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = editor.fire('beforeImageAdd', {\n\t\t\t\timageFiles,\n\t\t\t});\n\n\t\t\tif (result) {\n\t\t\t\tfor (i = 0; i < imageFiles.length; i++) {\n\t\t\t\t\tfile = imageFiles[i];\n\n\t\t\t\t\tthis._processFile(file, editor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t/**\n\t\t * Handles drag drop event. The function will create a selection from the current\n\t\t * point and will send a list of files to be processed to\n\t\t * {{#crossLink \"CKEDITOR.plugins.ae_addimages/_handleFiles:method\"}}{{/crossLink}} method.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _onDragDrop\n\t\t * @param {CKEDITOR.dom.event} event dragdrop event, as received natively from CKEditor\n\t\t * @protected\n\t\t */\n\t\t_onDragDrop(event) {\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tconst transferFiles = nativeEvent.dataTransfer.files;\n\n\t\t\tif (transferFiles.length > 0) {\n\t\t\t\tnew CKEDITOR.dom.event(nativeEvent).preventDefault();\n\n\t\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\t\tevent.listenerData.editor.createSelectionFromPoint(\n\t\t\t\t\tnativeEvent.clientX,\n\t\t\t\t\tnativeEvent.clientY\n\t\t\t\t);\n\n\t\t\t\tthis._handleFiles(transferFiles, editor);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handles drag enter event. In case of IE, this function will prevent the event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _onDragEnter\n\t\t * @param {DOM event} event dragenter event, as received natively from CKEditor\n\t\t * @protected\n\t\t */\n\t\t_onDragEnter(event) {\n\t\t\tif (isIE) {\n\t\t\t\tthis._preventEvent(event);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handles drag over event. In case of IE, this function will prevent the event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _onDragOver\n\t\t * @param {DOM event} event dragover event, as received natively from CKEditor\n\t\t * @protected\n\t\t */\n\t\t_onDragOver(event) {\n\t\t\tif (isIE) {\n\t\t\t\tthis._preventEvent(event);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Checks if the pasted data is image and passes it to\n\t\t * {{#crossLink \"CKEDITOR.plugins.ae_addimages/_processFile:method\"}}{{/crossLink}} for processing.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _onPaste\n\t\t * @param {CKEDITOR.dom.event} event A `paste` event, as received natively from CKEditor\n\t\t * @protected\n\t\t */\n\t\t_onPaste(event) {\n\t\t\tif (\n\t\t\t\tevent.data &&\n\t\t\t\tevent.data.$ &&\n\t\t\t\tevent.data.$.clipboardData &&\n\t\t\t\tevent.data.$.clipboardData.items &&\n\t\t\t\tevent.data.$.clipboardData.items.length > 0\n\t\t\t) {\n\t\t\t\tconst pastedData = event.data.$.clipboardData.items[0];\n\n\t\t\t\tif (pastedData.type.indexOf('image') === 0) {\n\t\t\t\t\tconst imageFile = pastedData.getAsFile();\n\n\t\t\t\t\tthis._processFile(imageFile, event.listenerData.editor);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Prevents a native event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _preventEvent\n\t\t * @param {DOM event} event The event to be prevented.\n\t\t * @protected\n\t\t */\n\t\t_preventEvent(event) {\n\t\t\tevent = new CKEDITOR.dom.event(event.data.$);\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t},\n\n\t\t/**\n\t\t * Processes an image file. The function creates an img element and sets as source\n\t\t * a Data URI, then fires an 'imageAdd' event via CKEditor's event system.\n\t\t *\n\t\t * @fires CKEDITOR.plugins.ae_addimages#imageAdd\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _preventEvent\n\t\t * @param {DOM event} event The event to be prevented.\n\t\t * @protected\n\t\t */\n\t\t_processFile(file, editor) {\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.addEventListener('loadend', () => {\n\t\t\t\tconst bin = reader.result;\n\n\t\t\t\tconst el = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t\t'<img src=\"' + bin + '\">'\n\t\t\t\t);\n\n\t\t\t\teditor.insertElement(el);\n\n\t\t\t\tconst imageData = {\n\t\t\t\t\tel,\n\t\t\t\t\tfile,\n\t\t\t\t};\n\n\t\t\t\teditor.fire('imageAdd', imageData);\n\t\t\t});\n\n\t\t\treader.readAsDataURL(file);\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_autolink')) {\n\t// Disables the auto URL detection feature in IE, their lacks functionality:\n\t// They convert the links only on space. We do on space, comma, semicolon and Enter.\n\tif (/MSIE ([^;]*)|Trident.*; rv:([0-9.]+)/.test(navigator.userAgent)) {\n\t\tdocument.execCommand('AutoUrlDetect', false, false);\n\t}\n\n\tconst KEY_BACK = 8;\n\n\tconst KEY_COMMA = 188;\n\n\tconst KEY_ENTER = 13;\n\n\tconst KEY_SEMICOLON = 186;\n\n\tconst KEY_SPACE = 32;\n\n\tconst DELIMITERS = [KEY_COMMA, KEY_ENTER, KEY_SEMICOLON, KEY_SPACE];\n\n\tconst REGEX_LAST_WORD = /[^\\s]+/gim;\n\n\t// Seen at https://stackoverflow.com/a/5717133/2103996\n\tconst REGEX_URL =\n\t\t'^(https?:\\\\/\\\\/)?' + // protocol\n\t\t'((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n\t\t'((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n\t\t'(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n\t\t'(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n\t\t'(\\\\#[-a-z\\\\d_]*)?$';\n\n\tconst REGEX_EMAIL = /[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}/i;\n\n\t/**\n\t * CKEditor plugin which automatically generates links when user types text which looks like URL.\n\t *\n\t * @class CKEDITOR.plugins.ae_autolink\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_autolink', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers the `keyup` event on the editing area.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'keyup',\n\t\t\t\t\tthis._onKeyUp,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\n\t\t\teditor.on('paste', event => {\n\t\t\t\tif (event.data.method === 'paste') {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.data.dataValue.indexOf('<') > -1 ||\n\t\t\t\t\t\tevent.data.dataValue.indexOf('&lt;') > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tevent.data.dataValue.indexOf('<u><font color=\"') >\n\t\t\t\t\t\t\t-1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tevent.data.dataValue = event.data.dataValue.replace(\n\t\t\t\t\t\t\t\t/<u><font color=\"#(.*?)\">|<\\/font><\\/u>/g,\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst instance = this;\n\n\t\t\t\t\tevent.data.dataValue = event.data.dataValue.replace(\n\t\t\t\t\t\tRegExp(REGEX_URL, 'gim'),\n\t\t\t\t\t\turl => {\n\t\t\t\t\t\t\tif (instance._isValidURL(url)) {\n\t\t\t\t\t\t\t\tif (instance._isValidEmail(url)) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t'<a href=\"mailto:' +\n\t\t\t\t\t\t\t\t\t\turl +\n\t\t\t\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t\t\t\turl +\n\t\t\t\t\t\t\t\t\t\t'</a>'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t'<a href=\"' + url + '\">' + url + '</a>'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Retrieves the last word introduced by the user. Reads from the current\n\t\t * caret position backwards until it finds the first white space.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _getLastWord\n\t\t * @protected\n\t\t * @return {String} The last word introduced by user\n\t\t */\n\t\t_getLastWord(editor) {\n\t\t\tconst range = editor.getSelection().getRanges()[0];\n\n\t\t\tif (!range) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst offset = range.startOffset;\n\n\t\t\tlet previousText = '';\n\n\t\t\t// The user pressed Enter, so we have to look on the previous node\n\t\t\tif (this._currentKeyCode === KEY_ENTER) {\n\t\t\t\tlet previousNode = range.startContainer.getPrevious();\n\n\t\t\t\tlet lastChild;\n\n\t\t\t\tif (previousNode) {\n\t\t\t\t\t// If previous node is a SPACE, (it does not have 'getLast' method),\n\t\t\t\t\t// ignore it and find the previous text node\n\t\t\t\t\twhile (!previousNode.getLast) {\n\t\t\t\t\t\tpreviousNode = previousNode.getPrevious();\n\t\t\t\t\t}\n\n\t\t\t\t\tlastChild = previousNode.getLast();\n\n\t\t\t\t\t// Depending on the browser, the last child node may be a <BR>\n\t\t\t\t\t// (which does not have 'getText' method),\n\t\t\t\t\t// so ignore it and find the previous text node\n\t\t\t\t\twhile (lastChild && !lastChild.getText()) {\n\t\t\t\t\t\tlastChild = lastChild.getPrevious();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check if the lastChild is already a link\n\t\t\t\tif (!(lastChild && lastChild.$.href)) {\n\t\t\t\t\tthis._startContainer = lastChild;\n\t\t\t\t\tpreviousText = lastChild ? lastChild.getText() : '';\n\t\t\t\t\tthis._offset = previousText.length;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._startContainer = range.startContainer;\n\n\t\t\t\t// Last character is the delimiter, ignore it\n\t\t\t\tpreviousText = this._startContainer\n\t\t\t\t\t.getText()\n\t\t\t\t\t.substring(0, offset - 1);\n\n\t\t\t\tthis._offset = offset - 1;\n\t\t\t}\n\n\t\t\tlet lastWord = '';\n\n\t\t\tconst match = previousText.match(REGEX_LAST_WORD);\n\n\t\t\tif (match) {\n\t\t\t\tlastWord = match.pop();\n\t\t\t}\n\n\t\t\treturn lastWord;\n\t\t},\n\n\t\t/**\n\t\t * Checks if the given link is a valid Email.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method isValidEmail\n\t\t * @param {String} link The email we want to know if it is a valid Email\n\t\t * @protected\n\t\t * @return {Boolean} Returns true if the email is a valid Email, false otherwise\n\t\t */\n\t\t_isValidEmail(email) {\n\t\t\treturn REGEX_EMAIL.test(email);\n\t\t},\n\n\t\t/**\n\t\t * Checks if the given link is a valid URL.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method isValidURL\n\t\t * @param {String} link The link we want to know if it is a valid URL\n\t\t * @protected\n\t\t * @return {Boolean} Returns true if the link is a valid URL, false otherwise\n\t\t */\n\t\t_isValidURL(link) {\n\t\t\treturn RegExp(REGEX_URL, 'i').test(link);\n\t\t},\n\n\t\t/**\n\t\t * Listens to the `keydown` event and if the keycode is `Backspace`, removes the previously\n\t\t * created link.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _onKeyDown\n\t\t * @param {EventFacade} event EventFacade object\n\t\t * @protected\n\t\t */\n\t\t_onKeyDown(event) {\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\tconst editable = editor.editable();\n\n\t\t\teditable.removeListener('keydown', this._onKeyDown);\n\n\t\t\tif (nativeEvent.keyCode === KEY_BACK) {\n\t\t\t\tevent.cancel();\n\t\t\t\tevent.data.preventDefault();\n\n\t\t\t\tthis._removeLink(editor);\n\t\t\t}\n\n\t\t\tthis._ckLink = null;\n\t\t},\n\n\t\t/**\n\t\t * Listens to the `Enter` and `Space` key events in order to check if the last word\n\t\t * introduced by the user should be replaced by a link element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _onKeyUp\n\t\t * @param {EventFacade} event EventFacade object\n\t\t * @protected\n\t\t */\n\t\t_onKeyUp(event) {\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tthis._currentKeyCode = nativeEvent.keyCode;\n\n\t\t\tif (DELIMITERS.indexOf(this._currentKeyCode) !== -1) {\n\t\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\t\tconst lastWord = this._getLastWord(editor);\n\n\t\t\t\tif (this._isValidURL(lastWord)) {\n\t\t\t\t\tthis._replaceContentByLink(editor, lastWord);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Replaces content by a link element.\n\t\t *\n\t\t * @fires CKEDITOR.plugins.ae_autolink#autolinkAdd\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _replaceContentByLink\n\t\t * @param {String} content The text that has to be replaced by an link element\n\t\t * @protected\n\t\t */\n\t\t_replaceContentByLink(editor, content) {\n\t\t\tlet range = editor.createRange();\n\t\t\tconst node = CKEDITOR.dom.element.get(this._startContainer);\n\t\t\tconst offset = this._offset;\n\n\t\t\t// Select the content, so CKEDITOR.Link can properly replace it\n\t\t\trange.setStart(node, offset - content.length);\n\t\t\trange.setEnd(node, offset);\n\t\t\trange.select();\n\n\t\t\tconst ckLink = new CKEDITOR.Link(editor);\n\t\t\tckLink.create(content);\n\t\t\tthis._ckLink = ckLink;\n\n\t\t\tconst linkNode = ckLink.getFromSelection();\n\t\t\teditor.fire('autolinkAdd', linkNode);\n\n\t\t\tthis._subscribeToKeyEvent(editor);\n\n\t\t\t// Now range is on the link and it is selected. We have to\n\t\t\t// return focus to the caret position.\n\t\t\trange = editor.getSelection().getRanges()[0];\n\n\t\t\t// If user pressed `Enter`, get the next editable node at position 0,\n\t\t\t// otherwise set the cursor at the next character of the link (the white space)\n\t\t\tif (this._currentKeyCode === KEY_ENTER) {\n\t\t\t\tconst nextEditableNode = range.getNextEditableNode();\n\n\t\t\t\trange.setStart(nextEditableNode, 0);\n\t\t\t\trange.setEnd(nextEditableNode, 0);\n\t\t\t} else {\n\t\t\t\tconst enclosedNode = range.getEnclosedNode();\n\n\t\t\t\trange.setStart(enclosedNode, 0);\n\t\t\t\trange.setEnd(enclosedNode, 0);\n\t\t\t}\n\n\t\t\trange.select();\n\t\t},\n\n\t\t/**\n\t\t * Fired when a URL is detected in text and converted to a link.\n\t\t *\n\t\t * @event CKEDITOR.plugins.ae_autolink#autolinkAdd\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @param {CKEDITOR.dom.element} el Node of the created link.\n\t\t */\n\n\t\t/**\n\t\t * Removes the created link element, and replaces it by its text.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _removeLink\n\t\t * @protected\n\t\t */\n\t\t_removeLink(editor) {\n\t\t\tconst range = editor.getSelection().getRanges()[0];\n\t\t\tconst caretOffset = range.startOffset;\n\n\t\t\t// Select the link, so CKEDITOR.Link can properly remove it\n\t\t\tconst linkNode =\n\t\t\t\tthis._startContainer.getNext() || this._startContainer;\n\n\t\t\tconst newRange = editor.createRange();\n\t\t\tnewRange.setStart(linkNode, 0);\n\t\t\tnewRange.setEndAfter(linkNode);\n\t\t\tnewRange.select();\n\n\t\t\tthis._ckLink.remove();\n\n\t\t\t// Return focus to the caret position\n\t\t\trange.setEnd(range.startContainer, caretOffset);\n\t\t\trange.setStart(range.startContainer, caretOffset);\n\n\t\t\trange.select();\n\t\t},\n\n\t\t/**\n\t\t * Subscribe to a key event of the editable aria.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _subscribeToKeyEvent\n\t\t * @protected\n\t\t */\n\t\t_subscribeToKeyEvent(editor) {\n\t\t\tconst editable = editor.editable();\n\n\t\t\t// Change the priority of keydown listener - 1 means the highest priority.\n\t\t\t// In Chrome on pressing `Enter` the listener is not being invoked.\n\t\t\t// See http://dev.ckeditor.com/ticket/11861 for more information.\n\t\t\teditable.attachListener(\n\t\t\t\teditable,\n\t\t\t\t'keydown',\n\t\t\t\tthis._onKeyDown,\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\teditor,\n\t\t\t\t},\n\t\t\t\t1\n\t\t\t);\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_autolist')) {\n\tconst KEY_BACK = 8;\n\n\tconst KEY_SPACE = 32;\n\n\tconst DEFAULT_CONFIG = [\n\t\t{\n\t\t\tregex: /^\\*$/,\n\t\t\ttype: 'bulletedlist',\n\t\t},\n\t\t{\n\t\t\tregex: /^1\\.$/,\n\t\t\ttype: 'numberedlist',\n\t\t},\n\t];\n\n\t/**\n\t * CKEditor plugin which automatically generates ordered/unordered list when user types text which looks like a list.\n\t *\n\t * @class CKEDITOR.plugins.ae_autolist\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_autolist', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKeditor plugin lifecycle.\n\t\t * The function registers the `keydown` event on the content editing area.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'keydown',\n\t\t\t\t\tthis._onKeyDown,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Checks for pressing the `Backspace` key in order to undo the list creation.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method _checkForBackspaceAndUndo\n\t\t * @param {Event} event Event object\n\t\t * @protected\n\t\t */\n\t\t_checkForBackspaceAndUndo(event) {\n\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tconst editable = editor.editable();\n\n\t\t\teditable.removeListener('keydown', this._checkForBackspaceAndUndo);\n\n\t\t\tif (nativeEvent.keyCode === KEY_BACK) {\n\t\t\t\teditor.execCommand('undo');\n\t\t\t\teditor.insertHtml(event.listenerData.bullet + '&nbsp;');\n\t\t\t\tevent.data.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Checks current line to find match with MATCHES object to create OL or UL.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method _checkLine\n\t\t * @param {editor} Editor object\n\t\t * @protected\n\t\t * @return {Object|null} Returns an object which contains the detected list config if any\n\t\t */\n\t\t_getListConfig(editor) {\n\t\t\tconst configRegex = editor.config.autolist || DEFAULT_CONFIG;\n\n\t\t\tconst range = editor.getSelection().getRanges()[0];\n\n\t\t\tconst textContainer = range.endContainer.getText();\n\n\t\t\tconst bullet = textContainer.substring(0, range.startOffset);\n\n\t\t\tconst text = textContainer.substring(\n\t\t\t\trange.startOffset,\n\t\t\t\ttextContainer.length\n\t\t\t);\n\n\t\t\tlet index = 0;\n\n\t\t\tconst regexLen = configRegex.length;\n\n\t\t\tlet autolistCfg = null;\n\n\t\t\twhile (!autolistCfg && regexLen > index) {\n\t\t\t\tconst regexItem = configRegex[index];\n\n\t\t\t\tif (regexItem.regex.test(bullet)) {\n\t\t\t\t\tautolistCfg = {\n\t\t\t\t\t\tbullet,\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\ttype: regexItem.type,\n\t\t\t\t\t};\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\treturn autolistCfg;\n\t\t},\n\n\t\t/**\n\t\t * Create list with different types: Bulleted or Numbered list\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method _createList\n\t\t * @param {Object} listConfig Object that contains bullet, text and type for creating the list\n\t\t * @protected\n\t\t */\n\t\t_createList(listConfig) {\n\t\t\tconst editor = listConfig.editor;\n\n\t\t\tconst range = editor.getSelection().getRanges()[0];\n\n\t\t\trange.endContainer.setText(listConfig.text);\n\t\t\teditor.execCommand(listConfig.type);\n\n\t\t\tconst editable = editor.editable();\n\n\t\t\t// Subscribe to keydown in order to check if the next key press is `Backspace`.\n\t\t\t// If so, the creation of the list will be discarded.\n\t\t\teditable.attachListener(\n\t\t\t\teditable,\n\t\t\t\t'keydown',\n\t\t\t\tthis._checkForBackspaceAndUndo,\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\teditor,\n\t\t\t\t\tbullet: listConfig.bullet,\n\t\t\t\t},\n\t\t\t\t1\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Listens to the `Space` key events to check if the last word\n\t\t * introduced by the user should be replaced by a list (OL or UL)\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method _onKeyDown\n\t\t * @param {Event} event Event object\n\t\t * @protected\n\t\t */\n\t\t_onKeyDown(event) {\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tif (nativeEvent.keyCode === KEY_SPACE) {\n\t\t\t\tconst listConfig = this._getListConfig(\n\t\t\t\t\tevent.listenerData.editor\n\t\t\t\t);\n\n\t\t\t\tif (listConfig) {\n\t\t\t\t\tevent.data.preventDefault();\n\t\t\t\t\tthis._createList(listConfig);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * CKEditor plugin: Dragable image resizing\n * https://github.com/sstur/ck-dragresize\n * - Shows semi-transparent overlay while resizing\n * - Enforces Aspect Ratio (unless holding shift)\n * - Snap to size of other images in editor\n * - Escape while dragging cancels resize\n */\nif (!CKEDITOR.plugins.get('ae_dragresize')) {\n\tconst IMAGE_HANDLES = {\n\t\tboth: ['tl', 'tm', 'tr', 'lm', 'rm', 'bl', 'bm', 'br'],\n\t\theight: ['tl', 'tm', 'tr', 'bl', 'bm', 'br'],\n\t\tscale: ['tl', 'tr', 'bl', 'br'],\n\t\twidth: ['tl', 'tr', 'lm', 'rm', 'bl', 'br'],\n\t};\n\n\tconst POSITION_ELEMENT_FN = {\n\t\tbl(handle, left, top, box) {\n\t\t\tpositionElement(handle, -3 + left, box.height - 4 + top);\n\t\t},\n\t\tbm(handle, left, top, box) {\n\t\t\tpositionElement(\n\t\t\t\thandle,\n\t\t\t\tMath.round(box.width / 2) - 3 + left,\n\t\t\t\tbox.height - 4 + top\n\t\t\t);\n\t\t},\n\t\tbr(handle, left, top, box) {\n\t\t\tpositionElement(handle, box.width - 4 + left, box.height - 4 + top);\n\t\t},\n\t\tlm(handle, left, top, box) {\n\t\t\tpositionElement(\n\t\t\t\thandle,\n\t\t\t\t-3 + left,\n\t\t\t\tMath.round(box.height / 2) - 3 + top\n\t\t\t);\n\t\t},\n\t\ttl(handle, left, top, _box) {\n\t\t\tpositionElement(handle, left - 3, top - 3);\n\t\t},\n\t\ttm(handle, left, top, box) {\n\t\t\tpositionElement(\n\t\t\t\thandle,\n\t\t\t\tMath.round(box.width / 2) - 3 + left,\n\t\t\t\t-3 + top\n\t\t\t);\n\t\t},\n\t\ttr(handle, left, top, box) {\n\t\t\tpositionElement(handle, box.width - 4 + left, -3 + top);\n\t\t},\n\t\trm(handle, left, top, box) {\n\t\t\tpositionElement(\n\t\t\t\thandle,\n\t\t\t\tbox.width - 4 + left,\n\t\t\t\tMath.round(box.height / 2) - 3 + top\n\t\t\t);\n\t\t},\n\t};\n\n\tconst IMAGE_SNAP_TO_SIZE = 7;\n\n\tconst isFirefox = 'MozAppearance' in document.documentElement.style;\n\n\tconst isWebKit = 'WebkitAppearance' in document.documentElement.style;\n\n\tconst enablePlugin = isWebKit || isFirefox;\n\n\tif (enablePlugin) {\n\t\t// CSS is added in a compressed form\n\t\tCKEDITOR.addCss(\n\t\t\t'img::selection{color:rgba(0,0,0,0)}img.ckimgrsz{outline:1px dashed #000}#ckimgrsz{position:absolute;width:0;height:0;cursor:default;z-index:10001}#ckimgrsz span{display:none;position:absolute;top:0;left:0;width:0;height:0;background-size:100% 100%;opacity:.65;outline:1px dashed #000}#ckimgrsz i{position:absolute;display:block;width:5px;height:5px;background:#fff;border:1px solid #000}#ckimgrsz i.active,#ckimgrsz i:hover{background:#000}#ckimgrsz i.br,#ckimgrsz i.tl{cursor:nwse-resize}#ckimgrsz i.bm,#ckimgrsz i.tm{cursor:ns-resize}#ckimgrsz i.bl,#ckimgrsz i.tr{cursor:nesw-resize}#ckimgrsz i.lm,#ckimgrsz i.rm{cursor:ew-resize}body.dragging-br,body.dragging-br *,body.dragging-tl,body.dragging-tl *{cursor:nwse-resize!important}body.dragging-bm,body.dragging-bm *,body.dragging-tm,body.dragging-tm *{cursor:ns-resize!important}body.dragging-bl,body.dragging-bl *,body.dragging-tr,body.dragging-tr *{cursor:nesw-resize!important}body.dragging-lm,body.dragging-lm *,body.dragging-rm,body.dragging-rm *{cursor:ew-resize!important}'\n\t\t);\n\t}\n\n\t/**\n\t * Initializes the plugin\n\t */\n\tCKEDITOR.plugins.add('ae_dragresize', {\n\t\tonLoad() {\n\t\t\tif (!enablePlugin) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\tinit(editor) {\n\t\t\tif (!enablePlugin) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.once('contentDom', _evt => {\n\t\t\t\tinit(editor);\n\t\t\t});\n\t\t},\n\t});\n\n\tfunction init(editor) {\n\t\tconst window = editor.window.$;\n\n\t\tconst document = editor.document.$;\n\n\t\tif (isFirefox) {\n\t\t\t// Disable the native image resizing\n\t\t\tdocument.execCommand('enableObjectResizing', false, false);\n\t\t}\n\n\t\tconst snapToSize =\n\t\t\ttypeof IMAGE_SNAP_TO_SIZE === 'undefined'\n\t\t\t\t? null\n\t\t\t\t: IMAGE_SNAP_TO_SIZE;\n\n\t\teditor.config.imageScaleResize =\n\t\t\teditor.config.imageScaleResize || 'both';\n\n\t\tconst resizer = new Resizer(editor, {\n\t\t\timageScaleResize: editor.config.imageScaleResize,\n\t\t\tsnapToSize,\n\t\t});\n\n\t\tconst mouseDownListener = function(e) {\n\t\t\tif (resizer.isHandle(e.target)) {\n\t\t\t\tresizer.initDrag(e);\n\t\t\t}\n\t\t};\n\n\t\tdocument.addEventListener('mousedown', mouseDownListener, false);\n\n\t\tfunction selectionChange() {\n\t\t\tconst selection = editor.getSelection();\n\n\t\t\tif (!selection) return;\n\t\t\t// If an element is selected and that element is an IMG\n\t\t\tif (\n\t\t\t\tselection.getType() !== CKEDITOR.SELECTION_NONE &&\n\t\t\t\tselection.getStartElement().is('img')\n\t\t\t) {\n\t\t\t\t// And we're not right or middle clicking on the image\n\t\t\t\tif (\n\t\t\t\t\t!window.event ||\n\t\t\t\t\t!window.event.button ||\n\t\t\t\t\twindow.event.button === 0\n\t\t\t\t) {\n\t\t\t\t\tresizer.show(selection.getStartElement().$);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresizer.hide();\n\t\t\t}\n\t\t}\n\n\t\teditor.on('selectionChange', selectionChange);\n\n\t\teditor.on('getData', e => {\n\t\t\tlet html = e.data.dataValue || '';\n\t\t\thtml = html.replace(/<div id=\"ckimgrsz\"([\\s\\S]*?)<\\/div>/i, '');\n\t\t\thtml = html.replace(/\\b(ckimgrsz)\\b/g, '');\n\t\t\te.data.dataValue = html;\n\t\t});\n\n\t\teditor.on('beforeUndoImage', () => {\n\t\t\t// Remove the handles before undo images are saved\n\t\t\tresizer.hide();\n\t\t});\n\n\t\teditor.on('afterUndoImage', () => {\n\t\t\t// Restore the handles after undo images are saved\n\t\t\tselectionChange();\n\t\t});\n\n\t\teditor.on('blur', () => {\n\t\t\t// Remove the handles when editor loses focus\n\t\t\tresizer.hide();\n\t\t});\n\n\t\teditor.on('beforeModeUnload', function self() {\n\t\t\teditor.removeListener('beforeModeUnload', self);\n\t\t\tresizer.hide();\n\t\t});\n\n\t\teditor.on('destroy', () => {\n\t\t\tconst resizeElement = document.getElementById('ckimgrsz');\n\n\t\t\tif (resizeElement) {\n\t\t\t\tresizeElement.remove();\n\t\t\t}\n\n\t\t\tif (isFirefox) {\n\t\t\t\tdocument.execCommand('enableObjectResizing', false, true);\n\t\t\t}\n\n\t\t\tdocument.removeEventListener('mousedown', mouseDownListener);\n\t\t});\n\n\t\t// Update the selection when the browser window is resized\n\t\tlet resizeTimeout;\n\t\teditor.window.on('resize', () => {\n\t\t\t// Cancel any resize waiting to happen\n\t\t\tclearTimeout(resizeTimeout);\n\t\t\t// Delay resize to \"debounce\"\n\t\t\tresizeTimeout = setTimeout(selectionChange, 50);\n\t\t});\n\t}\n\n\tfunction Resizer(editor, cfg) {\n\t\tthis.editor = editor;\n\t\tthis.window = editor.window.$;\n\t\tthis.document = editor.document.$;\n\t\tthis.cfg = cfg || {};\n\t\tthis.init();\n\t}\n\n\tResizer.prototype = {\n\t\tinit() {\n\t\t\tconst instance = this;\n\n\t\t\tconst container = (this.container = this.document.createElement(\n\t\t\t\t'div'\n\t\t\t));\n\n\t\t\tcontainer.id = 'ckimgrsz';\n\t\t\tthis.preview = this.document.createElement('span');\n\t\t\tcontainer.appendChild(this.preview);\n\n\t\t\tconst handles = (this.handles = {});\n\n\t\t\tIMAGE_HANDLES[this.cfg.imageScaleResize].forEach(handleName => {\n\t\t\t\thandles[handleName] = instance.handles[\n\t\t\t\t\thandleName\n\t\t\t\t] = instance.createHandle(handleName);\n\t\t\t});\n\n\t\t\tfor (const n in handles) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(handles, n)) {\n\t\t\t\t\tcontainer.appendChild(handles[n]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcreateHandle(name) {\n\t\t\tconst el = this.document.createElement('i');\n\t\t\tel.classList.add(name);\n\t\t\treturn el;\n\t\t},\n\t\tisHandle(el) {\n\t\t\tconst handles = this.handles;\n\t\t\tfor (const n in handles) {\n\t\t\t\tif (handles[n] === el) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tshow(el) {\n\t\t\tlet uiNode = this.editor.config.uiNode;\n\n\t\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\t\tthis.el = el;\n\t\t\tif (this.cfg.snapToSize) {\n\t\t\t\tthis.otherImages = toArray(\n\t\t\t\t\tthis.document.getElementsByTagName('img')\n\t\t\t\t);\n\t\t\t\tthis.otherImages.splice(this.otherImages.indexOf(el), 1);\n\t\t\t}\n\t\t\tconst box = (this.box = getBoundingBox(this.window, el));\n\t\t\tpositionElement(this.container, box.left, box.top + scrollTop);\n\n\t\t\tuiNode = uiNode || document.body;\n\n\t\t\tuiNode.appendChild(this.container);\n\n\t\t\tthis.el.classList.add('ckimgrsz');\n\t\t\tthis.showHandles();\n\t\t},\n\t\thide() {\n\t\t\t// Remove class from all img.ckimgrsz\n\t\t\tconst elements = this.document.getElementsByClassName('ckimgrsz');\n\t\t\tfor (let i = 0; i < elements.length; ++i) {\n\t\t\t\telements[i].classList.remove('ckimgrsz');\n\t\t\t}\n\t\t\tthis.hideHandles();\n\t\t\tif (this.container.parentNode) {\n\t\t\t\tthis.container.parentNode.removeChild(this.container);\n\t\t\t}\n\t\t},\n\t\tinitDrag(e) {\n\t\t\tif (e.button !== 0) {\n\t\t\t\t// right-click or middle-click\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst resizer = this;\n\t\t\tconst drag = new DragEvent(this.window, this.document);\n\t\t\tdrag.onStart = function() {\n\t\t\t\tresizer.showPreview();\n\t\t\t\tresizer.isDragging = true;\n\t\t\t\tresizer.editor.getSelection().lock();\n\t\t\t};\n\t\t\tdrag.onDrag = function() {\n\t\t\t\tresizer.calculateSize(this);\n\t\t\t\tresizer.updatePreview();\n\t\t\t\tconst box = resizer.previewBox;\n\t\t\t\tresizer.updateHandles(box, box.left, box.top);\n\t\t\t};\n\t\t\tdrag.onRelease = function() {\n\t\t\t\tresizer.isDragging = false;\n\t\t\t\tresizer.hidePreview();\n\t\t\t\tresizer.hide();\n\t\t\t\tresizer.editor.getSelection().unlock();\n\t\t\t\t// Save an undo snapshot before the image is permanently changed\n\t\t\t\tresizer.editor.fire('saveSnapshot');\n\t\t\t};\n\t\t\tdrag.onComplete = function() {\n\t\t\t\tresizer.resizeComplete();\n\t\t\t\t// Save another snapshot after the image is changed\n\t\t\t\tresizer.editor.fire('saveSnapshot');\n\t\t\t};\n\t\t\tdrag.start(e);\n\t\t},\n\t\tupdateHandles(box, left, top) {\n\t\t\tleft = left || 0;\n\t\t\ttop = top || 0;\n\t\t\tconst handles = this.handles;\n\n\t\t\tfor (const handle in handles) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(handles, handle)) {\n\t\t\t\t\tPOSITION_ELEMENT_FN[handle](\n\t\t\t\t\t\thandles[handle],\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbox\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowHandles() {\n\t\t\tconst handles = this.handles;\n\t\t\tthis.updateHandles(this.box);\n\t\t\tfor (const n in handles) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(handles, n)) {\n\t\t\t\t\thandles[n].style.display = 'block';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thideHandles() {\n\t\t\tconst handles = this.handles;\n\t\t\tfor (const n in handles) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(handles, n)) {\n\t\t\t\t\thandles[n].style.display = 'none';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowPreview() {\n\t\t\tthis.preview.style.backgroundImage = 'url(\"' + this.el.src + '\")';\n\t\t\tthis.calculateSize();\n\t\t\tthis.updatePreview();\n\t\t\tthis.preview.style.display = 'block';\n\t\t},\n\t\tupdatePreview() {\n\t\t\tconst box = this.previewBox;\n\t\t\tpositionElement(this.preview, box.left, box.top);\n\t\t\tthis.preview.style.width = this.previewBox.width + 'px';\n\t\t\tthis.preview.style.height = this.previewBox.height + 'px';\n\t\t},\n\t\thidePreview() {\n\t\t\tconst box = getBoundingBox(this.window, this.preview);\n\t\t\tthis.result = {\n\t\t\t\twidth: box.width,\n\t\t\t\theight: box.height,\n\t\t\t};\n\t\t\tthis.preview.style.display = 'none';\n\t\t},\n\t\tcalculateSize(data) {\n\t\t\tconst box = (this.previewBox = {\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: this.box.width,\n\t\t\t\theight: this.box.height,\n\t\t\t});\n\n\t\t\tif (!data) return;\n\n\t\t\tconst attr = data.target.className;\n\n\t\t\tif (~attr.indexOf('r')) {\n\t\t\t\tbox.width = Math.max(32, this.box.width + data.delta.x);\n\t\t\t}\n\t\t\tif (~attr.indexOf('b')) {\n\t\t\t\tbox.height = Math.max(32, this.box.height + data.delta.y);\n\t\t\t}\n\t\t\tif (~attr.indexOf('l')) {\n\t\t\t\tbox.width = Math.max(32, this.box.width - data.delta.x);\n\t\t\t}\n\t\t\tif (~attr.indexOf('t')) {\n\t\t\t\tbox.height = Math.max(32, this.box.height - data.delta.y);\n\t\t\t}\n\t\t\t// if dragging corner, enforce aspect ratio (unless shift key is being held)\n\t\t\tif (attr.indexOf('m') < 0 && !data.keys.shift) {\n\t\t\t\tconst ratio = this.box.width / this.box.height;\n\t\t\t\tif (box.width / box.height > ratio) {\n\t\t\t\t\tbox.height = Math.round(box.width / ratio);\n\t\t\t\t} else {\n\t\t\t\t\tbox.width = Math.round(box.height * ratio);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst snapToSize = this.cfg.snapToSize;\n\n\t\t\tif (snapToSize) {\n\t\t\t\tconst others = this.otherImages;\n\t\t\t\tfor (let i = 0; i < others.length; i++) {\n\t\t\t\t\tconst other = getBoundingBox(this.window, others[i]);\n\t\t\t\t\tif (\n\t\t\t\t\t\tMath.abs(box.width - other.width) <= snapToSize &&\n\t\t\t\t\t\tMath.abs(box.height - other.height) <= snapToSize\n\t\t\t\t\t) {\n\t\t\t\t\t\tbox.width = other.width;\n\t\t\t\t\t\tbox.height = other.height;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// recalculate left or top position\n\t\t\tif (~attr.indexOf('l')) {\n\t\t\t\tbox.left = this.box.width - box.width;\n\t\t\t}\n\t\t\tif (~attr.indexOf('t')) {\n\t\t\t\tbox.top = this.box.height - box.height;\n\t\t\t}\n\t\t},\n\t\tresizeComplete() {\n\t\t\tresizeElement.call(\n\t\t\t\tthis,\n\t\t\t\tthis.el,\n\t\t\t\tthis.result.width,\n\t\t\t\tthis.result.height\n\t\t\t);\n\t\t},\n\t};\n\n\tfunction DragEvent(window, document) {\n\t\tthis.window = window;\n\t\tthis.document = document;\n\t\tthis.events = {\n\t\t\tmousemove: bind(this.mousemove, this),\n\t\t\tkeydown: bind(this.keydown, this),\n\t\t\tmouseup: bind(this.mouseup, this),\n\t\t};\n\t}\n\n\tDragEvent.prototype = {\n\t\tstart(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis.target = e.target;\n\t\t\tthis.attr = e.target.className;\n\t\t\tthis.startPos = {\n\t\t\t\tx: e.clientX,\n\t\t\t\ty: e.clientY,\n\t\t\t};\n\t\t\tthis.update(e);\n\t\t\tconst events = this.events;\n\t\t\tthis.document.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tevents.mousemove,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.document.addEventListener('keydown', events.keydown, false);\n\t\t\tthis.document.addEventListener('mouseup', events.mouseup, false);\n\t\t\tthis.document.body.classList.add('dragging-' + this.attr);\n\t\t\tif (this.onStart) {\n\t\t\t\tthis.onStart();\n\t\t\t}\n\t\t},\n\t\tupdate(e) {\n\t\t\tthis.currentPos = {\n\t\t\t\tx: e.clientX,\n\t\t\t\ty: e.clientY,\n\t\t\t};\n\t\t\tthis.delta = {\n\t\t\t\tx: e.clientX - this.startPos.x,\n\t\t\t\ty: e.clientY - this.startPos.y,\n\t\t\t};\n\t\t\tthis.keys = {\n\t\t\t\tshift: e.shiftKey,\n\t\t\t\tctrl: e.ctrlKey,\n\t\t\t\talt: e.altKey,\n\t\t\t};\n\t\t},\n\t\tmousemove(e) {\n\t\t\tthis.update(e);\n\t\t\tif (this.onDrag) {\n\t\t\t\tthis.onDrag();\n\t\t\t}\n\t\t\tif (e.which === 0) {\n\t\t\t\t// mouse button released outside window; mouseup wasn't fired (Chrome)\n\t\t\t\tthis.mouseup(e);\n\t\t\t}\n\t\t},\n\t\tkeydown(e) {\n\t\t\t// escape key cancels dragging\n\t\t\tif (e.keyCode === 27) {\n\t\t\t\tthis.release();\n\t\t\t}\n\t\t},\n\t\tmouseup(e) {\n\t\t\tthis.update(e);\n\t\t\tthis.release();\n\t\t\tif (this.onComplete) {\n\t\t\t\tthis.onComplete();\n\t\t\t}\n\t\t},\n\t\trelease() {\n\t\t\tthis.document.body.classList.remove('dragging-' + this.attr);\n\t\t\tconst events = this.events;\n\t\t\tthis.document.removeEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tevents.mousemove,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.document.removeEventListener('keydown', events.keydown, false);\n\t\t\tthis.document.removeEventListener('mouseup', events.mouseup, false);\n\t\t\tif (this.onRelease) {\n\t\t\t\tthis.onRelease();\n\t\t\t}\n\t\t},\n\t};\n\n\t// helper functions\n\tfunction toArray(obj) {\n\t\tconst len = obj.length;\n\n\t\tconst arr = new Array(len);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tarr[i] = obj[i];\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction bind(fn, ctx) {\n\t\tif (fn.bind) {\n\t\t\treturn fn.bind(ctx);\n\t\t}\n\t\treturn function(...args) {\n\t\t\tfn.apply(ctx, args);\n\t\t};\n\t}\n\n\tfunction positionElement(el, left, top) {\n\t\tel.style.left = String(left) + 'px';\n\t\tel.style.top = String(top) + 'px';\n\t}\n\n\tfunction resizeElement(el, width, height) {\n\t\tconst imageScaleResize = this.editor.config.imageScaleResize;\n\t\tif (imageScaleResize === 'both') {\n\t\t\tel.setAttribute('width', String(width));\n\t\t\tel.style.width = String(width) + 'px';\n\t\t\tel.setAttribute('height', String(height));\n\t\t\tel.style.height = String(height) + 'px';\n\t\t} else if (\n\t\t\timageScaleResize === 'width' ||\n\t\t\timageScaleResize === 'scale'\n\t\t) {\n\t\t\tel.removeAttribute('height');\n\t\t\tel.style.height = 'auto';\n\t\t\tel.setAttribute('width', String(width));\n\t\t\tel.style.width = String(width) + 'px';\n\t\t} else if (imageScaleResize === 'height') {\n\t\t\tel.setAttribute('height', String(height));\n\t\t\tel.style.height = String(height) + 'px';\n\t\t\tel.removeAttribute('width');\n\t\t\tel.style.width = 'auto';\n\t\t}\n\t}\n\n\tfunction getBoundingBox(window, el) {\n\t\tconst rect = el.getBoundingClientRect();\n\t\treturn {\n\t\t\tleft: rect.left + window.pageXOffset,\n\t\t\ttop: rect.top + window.pageYOffset,\n\t\t\twidth: rect.width,\n\t\t\theight: rect.height,\n\t\t};\n\t}\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\n(function() {\n\tif (CKEDITOR.plugins.get('ae_dragresize_ie11')) {\n\t\treturn;\n\t}\n\n\tconst template = '<img alt=\"\" src=\"\" />';\n\n\tconst templateBlock = new CKEDITOR.template(\n\t\t'<figure class=\"{captionedClass}\">' +\n\t\t\ttemplate +\n\t\t\t'<figcaption>{captionPlaceholder}</figcaption>' +\n\t\t\t'</figure>'\n\t);\n\n\tconst alignmentsObj = {left: 0, center: 1, right: 2};\n\n\tconst regexPercent = /^\\s*(\\d+%)\\s*$/i;\n\n\tCKEDITOR.plugins.add('ae_dragresize_ie11', {\n\t\trequires: 'widget',\n\t\tonLoad() {\n\t\t\tCKEDITOR.addCss(\n\t\t\t\t'.cke_image_nocaption{' +\n\t\t\t\t\t// This is to remove unwanted space so resize\n\t\t\t\t\t// wrapper is displayed property.\n\t\t\t\t\t'line-height:0' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_editable.cke_image_ne, .cke_editable.cke_image_ne *{cursor:ne-resize !important}' +\n\t\t\t\t\t'.cke_editable.cke_image_nw, .cke_editable.cke_image_nw *{cursor:nw-resize !important}' +\n\t\t\t\t\t'.cke_editable.cke_image_sw, .cke_editable.cke_image_sw *{cursor:sw-resize !important}' +\n\t\t\t\t\t'.cke_editable.cke_image_se, .cke_editable.cke_image_se *{cursor:se-resize !important}' +\n\t\t\t\t\t'.cke_image_resizer{' +\n\t\t\t\t\t'display:none;' +\n\t\t\t\t\t'position:absolute;' +\n\t\t\t\t\t'width:10px;' +\n\t\t\t\t\t'height:10px;' +\n\t\t\t\t\t'background:#000;' +\n\t\t\t\t\t'outline:1px solid #fff;' +\n\t\t\t\t\t// Prevent drag handler from being misplaced (#11207).\n\t\t\t\t\t'line-height:0;' +\n\t\t\t\t\t'cursor:se-resize;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_image_resizer_wrapper{' +\n\t\t\t\t\t'position:relative;' +\n\t\t\t\t\t'display:inline-block;' +\n\t\t\t\t\t'line-height:0;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Top-right corner style of the resizer.\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizer_ne{' +\n\t\t\t\t\t'cursor:ne-resize;' +\n\t\t\t\t\t'left:auto;' +\n\t\t\t\t\t'right:-5px;' +\n\t\t\t\t\t'top:-5px;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Top-left corner style of the resizer.\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizer_nw{' +\n\t\t\t\t\t'cursor:nw-resize;' +\n\t\t\t\t\t'left:-5px;' +\n\t\t\t\t\t'right:auto;' +\n\t\t\t\t\t'top:-5px;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Bottom-right corner style of the resizer.\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizer_se{' +\n\t\t\t\t\t'bottom:-5px;' +\n\t\t\t\t\t'cursor:se-resize;' +\n\t\t\t\t\t'left:auto;' +\n\t\t\t\t\t'right:-5px;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Bottom-left corner style of the resizer.\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizer_sw{' +\n\t\t\t\t\t'bottom:-5px;' +\n\t\t\t\t\t'cursor:sw-resize;' +\n\t\t\t\t\t'left:-5px;' +\n\t\t\t\t\t'right:auto;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_widget_wrapper:hover .cke_image_resizer,' +\n\t\t\t\t\t'.cke_image_resizing>.cke_image_resizer{' +\n\t\t\t\t\t'display:block' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Expand widget wrapper when linked inline image.\n\t\t\t\t\t'.cke_widget_wrapper>a{' +\n\t\t\t\t\t'display:inline-block' +\n\t\t\t\t\t'}'\n\t\t\t);\n\t\t},\n\n\t\tinit(editor) {\n\t\t\t// Adapts configuration from original image plugin. Should be removed\n\t\t\t// when we'll rename ae_dragresize_ie11 to image.\n\n\t\t\tconst image = widgetDef(editor);\n\n\t\t\t// Register the widget.\n\t\t\teditor.widgets.add('image', image);\n\n\t\t\t// Add a listener to handle selection change events and properly detect editor\n\t\t\t// interactions on the widgets without messing with widget native selection\n\t\t\teditor.on('selectionChange', _event => {\n\t\t\t\tconst selection = editor.getSelection();\n\n\t\t\t\tif (selection) {\n\t\t\t\t\tconst element = selection.getSelectedElement();\n\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tconst widgetElement = element.findOne('img');\n\n\t\t\t\t\t\tif (widgetElement) {\n\t\t\t\t\t\t\tconst region = element.getClientRect();\n\n\t\t\t\t\t\t\tconst scrollPosition = new CKEDITOR.dom.window(\n\t\t\t\t\t\t\t\twindow\n\t\t\t\t\t\t\t).getScrollPosition();\n\t\t\t\t\t\t\tregion.left -= scrollPosition.x;\n\t\t\t\t\t\t\tregion.top += scrollPosition.y;\n\n\t\t\t\t\t\t\tregion.direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\n\t\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\t\tnativeEvent: {},\n\t\t\t\t\t\t\t\tselectionData: {\n\t\t\t\t\t\t\t\t\telement: widgetElement,\n\t\t\t\t\t\t\t\t\tregion,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tafterInit(editor) {\n\t\t\t// Integrate with align commands (justify plugin).\n\t\t\tconst align = {left: 1, right: 1, center: 1, block: 1};\n\n\t\t\tconst integrate = alignCommandIntegrator(editor);\n\n\t\t\tfor (const value in align) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(align, value)) {\n\t\t\t\t\tintegrate(value);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n\n\t// Widget states (forms) depending on alignment and configuration.\n\t//\n\t// Non-captioned widget (inline styles)\n\t// \t\t┌──────┬───────────────────────────────┬─────────────────────────────┐\n\t// \t\t│Align │Internal form                  │Data                         │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│none  │<wrapper>                      │<img />                      │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│left  │<wrapper style=”float:left”>   │<img style=”float:left” />   │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│center│<wrapper>                      │<p style=”text-align:center”>│\n\t// \t\t│      │ <p style=”text-align:center”> │  <img />                    │\n\t// \t\t│      │   <img />                     │</p>                         │\n\t// \t\t│      │ </p>                          │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│right │<wrapper style=”float:right”>  │<img style=”float:right” />  │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t└──────┴───────────────────────────────┴─────────────────────────────┘\n\t//\n\t// Non-captioned widget (config.ae_dragresize_ie11_alignClasses defined)\n\t// \t\t┌──────┬───────────────────────────────┬─────────────────────────────┐\n\t// \t\t│Align │Internal form                  │Data                         │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│none  │<wrapper>                      │<img />                      │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│left  │<wrapper class=”left”>         │<img class=”left” />         │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│center│<wrapper>                      │<p class=”center”>           │\n\t// \t\t│      │ <p class=”center”>            │ <img />                     │\n\t// \t\t│      │   <img />                     │</p>                         │\n\t// \t\t│      │ </p>                          │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│right │<wrapper class=”right”>        │<img class=”right” />        │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t└──────┴───────────────────────────────┴─────────────────────────────┘\n\t//\n\t// Captioned widget (inline styles)\n\t// \t\t┌──────┬────────────────────────────────────────┬────────────────────────────────────────┐\n\t// \t\t│Align │Internal form                           │Data                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│none  │<wrapper>                               │<figure />                              │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│left  │<wrapper style=”float:left”>            │<figure style=”float:left” />           │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│center│<wrapper style=”text-align:center”>     │<div style=”text-align:center”>         │\n\t// \t\t│      │ <figure style=”display:inline-block” />│ <figure style=”display:inline-block” />│\n\t// \t\t│      │</wrapper>                              │</p>                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│right │<wrapper style=”float:right”>           │<figure style=”float:right” />          │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t└──────┴────────────────────────────────────────┴────────────────────────────────────────┘\n\t//\n\t// Captioned widget (config.ae_dragresize_ie11_alignClasses defined)\n\t// \t\t┌──────┬────────────────────────────────────────┬────────────────────────────────────────┐\n\t// \t\t│Align │Internal form                           │Data                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│none  │<wrapper>                               │<figure />                              │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│left  │<wrapper class=”left”>                  │<figure class=”left” />                 │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│center│<wrapper class=”center”>                │<div class=”center”>                    │\n\t// \t\t│      │ <figure />                             │ <figure />                             │\n\t// \t\t│      │</wrapper>                              │</p>                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│right │<wrapper class=”right”>                 │<figure class=”right” />                │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t└──────┴────────────────────────────────────────┴────────────────────────────────────────┘\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {Object}\n\tfunction widgetDef(editor) {\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\tconst captionedClass = editor.config.ae_dragresize_ie11_captionedClass;\n\n\t\tfunction deflate() {\n\t\t\tif (this.deflated) return;\n\n\t\t\t// Remember whether widget was focused before destroyed.\n\t\t\tif (editor.widgets.focused == this.widget) this.focused = true;\n\n\t\t\teditor.widgets.destroy(this.widget);\n\n\t\t\t// Mark widget was destroyed.\n\t\t\tthis.deflated = true;\n\t\t}\n\n\t\tfunction inflate() {\n\t\t\tconst editable = editor.editable();\n\n\t\t\tconst doc = editor.document;\n\n\t\t\t// Create a new widget. This widget will be either captioned\n\t\t\t// non-captioned, block or inline according to what is the\n\t\t\t// new state of the widget.\n\t\t\tif (this.deflated) {\n\t\t\t\tthis.widget = editor.widgets.initOn(\n\t\t\t\t\tthis.element,\n\t\t\t\t\t'image',\n\t\t\t\t\tthis.widget.data\n\t\t\t\t);\n\n\t\t\t\t// Once widget was re-created, it may become an inline element without\n\t\t\t\t// block wrapper (i.e. when unaligned, end not captioned). Let's do some\n\t\t\t\t// sort of autoparagraphing here (#10853).\n\t\t\t\tif (\n\t\t\t\t\tthis.widget.inline &&\n\t\t\t\t\t!new CKEDITOR.dom.elementPath(this.widget.wrapper, editable)\n\t\t\t\t\t\t.block\n\t\t\t\t) {\n\t\t\t\t\tconst block = doc.createElement(\n\t\t\t\t\t\teditor.activeEnterMode == CKEDITOR.ENTER_P ? 'p' : 'div'\n\t\t\t\t\t);\n\t\t\t\t\tblock.replace(this.widget.wrapper);\n\t\t\t\t\tthis.widget.wrapper.move(block);\n\t\t\t\t}\n\n\t\t\t\t// The focus must be transferred from the old one (destroyed)\n\t\t\t\t// to the new one (just created).\n\t\t\t\tif (this.focused) {\n\t\t\t\t\tthis.widget.focus();\n\t\t\t\t\tdelete this.focused;\n\t\t\t\t}\n\n\t\t\t\tdelete this.deflated;\n\t\t\t}\n\n\t\t\t// If now widget was destroyed just update wrapper's alignment.\n\t\t\t// According to the new state.\n\t\t\telse {\n\t\t\t\tsetWrapperAlign(this.widget, alignClasses);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tallowedContent: getWidgetAllowedContent(editor),\n\n\t\t\trequiredContent: 'img[src,alt]',\n\n\t\t\tfeatures: getWidgetFeatures(editor),\n\n\t\t\tstyleableElements: 'img figure',\n\n\t\t\t// This widget converts style-driven dimensions to attributes.\n\t\t\tcontentTransformations: [['img[width]: sizeToAttribute']],\n\n\t\t\t// This widget has an editable caption.\n\t\t\teditables: {\n\t\t\t\tcaption: {\n\t\t\t\t\tselector: 'figcaption',\n\t\t\t\t\tallowedContent: 'br em strong sub sup u s; a[!href,target]',\n\t\t\t\t},\n\t\t\t},\n\n\t\t\tparts: {\n\t\t\t\timage: 'img',\n\t\t\t\tcaption: 'figcaption',\n\t\t\t\t// parts#link defined in widget#init\n\t\t\t},\n\n\t\t\t// Template of the widget: plain image.\n\t\t\ttemplate,\n\n\t\t\tdata() {\n\t\t\t\tconst features = this.features;\n\n\t\t\t\t// Image can't be captioned when figcaption is disallowed (#11004).\n\t\t\t\tif (\n\t\t\t\t\tthis.data.hasCaption &&\n\t\t\t\t\t!editor.filter.checkFeature(features.caption)\n\t\t\t\t)\n\t\t\t\t\tthis.data.hasCaption = false;\n\n\t\t\t\t// Image can't be aligned when floating is disallowed (#11004).\n\t\t\t\tif (\n\t\t\t\t\tthis.data.align != 'none' &&\n\t\t\t\t\t!editor.filter.checkFeature(features.align)\n\t\t\t\t)\n\t\t\t\t\tthis.data.align = 'none';\n\n\t\t\t\t// Convert the internal form of the widget from the old state to the new one.\n\t\t\t\tthis.shiftState({\n\t\t\t\t\twidget: this,\n\t\t\t\t\telement: this.element,\n\t\t\t\t\toldData: this.oldData,\n\t\t\t\t\tnewData: this.data,\n\t\t\t\t\tdeflate,\n\t\t\t\t\tinflate,\n\t\t\t\t});\n\n\t\t\t\t// Update widget.parts.link since it will not auto-update unless widget\n\t\t\t\t// is destroyed and re-inited.\n\t\t\t\tif (!this.data.link) {\n\t\t\t\t\tif (this.parts.link) delete this.parts.link;\n\t\t\t\t} else {\n\t\t\t\t\tif (!this.parts.link)\n\t\t\t\t\t\tthis.parts.link = this.parts.image.getParent();\n\t\t\t\t}\n\n\t\t\t\tthis.parts.image.setAttributes({\n\t\t\t\t\tsrc: this.data.src,\n\n\t\t\t\t\t// This internal is required by the editor.\n\t\t\t\t\t'data-cke-saved-src': this.data.src,\n\n\t\t\t\t\talt: this.data.alt,\n\t\t\t\t});\n\n\t\t\t\t// If shifting non-captioned -> captioned, remove classes\n\t\t\t\t// related to styles from <img/>.\n\t\t\t\tif (\n\t\t\t\t\tthis.oldData &&\n\t\t\t\t\t!this.oldData.hasCaption &&\n\t\t\t\t\tthis.data.hasCaption\n\t\t\t\t) {\n\t\t\t\t\tfor (const c in this.data.classes) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\tthis.data.classes,\n\t\t\t\t\t\t\t\tc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.parts.image.removeClass(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Set dimensions of the image according to gathered data.\n\t\t\t\t// Do it only when the attributes are allowed (#11004).\n\t\t\t\tif (editor.filter.checkFeature(features.dimension))\n\t\t\t\t\tsetDimensions(this);\n\n\t\t\t\t// Cache current data.\n\t\t\t\tthis.oldData = CKEDITOR.tools.extend({}, this.data);\n\t\t\t},\n\n\t\t\tinit() {\n\t\t\t\tconst helpers = CKEDITOR.plugins.ae_dragresize_ie11;\n\n\t\t\t\tconst image = this.parts.image;\n\n\t\t\t\tconst data = {\n\t\t\t\t\thasCaption: !!this.parts.caption,\n\t\t\t\t\tsrc: image.getAttribute('src'),\n\t\t\t\t\talt: image.getAttribute('alt') || '',\n\t\t\t\t\twidth: image.getAttribute('width') || '',\n\n\t\t\t\t\t// Lock ratio is on by default (#10833).\n\t\t\t\t\tlock: this.ready\n\t\t\t\t\t\t? helpers.checkHasNaturalRatio(image)\n\t\t\t\t\t\t: true,\n\t\t\t\t};\n\n\t\t\t\tdata.height = data.lock\n\t\t\t\t\t? null\n\t\t\t\t\t: image.getAttribute('height') || '';\n\n\t\t\t\t// If we used 'a' in widget#parts definition, it could happen that\n\t\t\t\t// selected element is a child of widget.parts#caption. Since there's no clever\n\t\t\t\t// way to solve it with CSS selectors, it's done like that. (#11783).\n\t\t\t\tconst link = image.getAscendant('a');\n\n\t\t\t\tif (link && this.wrapper.contains(link)) this.parts.link = link;\n\n\t\t\t\t// Depending on configuration, read style/class from element and\n\t\t\t\t// then remove it. Removed style/class will be set on wrapper in #data listener.\n\t\t\t\t// Note: Center alignment is detected during upcast, so only left/right cases\n\t\t\t\t// are checked below.\n\t\t\t\tif (!data.align) {\n\t\t\t\t\tconst alignElement = data.hasCaption ? this.element : image;\n\n\t\t\t\t\t// Read the initial left/right alignment from the class set on element.\n\t\t\t\t\tif (alignClasses) {\n\t\t\t\t\t\tif (alignElement.hasClass(alignClasses[0])) {\n\t\t\t\t\t\t\tdata.align = 'left';\n\t\t\t\t\t\t} else if (alignElement.hasClass(alignClasses[2])) {\n\t\t\t\t\t\t\tdata.align = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (data.align) {\n\t\t\t\t\t\t\talignElement.removeClass(\n\t\t\t\t\t\t\t\talignClasses[alignmentsObj[data.align]]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdata.align = 'none';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Read initial float style from figure/image and then remove it.\n\t\t\t\t\telse {\n\t\t\t\t\t\tdata.align = alignElement.getStyle('float') || 'none';\n\t\t\t\t\t\talignElement.removeStyle('float');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update data.link object with attributes if the link has been discovered.\n\t\t\t\tif (editor.plugins.link && this.parts.link) {\n\t\t\t\t\tdata.link = helpers.getLinkAttributesParser()(\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\tthis.parts.link\n\t\t\t\t\t);\n\n\t\t\t\t\t// Get rid of cke_widget_* classes in data. Otherwise\n\t\t\t\t\t// they might appear in link dialog.\n\t\t\t\t\tconst advanced = data.link.advanced;\n\t\t\t\t\tif (advanced && advanced.advCSSClasses) {\n\t\t\t\t\t\tadvanced.advCSSClasses = CKEDITOR.tools.trim(\n\t\t\t\t\t\t\tadvanced.advCSSClasses.replace(/cke_\\S+/, '')\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Get rid of extra vertical space when there's no caption.\n\t\t\t\t// It will improve the look of the resizer.\n\t\t\t\tthis.wrapper[(data.hasCaption ? 'remove' : 'add') + 'Class'](\n\t\t\t\t\t'cke_image_nocaption'\n\t\t\t\t);\n\n\t\t\t\tthis.setData(data);\n\n\t\t\t\t// Setup dynamic image resizing with mouse.\n\t\t\t\t// Don't initialize resizer when dimensions are disallowed (#11004).\n\t\t\t\tif (\n\t\t\t\t\teditor.filter.checkFeature(this.features.dimension) &&\n\t\t\t\t\teditor.config.ae_dragresize_ie11_disableResizer !== true\n\t\t\t\t)\n\t\t\t\t\tsetupResizer(this);\n\n\t\t\t\tconst dragHandlerStyle = this.dragHandlerContainer.$.style;\n\t\t\t\tdragHandlerStyle.setAttribute(\n\t\t\t\t\t'backgroundColor',\n\t\t\t\t\t'rgba(255, 255, 255, 1'\n\t\t\t\t);\n\t\t\t\tdragHandlerStyle.setAttribute('opacity', '1');\n\n\t\t\t\tthis.shiftState = helpers.stateShifter(this.editor);\n\n\t\t\t\t// Add widget editing option to its context menu.\n\t\t\t\tthis.on('contextMenu', function(evt) {\n\t\t\t\t\tevt.data.image = CKEDITOR.TRISTATE_OFF;\n\n\t\t\t\t\t// Integrate context menu items for link.\n\t\t\t\t\t// Note that widget may be wrapped in a link, which\n\t\t\t\t\t// does not belong to that widget (#11814).\n\t\t\t\t\tif (this.parts.link || this.wrapper.getAscendant('a'))\n\t\t\t\t\t\tevt.data.link = evt.data.unlink = CKEDITOR.TRISTATE_OFF;\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of ae_dragresize_ie11.\n\t\t\t// @see CKEDITOR.plugins.widget#addClass\n\t\t\taddClass(className) {\n\t\t\t\tgetStyleableElement(this).addClass(className);\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of ae_dragresize_ie11.\n\t\t\t// @see CKEDITOR.plugins.widget#hasClass\n\t\t\thasClass(className) {\n\t\t\t\treturn getStyleableElement(this).hasClass(className);\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of ae_dragresize_ie11.\n\t\t\t// @see CKEDITOR.plugins.widget#removeClass\n\t\t\tremoveClass(className) {\n\t\t\t\tgetStyleableElement(this).removeClass(className);\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of ae_dragresize_ie11.\n\t\t\t// @see CKEDITOR.plugins.widget#getClasses\n\t\t\tgetClasses: (function() {\n\t\t\t\tconst classRegex = new RegExp(\n\t\t\t\t\t'^(' +\n\t\t\t\t\t\t[].concat(captionedClass, alignClasses).join('|') +\n\t\t\t\t\t\t')$'\n\t\t\t\t);\n\n\t\t\t\treturn function() {\n\t\t\t\t\tconst classes = this.repository.parseElementClasses(\n\t\t\t\t\t\tgetStyleableElement(this).getAttribute('class')\n\t\t\t\t\t);\n\n\t\t\t\t\t// Neither config.ae_dragresize_ie11_captionedClass nor config.ae_dragresize_ie11_alignClasses\n\t\t\t\t\t// do not belong to style classes.\n\t\t\t\t\tfor (const c in classes) {\n\t\t\t\t\t\tif (classRegex.test(c)) delete classes[c];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t};\n\t\t\t})(),\n\n\t\t\tupcast: upcastWidgetElement(editor),\n\t\t\tdowncast: downcastWidgetElement(editor),\n\n\t\t\tgetLabel() {\n\t\t\t\tconst label = (this.data.alt || '') + ' ' + this.pathName;\n\n\t\t\t\treturn this.editor.lang.widget.label.replace(/%1/, label);\n\t\t\t},\n\t\t};\n\t}\n\n\t/**\n\t * A set of Enhanced Image (ae_dragresize_ie11) plugin helpers.\n\t *\n\t * @class\n\t * @singleton\n\t */\n\tCKEDITOR.plugins.ae_dragresize_ie11 = {\n\t\tstateShifter(editor) {\n\t\t\t// Tag name used for centering non-captioned widgets.\n\t\t\tconst doc = editor.document;\n\n\t\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\t\tconst captionedClass =\n\t\t\t\teditor.config.ae_dragresize_ie11_captionedClass;\n\n\t\t\tconst editable = editor.editable();\n\n\t\t\t// The order that stateActions get executed. It matters!\n\n\t\t\tconst shiftables = ['hasCaption', 'align', 'link'];\n\n\t\t\t// Atomic procedures, one per state variable.\n\t\t\tconst stateActions = {\n\t\t\t\talign(shift, oldValue, newValue) {\n\t\t\t\t\tconst el = shift.element;\n\n\t\t\t\t\t// Alignment changed.\n\t\t\t\t\tif (\n\t\t\t\t\t\tshift.changed.align ||\n\t\t\t\t\t\t(el.$.style.marginLeft === 'auto' &&\n\t\t\t\t\t\t\tel.$.style.marginRight === 'auto')\n\t\t\t\t\t) {\n\t\t\t\t\t\t// No caption in the new state.\n\t\t\t\t\t\tif (!shift.newData.hasCaption) {\n\t\t\t\t\t\t\t// Changed to \"center\" (non-captioned).\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tnewValue == 'center' ||\n\t\t\t\t\t\t\t\t(el.$.style.marginLeft === 'auto' &&\n\t\t\t\t\t\t\t\t\tel.$.style.marginRight === 'auto')\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tshift.deflate();\n\t\t\t\t\t\t\t\tshift.element = wrapInCentering(editor, el);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Changed to \"non-center\" from \"center\" while caption removed.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!shift.changed.hasCaption &&\n\t\t\t\t\t\t\t\toldValue == 'center' &&\n\t\t\t\t\t\t\t\tnewValue != 'center'\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tshift.deflate();\n\t\t\t\t\t\t\t\tshift.element = unwrapFromCentering(el);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Alignment remains and \"center\" removed caption.\n\t\t\t\t\telse if (\n\t\t\t\t\t\tnewValue == 'center' &&\n\t\t\t\t\t\tshift.changed.hasCaption &&\n\t\t\t\t\t\t!shift.newData.hasCaption\n\t\t\t\t\t) {\n\t\t\t\t\t\tshift.deflate();\n\t\t\t\t\t\tshift.element = wrapInCentering(editor, el);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Finally set display for figure.\n\t\t\t\t\tif (!alignClasses && el.is('figure')) {\n\t\t\t\t\t\tif (newValue == 'center')\n\t\t\t\t\t\t\tel.setStyle('display', 'inline-block');\n\t\t\t\t\t\telse el.removeStyle('display');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\thasCaption(shift, oldValue, newValue) {\n\t\t\t\t\t// This action is for real state change only.\n\t\t\t\t\tif (!shift.changed.hasCaption) return;\n\n\t\t\t\t\t// Get <img/> or <a><img/></a> from widget. Note that widget element might itself\n\t\t\t\t\t// be what we're looking for. Also element can be <p style=\"text-align:center\"><a>...</a></p>.\n\t\t\t\t\tlet imageOrLink;\n\t\t\t\t\tif (shift.element.is({img: 1, a: 1}))\n\t\t\t\t\t\timageOrLink = shift.element;\n\t\t\t\t\telse imageOrLink = shift.element.findOne('a,img');\n\n\t\t\t\t\t// Switching hasCaption always destroys the widget.\n\t\t\t\t\tshift.deflate();\n\n\t\t\t\t\t// There was no caption, but the caption is to be added.\n\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\t// Create new <figure> from widget template.\n\t\t\t\t\t\tconst figure = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t\t\t\ttemplateBlock.output({\n\t\t\t\t\t\t\t\tcaptionedClass,\n\t\t\t\t\t\t\t\tcaptionPlaceholder:\n\t\t\t\t\t\t\t\t\teditor.lang.ae_dragresize_ie11\n\t\t\t\t\t\t\t\t\t\t.captionPlaceholder,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tdoc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Replace element with <figure>.\n\t\t\t\t\t\treplaceSafely(figure, shift.element);\n\n\t\t\t\t\t\t// Use old <img/> or <a><img/></a> instead of the one from the template,\n\t\t\t\t\t\t// so we won't lose additional attributes.\n\t\t\t\t\t\timageOrLink.replace(figure.findOne('img'));\n\n\t\t\t\t\t\t// Update widget's element.\n\t\t\t\t\t\tshift.element = figure;\n\t\t\t\t\t}\n\n\t\t\t\t\t// The caption was present, but now it's to be removed.\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Unwrap <img/> or <a><img/></a> from figure.\n\t\t\t\t\t\timageOrLink.replace(shift.element);\n\n\t\t\t\t\t\t// Update widget's element.\n\t\t\t\t\t\tshift.element = imageOrLink;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tlink(shift, oldValue, newValue) {\n\t\t\t\t\tif (shift.changed.link) {\n\t\t\t\t\t\tconst img = shift.element.is('img')\n\t\t\t\t\t\t\t? shift.element\n\t\t\t\t\t\t\t: shift.element.findOne('img');\n\n\t\t\t\t\t\tconst link = shift.element.is('a')\n\t\t\t\t\t\t\t? shift.element\n\t\t\t\t\t\t\t: shift.element.findOne('a');\n\n\t\t\t\t\t\t// Why deflate:\n\t\t\t\t\t\t// If element is <img/>, it will be wrapped into <a>,\n\t\t\t\t\t\t// which becomes a new widget.element.\n\t\t\t\t\t\t// If element is <a><img/></a>, it will be unlinked\n\t\t\t\t\t\t// so <img/> becomes a new widget.element.\n\n\t\t\t\t\t\tconst needsDeflate =\n\t\t\t\t\t\t\t(shift.element.is('a') && !newValue) ||\n\t\t\t\t\t\t\t(shift.element.is('img') && newValue);\n\n\t\t\t\t\t\tlet newEl;\n\n\t\t\t\t\t\tif (needsDeflate) shift.deflate();\n\n\t\t\t\t\t\t// If unlinked the image, returned element is <img>.\n\t\t\t\t\t\tif (!newValue) newEl = unwrapFromLink(link);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// If linked the image, returned element is <a>.\n\t\t\t\t\t\t\tif (!oldValue)\n\t\t\t\t\t\t\t\tnewEl = wrapInLink(img, shift.newData.link);\n\n\t\t\t\t\t\t\t// Set and remove all attributes associated with this state.\n\t\t\t\t\t\t\tconst attributes = CKEDITOR.plugins.ae_dragresize_ie11.getLinkAttributesGetter()(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tnewValue\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (!CKEDITOR.tools.isEmpty(attributes.set))\n\t\t\t\t\t\t\t\t(newEl || link).setAttributes(attributes.set);\n\n\t\t\t\t\t\t\tif (attributes.removed.length)\n\t\t\t\t\t\t\t\t(newEl || link).removeAttributes(\n\t\t\t\t\t\t\t\t\tattributes.removed\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (needsDeflate) shift.element = newEl;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tfunction wrapInCentering(editor, element) {\n\t\t\t\tconst attribsAndStyles = {};\n\n\t\t\t\tif (alignClasses)\n\t\t\t\t\tattribsAndStyles.attributes = {class: alignClasses[1]};\n\t\t\t\telse attribsAndStyles.styles = {'text-align': 'center'};\n\n\t\t\t\t// There's no gentle way to center inline element with CSS, so create p/div\n\t\t\t\t// that wraps widget contents and does the trick either with style or class.\n\t\t\t\tconst center = doc.createElement(\n\t\t\t\t\teditor.activeEnterMode == CKEDITOR.ENTER_P ? 'p' : 'div',\n\t\t\t\t\tattribsAndStyles\n\t\t\t\t);\n\n\t\t\t\t// Replace element with centering wrapper.\n\t\t\t\treplaceSafely(center, element);\n\t\t\t\telement.move(center);\n\n\t\t\t\treturn center;\n\t\t\t}\n\n\t\t\tfunction unwrapFromCentering(element) {\n\t\t\t\tconst imageOrLink = element.findOne('a,img');\n\n\t\t\t\timageOrLink.replace(element);\n\n\t\t\t\treturn imageOrLink;\n\t\t\t}\n\n\t\t\t// Wraps <img/> -> <a><img/></a>.\n\t\t\t// Returns reference to <a>.\n\t\t\t//\n\t\t\t// @param {CKEDITOR.dom.element} img\n\t\t\t// @param {Object} linkData\n\t\t\t// @returns {CKEDITOR.dom.element}\n\t\t\tfunction wrapInLink(img, linkData) {\n\t\t\t\tconst link = doc.createElement('a', {\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\thref: linkData.url,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tlink.replace(img);\n\t\t\t\timg.move(link);\n\n\t\t\t\treturn link;\n\t\t\t}\n\n\t\t\t// De-wraps <a><img/></a> -> <img/>.\n\t\t\t// Returns the reference to <img/>\n\t\t\t//\n\t\t\t// @param {CKEDITOR.dom.element} link\n\t\t\t// @returns {CKEDITOR.dom.element}\n\t\t\tfunction unwrapFromLink(link) {\n\t\t\t\tconst img = link.findOne('img');\n\n\t\t\t\timg.replace(link);\n\n\t\t\t\treturn img;\n\t\t\t}\n\n\t\t\tfunction replaceSafely(replacing, replaced) {\n\t\t\t\tif (replaced.getParent()) {\n\t\t\t\t\tconst range = editor.createRange();\n\n\t\t\t\t\trange.moveToPosition(\n\t\t\t\t\t\treplaced,\n\t\t\t\t\t\tCKEDITOR.POSITION_BEFORE_START\n\t\t\t\t\t);\n\n\t\t\t\t\t// Remove old element. Do it before insertion to avoid a case when\n\t\t\t\t\t// element is moved from 'replaced' element before it, what creates\n\t\t\t\t\t// a tricky case which insertElementIntorRange does not handle.\n\t\t\t\t\treplaced.remove();\n\n\t\t\t\t\teditable.insertElementIntoRange(replacing, range);\n\t\t\t\t} else {\n\t\t\t\t\treplacing.replace(replaced);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn function(shift) {\n\t\t\t\tlet name;\n\t\t\t\tlet i;\n\n\t\t\t\tshift.changed = {};\n\n\t\t\t\tfor (i = 0; i < shiftables.length; i++) {\n\t\t\t\t\tname = shiftables[i];\n\n\t\t\t\t\tshift.changed[name] = shift.oldData\n\t\t\t\t\t\t? shift.oldData[name] !== shift.newData[name]\n\t\t\t\t\t\t: false;\n\t\t\t\t}\n\n\t\t\t\t// Iterate over possible state variables.\n\t\t\t\tfor (i = 0; i < shiftables.length; i++) {\n\t\t\t\t\tname = shiftables[i];\n\n\t\t\t\t\tstateActions[name](\n\t\t\t\t\t\tshift,\n\t\t\t\t\t\tshift.oldData ? shift.oldData[name] : null,\n\t\t\t\t\t\tshift.newData[name]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tshift.inflate();\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Checks whether the current image ratio matches the natural one\n\t\t * by comparing dimensions.\n\t\t *\n\t\t * @param {CKEDITOR.dom.element} image\n\t\t * @return {Boolean}\n\t\t */\n\t\tcheckHasNaturalRatio(image) {\n\t\t\tconst $ = image.$;\n\n\t\t\tconst natural = this.getNatural(image);\n\n\t\t\t// The reason for two alternative comparisons is that the rounding can come from\n\t\t\t// both dimensions, e.g. there are two cases:\n\t\t\t// \t1. height is computed as a rounded relation of the real height and the value of width,\n\t\t\t//\t2. width is computed as a rounded relation of the real width and the value of heigh.\n\t\t\treturn (\n\t\t\t\tMath.round(($.clientWidth / natural.width) * natural.height) ==\n\t\t\t\t\t$.clientHeight ||\n\t\t\t\tMath.round(($.clientHeight / natural.height) * natural.width) ==\n\t\t\t\t\t$.clientWidth\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Returns natural dimensions of the image. For modern browsers\n\t\t * it uses natural(Width|Height). For old ones (IE8) it creates\n\t\t * a new image and reads the dimensions.\n\t\t *\n\t\t * @param {CKEDITOR.dom.element} image\n\t\t * @return {Object}\n\t\t */\n\t\tgetNatural(image) {\n\t\t\tlet dimensions;\n\n\t\t\tif (image.$.naturalWidth) {\n\t\t\t\tdimensions = {\n\t\t\t\t\twidth: image.$.naturalWidth,\n\t\t\t\t\theight: image.$.naturalHeight,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst img = new Image();\n\t\t\t\timg.src = image.getAttribute('src');\n\n\t\t\t\tdimensions = {\n\t\t\t\t\twidth: img.width,\n\t\t\t\t\theight: img.height,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn dimensions;\n\t\t},\n\n\t\t/**\n\t\t * Returns an attribute getter function. Default getter comes from the Link plugin\n\t\t * and is documented by {@link CKEDITOR.plugins.link#getLinkAttributes}.\n\t\t *\n\t\t * **Note:** It is possible to override this method and use a custom getter e.g.\n\t\t * in the absence of the Link plugin.\n\t\t *\n\t\t * **Note:** If a custom getter is used, a data model format it produces\n\t\t * must be compatible with {@link CKEDITOR.plugins.link#getLinkAttributes}.\n\t\t *\n\t\t * **Note:** A custom getter must understand the data model format produced by\n\t\t * {@link #getLinkAttributesParser} to work correctly.\n\t\t *\n\t\t * @return {Function} A function that gets (composes) link attributes.\n\t\t * @since 4.5.5\n\t\t */\n\t\tgetLinkAttributesGetter() {\n\t\t\t// #13885\n\t\t\treturn CKEDITOR.plugins.link.getLinkAttributes;\n\t\t},\n\n\t\t/**\n\t\t * Returns an attribute parser function. Default parser comes from the Link plugin\n\t\t * and is documented by {@link CKEDITOR.plugins.link#parseLinkAttributes}.\n\t\t *\n\t\t * **Note:** It is possible to override this method and use a custom parser e.g.\n\t\t * in the absence of the Link plugin.\n\t\t *\n\t\t * **Note:** If a custom parser is used, a data model format produced by the parser\n\t\t * must be compatible with {@link #getLinkAttributesGetter}.\n\t\t *\n\t\t * **Note:** If a custom parser is used, it should be compatible with the\n\t\t * {@link CKEDITOR.plugins.link#parseLinkAttributes} data model format. Otherwise the\n\t\t * Link plugin dialog may not be populated correctly with parsed data. However\n\t\t * as long as Enhanced Image is **not** used with the Link plugin dialog, any custom data model\n\t\t * will work, being stored as an internal property of Enhanced Image widget's data only.\n\t\t *\n\t\t * @return {Function} A function that parses attributes.\n\t\t * @since 4.5.5\n\t\t */\n\t\tgetLinkAttributesParser() {\n\t\t\t// #13885\n\t\t\treturn CKEDITOR.plugins.link.parseLinkAttributes;\n\t\t},\n\t};\n\n\tfunction setWrapperAlign(widget, alignClasses) {\n\t\tconst wrapper = widget.wrapper;\n\n\t\tconst align = widget.data.align;\n\n\t\tconst hasCaption = widget.data.hasCaption;\n\n\t\tif (alignClasses) {\n\t\t\t// Remove all align classes first.\n\t\t\tfor (let i = 3; i--; ) wrapper.removeClass(alignClasses[i]);\n\n\t\t\tif (align == 'center') {\n\t\t\t\t// Avoid touching non-captioned, centered widgets because\n\t\t\t\t// they have the class set on the element instead of wrapper:\n\t\t\t\t//\n\t\t\t\t// \t<div class=\"cke_widget_wrapper\">\n\t\t\t\t// \t\t<p class=\"center-class\">\n\t\t\t\t// \t\t\t<img />\n\t\t\t\t// \t\t</p>\n\t\t\t\t// \t</div>\n\t\t\t\tif (hasCaption) {\n\t\t\t\t\twrapper.addClass(alignClasses[1]);\n\t\t\t\t}\n\t\t\t} else if (align != 'none') {\n\t\t\t\twrapper.addClass(alignClasses[alignmentsObj[align]]);\n\t\t\t}\n\t\t} else {\n\t\t\tif (align == 'center') {\n\t\t\t\tif (hasCaption) wrapper.setStyle('text-align', 'center');\n\t\t\t\telse wrapper.removeStyle('text-align');\n\n\t\t\t\twrapper.removeStyle('float');\n\t\t\t} else {\n\t\t\t\tif (align == 'none') wrapper.removeStyle('float');\n\t\t\t\telse wrapper.setStyle('float', align);\n\n\t\t\t\twrapper.removeStyle('text-align');\n\t\t\t}\n\n\t\t\tconst image = wrapper.$.querySelector('img');\n\n\t\t\tconst imageStyles = image.getAttribute('style');\n\n\t\t\tif (imageStyles) {\n\t\t\t\tlet styles = '';\n\n\t\t\t\tconst heightStyles = /(height:.+?;)/.exec(imageStyles);\n\t\t\t\tif (heightStyles) {\n\t\t\t\t\tstyles += heightStyles[0];\n\t\t\t\t}\n\n\t\t\t\tconst widthStyles = /(width:.+?;)/.exec(imageStyles);\n\t\t\t\tif (widthStyles) {\n\t\t\t\t\tstyles += widthStyles[0];\n\t\t\t\t}\n\n\t\t\t\timage.setAttribute('style', styles);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Returns a function that creates widgets from all <img> and\n\t// <figure class=\"{config.ae_dragresize_ie11_captionedClass}\"> elements.\n\t//\n\t// @param {CKEDITOR.editor} editor\n\t// @returns {Function}\n\tfunction upcastWidgetElement(editor) {\n\t\tconst isCenterWrapper = centerWrapperChecker(editor);\n\n\t\tconst captionedClass = editor.config.ae_dragresize_ie11_captionedClass;\n\n\t\t// @param {CKEDITOR.htmlParser.element} el\n\t\t// @param {Object} data\n\t\treturn function(el, data) {\n\t\t\tconst dimensions = {width: 1, height: 1};\n\n\t\t\tconst name = el.name;\n\n\t\t\tlet image;\n\n\t\t\t// #11110 Don't initialize on pasted fake objects.\n\t\t\tif (el.attributes['data-cke-realelement']) return;\n\n\t\t\t// If a center wrapper is found, there are 3 possible cases:\n\t\t\t//\n\t\t\t// 1. <div style=\"text-align:center\"><figure>...</figure></div>.\n\t\t\t//    In this case centering is done with a class set on widget.wrapper.\n\t\t\t//    Simply replace centering wrapper with figure (it's no longer necessary).\n\t\t\t//\n\t\t\t// 2. <p style=\"text-align:center\"><img/></p>.\n\t\t\t//    Nothing to do here: <p> remains for styling purposes.\n\t\t\t//\n\t\t\t// 3. <div style=\"text-align:center\"><img/></div>.\n\t\t\t//    Nothing to do here (2.) but that case is only possible in enterMode different\n\t\t\t//    than ENTER_P.\n\t\t\tif (isCenterWrapper(el)) {\n\t\t\t\tif (name == 'div') {\n\t\t\t\t\tconst figure = el.getFirst('figure');\n\n\t\t\t\t\t// Case #1.\n\t\t\t\t\tif (figure) {\n\t\t\t\t\t\tel.replaceWith(figure);\n\t\t\t\t\t\tel = figure;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Cases #2 and #3 (handled transparently)\n\n\t\t\t\t// If there's a centering wrapper, save it in data.\n\t\t\t\tdata.align = 'center';\n\n\t\t\t\t// Image can be wrapped in link <a><img/></a>.\n\t\t\t\timage = el.getFirst('img') || el.getFirst('a').getFirst('img');\n\t\t\t}\n\n\t\t\t// No center wrapper has been found.\n\t\t\telse if (name == 'figure' && el.hasClass(captionedClass)) {\n\t\t\t\timage = el.getFirst('img') || el.getFirst('a').getFirst('img');\n\n\t\t\t\t// Upcast linked image like <a><img/></a>.\n\t\t\t} else if (isLinkedOrStandaloneImage(el)) {\n\t\t\t\timage = el.name == 'a' ? el.children[0] : el;\n\t\t\t}\n\n\t\t\tif (!image) return;\n\n\t\t\t// If there's an image, then cool, we got a widget.\n\t\t\t// Now just remove dimension attributes expressed with %.\n\t\t\tfor (const d in dimensions) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(dimensions, d)) {\n\t\t\t\t\tconst dimension = image.attributes[d];\n\t\t\t\t\tif (dimension && dimension.match(regexPercent))\n\t\t\t\t\t\tdelete image.attributes[d];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn el;\n\t\t};\n\t}\n\n\t// Returns a function which transforms the widget to the external format\n\t// according to the current configuration.\n\t//\n\t// @param {CKEDITOR.editor}\n\tfunction downcastWidgetElement(editor) {\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\t// @param {CKEDITOR.htmlParser.element} el\n\t\treturn function(el) {\n\t\t\t// In case of <a><img/></a>, <img/> is the element to hold\n\t\t\t// inline styles or classes (ae_dragresize_ie11_alignClasses).\n\t\t\tconst attrsHolder = el.name == 'a' ? el.getFirst() : el;\n\n\t\t\tconst attrs = attrsHolder.attributes;\n\n\t\t\tconst align = this.data.align;\n\n\t\t\t// De-wrap the image from resize handle wrapper.\n\t\t\t// Only block widgets have one.\n\t\t\tif (!this.inline) {\n\t\t\t\tconst resizeWrapper = el.getFirst('span');\n\n\t\t\t\tif (resizeWrapper)\n\t\t\t\t\tresizeWrapper.replaceWith(\n\t\t\t\t\t\tresizeWrapper.getFirst({img: 1, a: 1})\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (align && align != 'none') {\n\t\t\t\tconst styles = CKEDITOR.tools.parseCssText(attrs.style || '');\n\n\t\t\t\t// When the widget is captioned (<figure>) and internally centering is done\n\t\t\t\t// with widget's wrapper style/class, in the external data representation,\n\t\t\t\t// <figure> must be wrapped with an element holding an style/class:\n\t\t\t\t//\n\t\t\t\t// \t<div style=\"text-align:center\">\n\t\t\t\t// \t\t<figure class=\"image\" style=\"display:inline-block\">...</figure>\n\t\t\t\t// \t</div>\n\t\t\t\t// or\n\t\t\t\t// \t<div class=\"some-center-class\">\n\t\t\t\t// \t\t<figure class=\"image\">...</figure>\n\t\t\t\t// \t</div>\n\t\t\t\t//\n\t\t\t\tif (align == 'center' && el.name == 'figure') {\n\t\t\t\t\tel = el.wrapWith(\n\t\t\t\t\t\tnew CKEDITOR.htmlParser.element(\n\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\talignClasses\n\t\t\t\t\t\t\t\t? {class: alignClasses[1]}\n\t\t\t\t\t\t\t\t: {style: 'text-align:center'}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// If left/right, add float style to the downcasted element.\n\t\t\t\telse if (align in {left: 1, right: 1}) {\n\t\t\t\t\tif (alignClasses)\n\t\t\t\t\t\tattrsHolder.addClass(\n\t\t\t\t\t\t\talignClasses[alignmentsObj[align]]\n\t\t\t\t\t\t);\n\t\t\t\t\telse styles['float'] = align;\n\t\t\t\t}\n\n\t\t\t\t// Update element styles.\n\t\t\t\tif (!alignClasses && !CKEDITOR.tools.isEmpty(styles))\n\t\t\t\t\tattrs.style = CKEDITOR.tools.writeCssText(styles) + ';';\n\t\t\t}\n\n\t\t\treturn el;\n\t\t};\n\t}\n\n\t// Returns a function that checks if an element is a centering wrapper.\n\t//\n\t// @param {CKEDITOR.editor} editor\n\t// @returns {Function}\n\tfunction centerWrapperChecker(editor) {\n\t\tconst captionedClass = editor.config.ae_dragresize_ie11_captionedClass;\n\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\tconst validChildren = {figure: 1, a: 1, img: 1};\n\n\t\treturn function(el) {\n\t\t\t// Wrapper must be either <div> or <p>.\n\t\t\tif (!(el.name in {div: 1, p: 1})) return false;\n\n\t\t\tconst children = el.children;\n\n\t\t\t// Centering wrapper can have only one child.\n\t\t\tif (children.length !== 1) return false;\n\n\t\t\tconst child = children[0];\n\n\t\t\t// Only <figure> or <img /> can be first (only) child of centering wrapper,\n\t\t\t// regardless of its type.\n\t\t\tif (!(child.name in validChildren)) return false;\n\n\t\t\t// If centering wrapper is <p>, only <img /> can be the child.\n\t\t\t//   <p style=\"text-align:center\"><img /></p>\n\t\t\tif (el.name == 'p') {\n\t\t\t\tif (!isLinkedOrStandaloneImage(child)) return false;\n\t\t\t}\n\t\t\t// Centering <div> can hold <img/> or <figure>, depending on enterMode.\n\t\t\telse {\n\t\t\t\t// If a <figure> is the first (only) child, it must have a class.\n\t\t\t\t//   <div style=\"text-align:center\"><figure>...</figure><div>\n\t\t\t\tif (child.name == 'figure') {\n\t\t\t\t\tif (!child.hasClass(captionedClass)) return false;\n\t\t\t\t} else {\n\t\t\t\t\t// Centering <div> can hold <img/> or <a><img/></a> only when enterMode\n\t\t\t\t\t// is ENTER_(BR|DIV).\n\t\t\t\t\t//   <div style=\"text-align:center\"><img /></div>\n\t\t\t\t\t//   <div style=\"text-align:center\"><a><img /></a></div>\n\t\t\t\t\tif (editor.enterMode == CKEDITOR.ENTER_P) return false;\n\n\t\t\t\t\t// Regardless of enterMode, a child which is not <figure> must be\n\t\t\t\t\t// either <img/> or <a><img/></a>.\n\t\t\t\t\tif (!isLinkedOrStandaloneImage(child)) return false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Centering wrapper got to be... centering. If ae_dragresize_ie11_alignClasses are defined,\n\t\t\t// check for centering class. Otherwise, check the style.\n\t\t\tif (\n\t\t\t\talignClasses\n\t\t\t\t\t? el.hasClass(alignClasses[1])\n\t\t\t\t\t: CKEDITOR.tools.parseCssText(\n\t\t\t\t\t\t\tel.attributes.style || '',\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t  )['text-align'] == 'center'\n\t\t\t)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t};\n\t}\n\n\t// Checks whether element is <img/> or <a><img/></a>.\n\t//\n\t// @param {CKEDITOR.htmlParser.element}\n\tfunction isLinkedOrStandaloneImage(el) {\n\t\tif (el.name == 'img') return true;\n\t\telse if (el.name == 'a')\n\t\t\treturn el.children.length == 1 && el.getFirst('img');\n\n\t\treturn false;\n\t}\n\n\t// Sets width and height of the widget image according to current widget data.\n\t//\n\t// @param {CKEDITOR.plugins.widget} widget\n\tfunction setDimensions(widget) {\n\t\tconst data = widget.data;\n\n\t\tconst dimensions = {\n\t\t\twidth: data.width,\n\t\t\theight: data.lock ? null : data.height,\n\t\t};\n\n\t\tconst image = widget.parts.image;\n\n\t\tfor (const d in dimensions) {\n\t\t\tif (dimensions[d]) image.setAttribute(d, dimensions[d]);\n\t\t\telse image.removeAttribute(d);\n\t\t}\n\t}\n\n\t// Defines all features related to drag-driven image resizing.\n\t//\n\t// @param {CKEDITOR.plugins.widget} widget\n\tfunction setupResizer(widget) {\n\t\tconst editor = widget.editor;\n\n\t\tconst editable = editor.editable();\n\n\t\tconst doc = editor.document;\n\n\t\t// Store the resizer in a widget for testing (#11004).\n\n\t\tconst resizer = (widget.resizer = doc.createElement('span'));\n\n\t\t// Create resizer for each corner (NE, NW, SE, SW)\n\n\t\tconst resizerNE = doc.createElement('span');\n\n\t\tconst resizerNW = doc.createElement('span');\n\n\t\tconst resizerSE = doc.createElement('span');\n\n\t\tconst resizerSW = doc.createElement('span');\n\n\t\tresizerNE.addClass('cke_image_resizer');\n\t\tresizerNE.addClass('cke_image_resizer_ne');\n\n\t\tresizerNW.addClass('cke_image_resizer');\n\t\tresizerNW.addClass('cke_image_resizer_nw');\n\n\t\tresizerSE.addClass('cke_image_resizer');\n\t\tresizerSE.addClass('cke_image_resizer_se');\n\n\t\tresizerSW.addClass('cke_image_resizer');\n\t\tresizerSW.addClass('cke_image_resizer_sw');\n\n\t\t// Add each directional resizer as a child of resizer\n\t\tresizer.append(resizerNE);\n\t\tresizer.append(resizerNW);\n\t\tresizer.append(resizerSE);\n\t\tresizer.append(resizerSW);\n\n\t\t// resizer.setAttribute( 'title', editor.lang.ae_dragresize_ie11.resizer );\n\t\tresizer.append(new CKEDITOR.dom.text('\\u200b', doc));\n\n\t\t// Inline widgets don't need a resizer wrapper as an image spans the entire widget.\n\t\tif (!widget.inline) {\n\t\t\tconst imageOrLink = widget.parts.link || widget.parts.image;\n\n\t\t\tconst oldResizeWrapper = imageOrLink.getParent();\n\n\t\t\tconst resizeWrapper = doc.createElement('span');\n\n\t\t\tresizeWrapper.addClass('cke_image_resizer_wrapper');\n\t\t\tresizeWrapper.append(imageOrLink);\n\t\t\tresizeWrapper.append(resizer);\n\t\t\twidget.element.append(resizeWrapper, true);\n\n\t\t\t// Remove the old wrapper which could came from e.g. pasted HTML\n\t\t\t// and which could be corrupted (e.g. resizer span has been lost).\n\t\t\tif (oldResizeWrapper.is('span')) oldResizeWrapper.remove();\n\t\t} else {\n\t\t\twidget.wrapper.append(resizer);\n\t\t}\n\n\t\t// Calculate values of size variables and mouse offsets.\n\t\tresizer.on('mousedown', evt => {\n\t\t\tconst image = widget.parts.image;\n\n\t\t\t// The x-coordinate of the mouse relative to the screen\n\t\t\t// when button gets pressed.\n\n\t\t\tconst startX = evt.data.$.screenX;\n\n\t\t\tconst startY = evt.data.$.screenY;\n\n\t\t\t// The initial dimensions and aspect ratio of the image.\n\n\t\t\tconst startWidth = image.$.clientWidth;\n\n\t\t\tconst startHeight = image.$.clientHeight;\n\n\t\t\tconst ratio = startWidth / startHeight;\n\n\t\t\tconst listeners = [];\n\n\t\t\tconst target = evt.data.getTarget();\n\n\t\t\tlet factorX;\n\n\t\t\tlet factorY;\n\n\t\t\tlet moveDiffX;\n\n\t\t\tlet moveDiffY;\n\n\t\t\tlet nativeEvt;\n\n\t\t\tlet newHeight;\n\n\t\t\tlet newWidth;\n\n\t\t\tlet updateData;\n\n\t\t\t// \"factorX\" and \"factorY\" can be either 1 or -1. I.e.: We need to\n\t\t\t// add/subtract the difference to get proper width, etc. Without \"factorX\"\n\t\t\t// and \"factorY\", resizer starts working the opposite way.\n\t\t\tif (target.hasClass('cke_image_resizer_ne')) {\n\t\t\t\tfactorX = 1;\n\t\t\t\tfactorY = 1;\n\t\t\t} else if (target.hasClass('cke_image_resizer_nw')) {\n\t\t\t\tfactorX = -1;\n\t\t\t\tfactorY = 1;\n\t\t\t} else if (target.hasClass('cke_image_resizer_se')) {\n\t\t\t\tfactorX = 1;\n\t\t\t\tfactorY = -1;\n\t\t\t} else if (target.hasClass('cke_image_resizer_sw')) {\n\t\t\t\tfactorX = -1;\n\t\t\t\tfactorY = -1;\n\t\t\t}\n\n\t\t\t// A class applied to editable during resizing.\n\t\t\tconst cursorClass =\n\t\t\t\t'cke_image_' +\n\t\t\t\t(!~factorY ? 's' : 'n') +\n\t\t\t\t(!~factorX ? 'w' : 'e');\n\n\t\t\t// Save the undo snapshot first: before resizing.\n\t\t\teditor.fire('saveSnapshot');\n\n\t\t\t// Mousemove listeners are removed on mouseup.\n\t\t\tattachToDocuments('mousemove', onMouseMove, listeners);\n\n\t\t\t// Clean up the mousemove listener. Update widget data if valid.\n\t\t\tattachToDocuments('mouseup', onMouseUp, listeners);\n\n\t\t\t// The entire editable will have the special cursor while resizing goes on.\n\t\t\teditable.addClass(cursorClass);\n\n\t\t\t// This is to always keep the resizer element visible while resizing.\n\t\t\tresizer.addClass('cke_image_resizing');\n\n\t\t\t// Attaches an event to a global document if inline editor.\n\t\t\t// Additionally, if classic (`iframe`-based) editor, also attaches the same event to `iframe`'s document.\n\t\t\tfunction attachToDocuments(name, callback, collection) {\n\t\t\t\tconst globalDoc = CKEDITOR.document;\n\n\t\t\t\tconst listeners = [];\n\n\t\t\t\tif (!doc.equals(globalDoc))\n\t\t\t\t\tlisteners.push(globalDoc.on(name, callback));\n\n\t\t\t\tlisteners.push(doc.on(name, callback));\n\n\t\t\t\tif (collection) {\n\t\t\t\t\tfor (let i = listeners.length; i--; )\n\t\t\t\t\t\tcollection.push(listeners.pop());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Calculate width first, and then adjust height, preserving ratio.\n\t\t\tfunction adjustToX() {\n\t\t\t\tnewWidth = startWidth + factorX * moveDiffX;\n\t\t\t\tnewHeight = Math.round(newWidth / ratio);\n\t\t\t}\n\n\t\t\t// Calculate height first, and then adjust width, preserving ratio.\n\t\t\tfunction adjustToY() {\n\t\t\t\tnewHeight = startHeight + factorY * moveDiffY;\n\t\t\t\tnewWidth = Math.round(newHeight * ratio);\n\t\t\t}\n\n\t\t\t// This is how variables refer to the geometry.\n\t\t\t// Note: x corresponds to moveOffset, this is the position of mouse\n\t\t\t// Note: o corresponds to [startX, startY].\n\t\t\t//\n\t\t\t// \t+--------------+--------------+\n\t\t\t// \t|              |              |\n\t\t\t// \t|      I       |      II      |\n\t\t\t// \t|              |              |\n\t\t\t// \t+------------- o -------------+ _ _ _\n\t\t\t// \t|              |              |      ^\n\t\t\t// \t|      VI      |     III      |      | moveDiffY\n\t\t\t// \t|              |         x _ _ _ _ _ v\n\t\t\t// \t+--------------+---------|----+\n\t\t\t// \t               |         |\n\t\t\t// \t                <------->\n\t\t\t// \t                moveDiffX\n\t\t\tfunction onMouseMove(evt) {\n\t\t\t\tnativeEvt = evt.data.$;\n\n\t\t\t\t// This is how far the mouse is from the point the button was pressed.\n\t\t\t\tmoveDiffX = nativeEvt.screenX - startX;\n\t\t\t\tmoveDiffY = startY - nativeEvt.screenY;\n\n\t\t\t\t// Resize with NE, SE drag handles\n\t\t\t\tif (factorX == 1) {\n\t\t\t\t\tif (moveDiffX <= 0) {\n\t\t\t\t\t\tadjustToY();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tadjustToX();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Resize with NW, SW drag handles\n\t\t\t\telse {\n\t\t\t\t\tif (moveDiffX <= 0) {\n\t\t\t\t\t\tadjustToX();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tadjustToY();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Don't update attributes if less than 10.\n\t\t\t\t// This is to prevent images to visually disappear.\n\t\t\t\tif (newWidth >= 15 && newHeight >= 15) {\n\t\t\t\t\timage.$.style.width = newWidth + 'px';\n\t\t\t\t\timage.$.style.height = widget.data.lock\n\t\t\t\t\t\t? 'auto'\n\t\t\t\t\t\t: newHeight + 'px';\n\n\t\t\t\t\tupdateData = true;\n\t\t\t\t} else {\n\t\t\t\t\tupdateData = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onMouseUp() {\n\t\t\t\tlet l;\n\n\t\t\t\twhile ((l = listeners.pop())) l.removeListener();\n\n\t\t\t\t// Restore default cursor by removing special class.\n\t\t\t\teditable.removeClass(cursorClass);\n\n\t\t\t\t// This is to bring back the regular behaviour of the resizer.\n\t\t\t\tresizer.removeClass('cke_image_resizing');\n\n\t\t\t\tif (updateData) {\n\t\t\t\t\twidget.setData({\n\t\t\t\t\t\theight: widget.data.lock ? null : newHeight,\n\t\t\t\t\t\twidth: newWidth,\n\t\t\t\t\t});\n\n\t\t\t\t\t// Save another undo snapshot: after resizing.\n\t\t\t\t\teditor.fire('saveSnapshot');\n\t\t\t\t}\n\n\t\t\t\t// Don't update data twice or more.\n\t\t\t\tupdateData = false;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes the alignment value of an image\n\t *\n\t * @param {CKEDITOR.dom.element} image The image element\n\t * @param {String} imageAlignment The image alignment value to be removed\n\t */\n\tconst removeWidgetAlignment = function(widget, imageAlignment) {\n\t\tif (imageAlignment === 'left' || imageAlignment === 'right') {\n\t\t\twidget.wrapper.removeStyle('float');\n\t\t} else if (imageAlignment === 'center') {\n\t\t\twidget.editor.execCommand('justifyleft');\n\t\t\twidget.editor.execCommand('justifyleft');\n\t\t}\n\t};\n\n\t// Integrates widget alignment setting with justify\n\t// plugin's commands (execution and refreshment).\n\t// @param {CKEDITOR.editor} editor\n\t// @param {String} value 'left', 'right', 'center' or 'block'\n\tfunction alignCommandIntegrator(editor) {\n\t\tconst execCallbacks = [];\n\n\t\tlet enabled;\n\n\t\treturn function(value) {\n\t\t\tconst command = editor.getCommand('justify' + value);\n\n\t\t\t// Most likely, the justify plugin isn't loaded.\n\t\t\tif (!command) return;\n\n\t\t\t// This command will be manually refreshed along with\n\t\t\t// other commands after exec.\n\t\t\texecCallbacks.push(() => {\n\t\t\t\tcommand.refresh(editor, editor.elementPath());\n\t\t\t});\n\n\t\t\tif (value in {right: 1, left: 1, center: 1}) {\n\t\t\t\tcommand.on('exec', evt => {\n\t\t\t\t\tconst widget = getFocusedWidget(editor);\n\n\t\t\t\t\tif (widget) {\n\t\t\t\t\t\tif (widget.data.align === value) {\n\t\t\t\t\t\t\tremoveWidgetAlignment(widget, value);\n\n\t\t\t\t\t\t\tdelete widget.data.align;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twidget.setData('align', value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Once the widget changed its align, all the align commands\n\t\t\t\t\t\t// must be refreshed: the event is to be cancelled.\n\t\t\t\t\t\tfor (let i = execCallbacks.length; i--; )\n\t\t\t\t\t\t\texecCallbacks[i]();\n\n\t\t\t\t\t\tevt.cancel();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcommand.on('refresh', function(evt) {\n\t\t\t\tconst widget = getFocusedWidget(editor);\n\n\t\t\t\tconst allowed = {right: 1, left: 1, center: 1};\n\n\t\t\t\tif (!widget) return;\n\n\t\t\t\t// Cache \"enabled\" on first use. This is because filter#checkFeature may\n\t\t\t\t// not be available during plugin's afterInit in the future — a moment when\n\t\t\t\t// alignCommandIntegrator is called.\n\t\t\t\tif (enabled === undefined)\n\t\t\t\t\tenabled = editor.filter.checkFeature(\n\t\t\t\t\t\teditor.widgets.registered.image.features.align\n\t\t\t\t\t);\n\n\t\t\t\t// Don't allow justify commands when widget alignment is disabled (#11004).\n\t\t\t\tif (!enabled) this.setState(CKEDITOR.TRISTATE_DISABLED);\n\t\t\t\telse {\n\t\t\t\t\tthis.setState(\n\t\t\t\t\t\twidget.data.align == value\n\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_ON\n\t\t\t\t\t\t\t: value in allowed\n\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_OFF\n\t\t\t\t\t\t\t: CKEDITOR.TRISTATE_DISABLED\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tevt.cancel();\n\t\t\t});\n\t\t};\n\t}\n\n\t// Returns the focused widget, if of the type specific for this plugin.\n\t// If no widget is focused, `null` is returned.\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {CKEDITOR.plugins.widget}\n\tfunction getFocusedWidget(editor) {\n\t\tconst widget = editor.widgets.focused;\n\n\t\tif (widget && widget.name == 'image') return widget;\n\n\t\treturn null;\n\t}\n\n\t// Returns a set of widget allowedContent rules, depending\n\t// on configurations like config#ae_dragresize_ie11_alignClasses or\n\t// config#ae_dragresize_ie11_captionedClass.\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {Object}\n\tfunction getWidgetAllowedContent(editor) {\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\tconst rules = {\n\t\t\t// Widget may need <div> or <p> centering wrapper.\n\t\t\tdiv: {\n\t\t\t\tmatch: centerWrapperChecker(editor),\n\t\t\t},\n\t\t\tp: {\n\t\t\t\tmatch: centerWrapperChecker(editor),\n\t\t\t},\n\t\t\timg: {\n\t\t\t\tattributes: '!src,alt,width,height',\n\t\t\t},\n\t\t\tfigure: {\n\t\t\t\tclasses: '!' + editor.config.ae_dragresize_ie11_captionedClass,\n\t\t\t},\n\t\t\tfigcaption: true,\n\t\t};\n\n\t\tif (alignClasses) {\n\t\t\t// Centering class from the config.\n\t\t\trules.div.classes = alignClasses[1];\n\t\t\trules.p.classes = rules.div.classes;\n\n\t\t\t// Left/right classes from the config.\n\t\t\trules.img.classes = alignClasses[0] + ',' + alignClasses[2];\n\t\t\trules.figure.classes += ',' + rules.img.classes;\n\t\t} else {\n\t\t\t// Centering with text-align.\n\t\t\trules.div.styles = 'text-align';\n\t\t\trules.p.styles = 'text-align';\n\n\t\t\trules.img.styles = 'float';\n\t\t\trules.figure.styles = 'float,display';\n\t\t}\n\n\t\treturn rules;\n\t}\n\n\t// Returns a set of widget feature rules, depending\n\t// on editor configuration. Note that the following may not cover\n\t// all the possible cases since requiredContent supports a single\n\t// tag only.\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {Object}\n\tfunction getWidgetFeatures(editor) {\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\tconst features = {\n\t\t\tdimension: {\n\t\t\t\trequiredContent: 'img[width,height]',\n\t\t\t},\n\t\t\talign: {\n\t\t\t\trequiredContent:\n\t\t\t\t\t'img' +\n\t\t\t\t\t(alignClasses ? '(' + alignClasses[0] + ')' : '{float}'),\n\t\t\t},\n\t\t\tcaption: {\n\t\t\t\trequiredContent: 'figcaption',\n\t\t\t},\n\t\t};\n\n\t\treturn features;\n\t}\n\n\t// Returns element which is styled, considering current\n\t// state of the widget.\n\t//\n\t// @see CKEDITOR.plugins.widget#applyStyle\n\t// @param {CKEDITOR.plugins.widget} widget\n\t// @returns {CKEDITOR.dom.element}\n\tfunction getStyleableElement(widget) {\n\t\treturn widget.data.hasCaption ? widget.element : widget.parts.image;\n\t}\n})();\n\n/**\n * A CSS class applied to the `<figure>` element of a captioned image.\n *\n * Read more in the [documentation](#!/guide/dev_captionedimage) and see the\n * [SDK sample](http://sdk.ckeditor.com/samples/captionedimage.html).\n *\n *\t\t// Changes the class to \"captionedImage\".\n *\t\tconfig.ae_dragresize_ie11_captionedClass = 'captionedImage';\n *\n * @cfg {String} [ae_dragresize_ie11_captionedClass='image']\n * @member CKEDITOR.config\n */\nCKEDITOR.config.ae_dragresize_ie11_captionedClass = 'image';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport {HIGH_PRIORITY} from './priorities';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_embed')) {\n\tconst REGEX_HTTP = /^https?/;\n\n\tconst REGEX_DEFAULT_LINK = /<a href=/;\n\n\tCKEDITOR.DEFAULT_AE_EMBED_URL_TPL =\n\t\t'http://alloy.iframe.ly/api/oembed?url={url}&callback={callback}';\n\tCKEDITOR.DEFAULT_AE_EMBED_WIDGET_TPL =\n\t\t'<div data-ae-embed-url=\"{url}\"></div>';\n\tCKEDITOR.DEFAULT_AE_EMBED_DEFAULT_LINK_TPL = '<a href=\"{url}\">{url}</a>';\n\t/**\n\t * CKEditor plugin which adds the infrastructure to embed urls as media objects using an oembed\n\t * service. By default, and for demoing purposes only, the oembed service is hosted in iframe.ly\n\t * at //alloy.iframe.ly/api/oembed?url={url}&callback={callback}. Note this should be changed to\n\t * a self-hosted or paid service in production environments. Access to the alloy.iframe.ly endpoint\n\t * may be restricted per domain due to significant traffic.\n\t *\n\t * This plugin adds an `embedUrl` command that can be used to easily embed a URL and transform it\n\t * to an embedded content.\n\t *\n\t * @class CKEDITOR.plugins.ae_embed\n\t */\n\tCKEDITOR.plugins.add('ae_embed', {\n\t\trequires: 'widget',\n\t\tinit(editor) {\n\t\t\tconst AE_EMBED_URL_TPL = new CKEDITOR.template(\n\t\t\t\teditor.config.embedUrlTemplate ||\n\t\t\t\t\tCKEDITOR.DEFAULT_AE_EMBED_URL_TPL\n\t\t\t);\n\t\t\tconst AE_EMBED_WIDGET_TPL = new CKEDITOR.template(\n\t\t\t\teditor.config.embedWidgetTpl ||\n\t\t\t\t\tCKEDITOR.DEFAULT_AE_EMBED_WIDGET_TPL\n\t\t\t);\n\t\t\tconst AE_EMBED_DEFAULT_LINK_TPL = new CKEDITOR.template(\n\t\t\t\teditor.config.embedLinkDefaultTpl ||\n\t\t\t\t\tCKEDITOR.DEFAULT_AE_EMBED_DEFAULT_LINK_TPL\n\t\t\t);\n\n\t\t\t// Default function to upcast DOM elements to embed widgets.\n\t\t\t// It matches CKEDITOR.DEFAULT_AE_EMBED_WIDGET_TPL\n\t\t\tconst defaultEmbedWidgetUpcastFn = function(element, data) {\n\t\t\t\tif (\n\t\t\t\t\telement.name === 'div' &&\n\t\t\t\t\telement.attributes['data-ae-embed-url']\n\t\t\t\t) {\n\t\t\t\t\tdata.url = element.attributes['data-ae-embed-url'];\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Create a embedUrl command that can be invoked to easily embed media URLs\n\t\t\teditor.addCommand('embedUrl', {\n\t\t\t\texec(editor, data) {\n\t\t\t\t\teditor.insertHtml(\n\t\t\t\t\t\tAE_EMBED_WIDGET_TPL.output({\n\t\t\t\t\t\t\turl: data.url,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// Create a widget to properly handle embed operations\n\t\t\teditor.widgets.add('ae_embed', {\n\t\t\t\tmask: true,\n\t\t\t\trequiredContent: 'div[data-ae-embed-url]',\n\n\t\t\t\t/**\n\t\t\t\t * Listener to be executed every time the widget's data changes. It takes care of\n\t\t\t\t * requesting the embed object to the configured oembed service and render it in\n\t\t\t\t * the editor\n\t\t\t\t *\n\t\t\t\t * @method data\n\t\t\t\t * @param {event} event Data change event\n\t\t\t\t */\n\t\t\t\tdata(event) {\n\t\t\t\t\tconst widget = this;\n\n\t\t\t\t\tconst url = event.data.url;\n\n\t\t\t\t\tif (url) {\n\t\t\t\t\t\tCKEDITOR.tools.jsonp(\n\t\t\t\t\t\t\tAE_EMBED_URL_TPL,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\turl: encodeURIComponent(url),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tresponse => {\n\t\t\t\t\t\t\t\tif (response.html) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tREGEX_DEFAULT_LINK.test(response.html)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\twidget.createATag(url);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\twidget.element.setHtml(response.html);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\twidget.createATag(url);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t_msg => {\n\t\t\t\t\t\t\t\twidget.createATag(url);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tcreateATag(url) {\n\t\t\t\t\tthis.editor.execCommand('undo');\n\n\t\t\t\t\tconst aTagHtml = AE_EMBED_DEFAULT_LINK_TPL.output({\n\t\t\t\t\t\turl,\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.editor.insertHtml(aTagHtml);\n\t\t\t\t\tthis.editor.fire('actionPerformed', this);\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * Function used to upcast an element to ae_embed widgets.\n\t\t\t\t *\n\t\t\t\t * @method upcast\n\t\t\t\t * @param {CKEDITOR.htmlParser.element} element The element to be checked\n\t\t\t\t * @param {Object} data The object that will be passed to the widget\n\t\t\t\t */\n\t\t\t\tupcast(element, data) {\n\t\t\t\t\tconst embedWidgetUpcastFn =\n\t\t\t\t\t\teditor.config.embedWidgetUpcastFn ||\n\t\t\t\t\t\tdefaultEmbedWidgetUpcastFn;\n\n\t\t\t\t\treturn embedWidgetUpcastFn(element, data);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// Add a listener to handle paste events and turn links into embed objects\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\teditor.on(\n\t\t\t\t\t'paste',\n\t\t\t\t\tevent => {\n\t\t\t\t\t\tconst link = event.data.dataValue;\n\n\t\t\t\t\t\tif (REGEX_HTTP.test(link)) {\n\t\t\t\t\t\t\tevent.stop();\n\n\t\t\t\t\t\t\teditor.execCommand('embedUrl', {\n\t\t\t\t\t\t\t\turl: event.data.dataValue,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t// Make sure we run before autolink's paste handler,\n\t\t\t\t\t// otherwise the link will be turned into an anchor and our\n\t\t\t\t\t// REGEX_HTTP test will fail.\n\t\t\t\t\tHIGH_PRIORITY\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// Add a listener to handle selection change events and properly detect editor\n\t\t\t// interactions on the widgets without messing with widget native selection\n\t\t\teditor.on('selectionChange', _event => {\n\t\t\t\tconst selection = editor.getSelection();\n\n\t\t\t\tif (selection) {\n\t\t\t\t\tconst element = selection.getSelectedElement();\n\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tconst widgetElement = element.findOne(\n\t\t\t\t\t\t\t'[data-widget=\"ae_embed\"]'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (widgetElement) {\n\t\t\t\t\t\t\tconst region = element.getClientRect();\n\n\t\t\t\t\t\t\tconst scrollPosition = new CKEDITOR.dom.window(\n\t\t\t\t\t\t\t\twindow\n\t\t\t\t\t\t\t).getScrollPosition();\n\t\t\t\t\t\t\tregion.left -= scrollPosition.x;\n\t\t\t\t\t\t\tregion.top += scrollPosition.y;\n\n\t\t\t\t\t\t\tregion.direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\n\t\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\t\tnativeEvent: {},\n\t\t\t\t\t\t\t\tselectionData: {\n\t\t\t\t\t\t\t\t\telement: widgetElement,\n\t\t\t\t\t\t\t\t\tregion,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Add a filter to skip filtering widget elements\n\t\t\teditor.filter.addElementCallback(element => {\n\t\t\t\tif ('data-ae-embed-url' in element.attributes) {\n\t\t\t\t\treturn CKEDITOR.FILTER_SKIP_TREE;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Priorities that can be used to control the order in which event handlers run.\n *\n * @see https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_event.html#method-on\n */\nexport const DEFAULT_PRIORITY = 10;\nexport const HIGH_PRIORITY = 5;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Resizer from './Resizer.es';\n\nif (!CKEDITOR.plugins.get('embedurl')) {\n\tconst REGEX_HTTP = /^https?/;\n\n\tCKEDITOR.DEFAULT_LFR_EMBED_WIDGET_TPL =\n\t\t'<div data-embed-url=\"{url}\" class=\"embed-responsive embed-responsive-16by9\">{content}<div class=\"embed-help-message\">{helpMessageIcon}<span> {helpMessage}</span></div></div><br>';\n\n\t/**\n\t * Enum for supported embed alignments\n\t * @type {Object}\n\t */\n\n\tconst EMBED_ALIGNMENT = {\n\t\tCENTER: 'center',\n\t\tLEFT: 'left',\n\t\tRIGHT: 'right',\n\t};\n\n\t/**\n\t * Enum values for supported embed alignments\n\t * @type {Array}\n\t */\n\n\tconst ALIGN_VALUES = [\n\t\tEMBED_ALIGNMENT.CENTER,\n\t\tEMBED_ALIGNMENT.LEFT,\n\t\tEMBED_ALIGNMENT.RIGHT,\n\t];\n\n\t/**\n\t * Necessary styles for the center alignment\n\t * @type {Array.<Object>}\n\t */\n\n\tconst CENTERED_EMBED_STYLE = [\n\t\t{\n\t\t\tname: 'display',\n\t\t\tvalue: 'block',\n\t\t},\n\t\t{\n\t\t\tname: 'margin-left',\n\t\t\tvalue: 'auto',\n\t\t},\n\t\t{\n\t\t\tname: 'margin-right',\n\t\t\tvalue: 'auto',\n\t\t},\n\t];\n\n\t/**\n\t * Retrieves the alignment value of an embed element.\n\t *\n\t * @param {CKEDITOR.dom.element} embed The embed element\n\t * @return {String} The alignment value\n\t */\n\n\tconst getEmbedAlignment = function(embed) {\n\t\tlet embedAlignment = embed.getStyle('float');\n\n\t\tif (\n\t\t\t!embedAlignment ||\n\t\t\tembedAlignment === 'inherit' ||\n\t\t\tembedAlignment === 'none'\n\t\t) {\n\t\t\tembedAlignment = embed.getAttribute('align');\n\t\t}\n\n\t\tif (!embedAlignment) {\n\t\t\tconst centeredEmbed = CENTERED_EMBED_STYLE.every(style => {\n\t\t\t\tlet styleCheck = embed.getStyle(style.name) === style.value;\n\n\t\t\t\tif (!styleCheck && style.vendorPrefixes) {\n\t\t\t\t\tstyleCheck = style.vendorPrefixes.some(\n\t\t\t\t\t\tvendorPrefix =>\n\t\t\t\t\t\t\tembed.getStyle(vendorPrefix + style.name) ===\n\t\t\t\t\t\t\tstyle.value\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn styleCheck;\n\t\t\t});\n\n\t\t\tembedAlignment = centeredEmbed ? EMBED_ALIGNMENT.CENTER : null;\n\t\t}\n\n\t\treturn embedAlignment;\n\t};\n\n\t/**\n\t * Removes the alignment value of an embed\n\t *\n\t * @param {CKEDITOR.dom.element} embed The embed element\n\t * @param {String} embedAlignment The embed alignment value to be removed\n\t */\n\n\tconst removeEmbedAlignment = function(embed, embedAlignment) {\n\t\tif (\n\t\t\tembedAlignment === EMBED_ALIGNMENT.LEFT ||\n\t\t\tembedAlignment === EMBED_ALIGNMENT.RIGHT\n\t\t) {\n\t\t\tembed.removeStyle('float');\n\n\t\t\tif (embedAlignment === getEmbedAlignment(embed)) {\n\t\t\t\tembed.removeAttribute('align');\n\t\t\t}\n\t\t} else if (embedAlignment === EMBED_ALIGNMENT.CENTER) {\n\t\t\tCENTERED_EMBED_STYLE.forEach(style => {\n\t\t\t\tembed.removeStyle(style.name);\n\n\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix =>\n\t\t\t\t\t\tembed.removeStyle(vendorPrefix + style.name)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Sets the alignment value of an embed\n\t *\n\t * @param {CKEDITOR.dom.element} embed The embed element\n\t * @param {String} embedAlignment The embed alignment value to be set\n\t */\n\n\tconst setEmbedAlignment = function(embed, embedAlignment) {\n\t\tremoveEmbedAlignment(embed, getEmbedAlignment(embed));\n\n\t\tif (\n\t\t\tembedAlignment === EMBED_ALIGNMENT.LEFT ||\n\t\t\tembedAlignment === EMBED_ALIGNMENT.RIGHT\n\t\t) {\n\t\t\tembed.setStyle('float', embedAlignment);\n\t\t} else if (embedAlignment === EMBED_ALIGNMENT.CENTER) {\n\t\t\tCENTERED_EMBED_STYLE.forEach(style => {\n\t\t\t\tembed.setStyle(style.name, style.value);\n\n\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix =>\n\t\t\t\t\t\tembed.setStyle(vendorPrefix + style.name, style.value)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tconst getSelectedElement = function(editor) {\n\t\tconst result = {\n\t\t\talignment: null,\n\t\t\telement: null,\n\t\t};\n\n\t\tconst selection = editor.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif (\n\t\t\t\tselectedElement &&\n\t\t\t\tselectedElement.getAttribute('data-cke-widget-wrapper')\n\t\t\t) {\n\t\t\t\tresult.alignment = getEmbedAlignment(selectedElement);\n\t\t\t\tresult.element = selectedElement;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tconst resizeElement = function(el, width, height) {\n\t\tconst wrapperElement = el.parentElement;\n\n\t\tif (wrapperElement && width > 0 && height > 0) {\n\t\t\tconst rect = wrapperElement.getBoundingClientRect();\n\n\t\t\tconst pwidth =\n\t\t\t\twidth >= rect.width\n\t\t\t\t\t? 100\n\t\t\t\t\t: Math.floor((width / rect.width) * 100);\n\t\t\tconst style = `width:${pwidth}%;`;\n\n\t\t\twrapperElement.setAttribute('style', style);\n\n\t\t\tconst widgetElement = wrapperElement.querySelector(\n\t\t\t\t'[data-widget=\"embedurl\"]'\n\t\t\t);\n\n\t\t\tif (widgetElement) {\n\t\t\t\tconst styles =\n\t\t\t\t\tJSON.parse(widgetElement.getAttribute('data-styles')) || {};\n\n\t\t\t\tstyles.width = `${width}px`;\n\t\t\t\tstyles.height = `${height}px`;\n\n\t\t\t\twidgetElement.setAttribute(\n\t\t\t\t\t'data-styles',\n\t\t\t\t\tJSON.stringify(styles)\n\t\t\t\t);\n\n\t\t\t\tconst iframeElement = widgetElement.querySelector('iframe');\n\n\t\t\t\tif (iframeElement) {\n\t\t\t\t\tiframeElement.setAttribute('width', width);\n\t\t\t\t\tiframeElement.setAttribute('height', height);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst selectWidget = function(editor) {\n\t\tsetTimeout(() => {\n\t\t\tconst selection = editor.getSelection();\n\n\t\t\tif (selection) {\n\t\t\t\tconst wrapperElement = selection.root.find(\n\t\t\t\t\t'[data-cke-widget-wrapper]'\n\t\t\t\t);\n\n\t\t\t\tif (wrapperElement) {\n\t\t\t\t\tconst elementList = wrapperElement.$;\n\t\t\t\t\tif (elementList.length > 0) {\n\t\t\t\t\t\tconst lastElement = new CKEDITOR.dom.element(\n\t\t\t\t\t\t\telementList[elementList.length - 1]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst imageElement = lastElement.findOne('img');\n\t\t\t\t\t\tconst widgetElement = lastElement.findOne(\n\t\t\t\t\t\t\t'[data-widget=\"embedurl\"]'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (imageElement && widgetElement) {\n\t\t\t\t\t\t\tconst range = editor.createRange();\n\n\t\t\t\t\t\t\trange.setStart(widgetElement, 0);\n\t\t\t\t\t\t\trange.setEnd(imageElement, 1);\n\n\t\t\t\t\t\t\tselection.selectRanges([range]);\n\t\t\t\t\t\t\tselection.selectElement(lastElement);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 0);\n\t};\n\n\tlet currentAlignment = null;\n\tlet currentElement = null;\n\tlet resizer = null;\n\n\t/**\n\t * CKEditor plugin which adds the infrastructure to embed urls as media objects\n\t *\n\t * This plugin adds an `embedUrl` command that can be used to easily embed a URL and transform it\n\t * to an embedded content.\n\t *\n\t * @class CKEDITOR.plugins.embedurl\n\t */\n\n\tCKEDITOR.plugins.add('embedurl', {\n\t\trequires: 'widget',\n\n\t\tinit: editor => {\n\t\t\tconst LFR_EMBED_WIDGET_TPL = new CKEDITOR.template(\n\t\t\t\teditor.config.embedWidgetTpl ||\n\t\t\t\t\tCKEDITOR.DEFAULT_LFR_EMBED_WIDGET_TPL\n\t\t\t);\n\n\t\t\tlet providers = editor.config.embedProviders || [];\n\n\t\t\tproviders = providers.map(provider => {\n\t\t\t\treturn {\n\t\t\t\t\tid: provider.id,\n\t\t\t\t\ttpl: new CKEDITOR.template(\n\t\t\t\t\t\t`<div data-embed-id=\"{embedId}\">${provider.tpl}</div>`\n\t\t\t\t\t),\n\t\t\t\t\ttype: provider.type,\n\t\t\t\t\turlSchemes: provider.urlSchemes.map(\n\t\t\t\t\t\tscheme => new RegExp(scheme)\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst generateEmbedContent = (url, content) => {\n\t\t\t\treturn LFR_EMBED_WIDGET_TPL.output({\n\t\t\t\t\tcontent,\n\t\t\t\t\thelpMessage: AlloyEditor.Strings.videoPlaybackDisabled,\n\t\t\t\t\thelpMessageIcon: Liferay.Util.getLexiconIconTpl(\n\t\t\t\t\t\t'info-circle'\n\t\t\t\t\t),\n\t\t\t\t\turl,\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst defaultEmbedWidgetUpcastFn = (element, data) => {\n\t\t\t\tlet upcastWidget = false;\n\n\t\t\t\tif (\n\t\t\t\t\telement.name === 'div' &&\n\t\t\t\t\telement.attributes['data-embed-url']\n\t\t\t\t) {\n\t\t\t\t\tdata.url = element.attributes['data-embed-url'];\n\n\t\t\t\t\tupcastWidget = true;\n\t\t\t\t} else if (\n\t\t\t\t\telement.name === 'div' &&\n\t\t\t\t\telement.attributes['data-embed-id']\n\t\t\t\t) {\n\t\t\t\t\tconst iframe = element.children[0];\n\n\t\t\t\t\tdata.url = iframe.attributes.src;\n\n\t\t\t\t\tdelete element.attributes.style;\n\n\t\t\t\t\tconst embedContent = generateEmbedContent(\n\t\t\t\t\t\tdata.url,\n\t\t\t\t\t\telement.getOuterHtml()\n\t\t\t\t\t);\n\n\t\t\t\t\tconst widgetFragment = new CKEDITOR.htmlParser.fragment.fromHtml(\n\t\t\t\t\t\tembedContent\n\t\t\t\t\t);\n\n\t\t\t\t\tupcastWidget = widgetFragment.children[0];\n\n\t\t\t\t\tupcastWidget.attributes['data-styles'] =\n\t\t\t\t\t\telement.attributes['data-styles'];\n\t\t\t\t\tupcastWidget.removeClass('embed-responsive');\n\t\t\t\t\tupcastWidget.removeClass('embed-responsive-16by9');\n\n\t\t\t\t\telement.replaceWith(upcastWidget);\n\t\t\t\t}\n\n\t\t\t\treturn upcastWidget;\n\t\t\t};\n\n\t\t\tconst showError = errorMsg => {\n\t\t\t\teditor.fire('error', errorMsg);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\teditor.getSelection().removeAllRanges();\n\n\t\t\t\t\teditor.focus();\n\n\t\t\t\t\tresizer.hide();\n\t\t\t\t}, 0);\n\t\t\t};\n\n\t\t\teditor.addCommand('embedUrl', {\n\t\t\t\texec: (editor, data) => {\n\t\t\t\t\tconst type = data.type;\n\t\t\t\t\tconst url = data.url;\n\t\t\t\t\tlet content;\n\n\t\t\t\t\tif (REGEX_HTTP.test(url)) {\n\t\t\t\t\t\tconst validProvider = providers\n\t\t\t\t\t\t\t.filter(provider => {\n\t\t\t\t\t\t\t\treturn type ? provider.type === type : true;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.some(provider => {\n\t\t\t\t\t\t\t\tconst scheme = provider.urlSchemes.find(\n\t\t\t\t\t\t\t\t\tscheme => scheme.test(url)\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (scheme) {\n\t\t\t\t\t\t\t\t\tconst embedId = scheme.exec(url)[1];\n\n\t\t\t\t\t\t\t\t\tcontent = provider.tpl.output({\n\t\t\t\t\t\t\t\t\t\tembedId,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn scheme;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (validProvider) {\n\t\t\t\t\t\t\teditor._selectEmbedWidget = url;\n\n\t\t\t\t\t\t\tconst embedContent = generateEmbedContent(\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\teditor.insertHtml(embedContent);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowError(AlloyEditor.Strings.platformNotSupported);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshowError(AlloyEditor.Strings.enterValidUrl);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\n\t\t\teditor.widgets.add('embedurl', {\n\t\t\t\tdraggable: false,\n\t\t\t\tmask: true,\n\t\t\t\trequiredContent: 'div[data-embed-url]',\n\n\t\t\t\tdata(event) {\n\t\t\t\t\tconst instance = this;\n\n\t\t\t\t\t// Sync dimensions and alignment with editor wrapper\n\n\t\t\t\t\tlet styles = null;\n\n\t\t\t\t\tconst stylesJSON = instance.element.getAttribute(\n\t\t\t\t\t\t'data-styles'\n\t\t\t\t\t);\n\n\t\t\t\t\tif (stylesJSON) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstyles = JSON.parse(stylesJSON);\n\t\t\t\t\t\t} catch (_error) {\n\t\t\t\t\t\t\tstyles = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!styles) {\n\t\t\t\t\t\tconst iframe = instance.wrapper.findOne('iframe');\n\n\t\t\t\t\t\tconst bounds = instance.wrapper.$.getBoundingClientRect();\n\t\t\t\t\t\tconst width = iframe.getAttribute('width');\n\n\t\t\t\t\t\tconst pwidth =\n\t\t\t\t\t\t\twidth >= bounds.width\n\t\t\t\t\t\t\t\t? 100\n\t\t\t\t\t\t\t\t: Math.round((width / bounds.width) * 100);\n\n\t\t\t\t\t\tstyles = {\n\t\t\t\t\t\t\twidth: `${pwidth}%`,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tinstance.wrapper.setAttribute(\n\t\t\t\t\t\t'style',\n\t\t\t\t\t\tCKEDITOR.tools.writeCssText(styles)\n\t\t\t\t\t);\n\n\t\t\t\t\tif (editor._selectEmbedWidget === event.data.url) {\n\t\t\t\t\t\tselectWidget(editor);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tdowncast(widget) {\n\t\t\t\t\tconst embedContent = widget.children[0];\n\n\t\t\t\t\tembedContent.attributes.class =\n\t\t\t\t\t\t'embed-responsive embed-responsive-16by9';\n\n\t\t\t\t\tembedContent.attributes['data-styles'] = JSON.stringify(\n\t\t\t\t\t\tCKEDITOR.tools.parseCssText(\n\t\t\t\t\t\t\twidget.parent.attributes.style\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\tembedContent.attributes.style =\n\t\t\t\t\t\twidget.parent.attributes.style;\n\n\t\t\t\t\treturn embedContent;\n\t\t\t\t},\n\n\t\t\t\tupcast(element, data) {\n\t\t\t\t\tconst embedWidgetUpcastFn =\n\t\t\t\t\t\teditor.config.embedWidgetUpcastFn ||\n\t\t\t\t\t\tdefaultEmbedWidgetUpcastFn;\n\n\t\t\t\t\treturn embedWidgetUpcastFn(element, data);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\twindow.addEventListener(\n\t\t\t\t'resize',\n\t\t\t\t() => {\n\t\t\t\t\tresizer.hide();\n\t\t\t\t\tselectWidget(editor);\n\t\t\t\t},\n\t\t\t\tfalse\n\t\t\t);\n\n\t\t\teditor.on('selectionChange', _event => {\n\t\t\t\tconst selection = editor.getSelection();\n\n\t\t\t\tif (selection) {\n\t\t\t\t\tconst element = selection.getSelectedElement();\n\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tconst widgetElement = element.findOne(\n\t\t\t\t\t\t\t'[data-widget=\"embedurl\"]'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (widgetElement) {\n\t\t\t\t\t\t\tconst scrollPosition = new CKEDITOR.dom.window(\n\t\t\t\t\t\t\t\twindow\n\t\t\t\t\t\t\t).getScrollPosition();\n\n\t\t\t\t\t\t\tconst region = element.getClientRect();\n\n\t\t\t\t\t\t\tregion.direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t\t\t\t\t\tregion.left -= scrollPosition.x;\n\t\t\t\t\t\t\tregion.top += scrollPosition.y;\n\n\t\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\t\tnativeEvent: {},\n\t\t\t\t\t\t\t\tselectionData: {\n\t\t\t\t\t\t\t\t\telement: widgetElement,\n\t\t\t\t\t\t\t\t\tregion,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst imageElement = element.findOne(\n\t\t\t\t\t\t\t'img.cke_widget_mask'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (imageElement) {\n\t\t\t\t\t\t\tresizer.show(imageElement.$);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresizer.hide();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\teditor.on('destroy', () => {\n\t\t\t\tconst resizeElement = document.getElementById('ckimgrsz');\n\n\t\t\t\tif (resizeElement) {\n\t\t\t\t\tresizeElement.remove();\n\t\t\t\t}\n\n\t\t\t\tdocument.removeEventListener('mousedown', mouseDownListener);\n\t\t\t});\n\n\t\t\teditor.on('blur', () => {\n\t\t\t\tresizer.hide();\n\t\t\t});\n\n\t\t\teditor.filter.addElementCallback(element => {\n\t\t\t\tif ('data-embed-url' in element.attributes) {\n\t\t\t\t\treturn CKEDITOR.FILTER_SKIP_TREE;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst mouseDownListener = event => {\n\t\t\t\tconst result = getSelectedElement(editor);\n\n\t\t\t\tcurrentAlignment = result.alignment;\n\t\t\t\tcurrentElement = result.element;\n\n\t\t\t\tif (resizer.isHandle(event.target)) {\n\t\t\t\t\tresizer.initDrag(event);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tresizer = new Resizer(editor, {\n\t\t\t\tonComplete(element, width, height) {\n\t\t\t\t\tresizeElement(element, width, height);\n\n\t\t\t\t\tif (currentAlignment && currentElement) {\n\t\t\t\t\t\tsetEmbedAlignment(currentElement, currentAlignment);\n\t\t\t\t\t}\n\t\t\t\t\tselectWidget(editor);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tdocument.addEventListener('mousedown', mouseDownListener, false);\n\t\t},\n\n\t\tafterInit: editor => {\n\t\t\tALIGN_VALUES.forEach(alignValue => {\n\t\t\t\tconst command = editor.getCommand('justify' + alignValue);\n\n\t\t\t\tif (command) {\n\t\t\t\t\tcommand.on('exec', event => {\n\t\t\t\t\t\tconst selectedElement = editor\n\t\t\t\t\t\t\t.getSelection()\n\t\t\t\t\t\t\t.getSelectedElement();\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tselectedElement &&\n\t\t\t\t\t\t\tselectedElement.getAttribute(\n\t\t\t\t\t\t\t\t'data-cke-widget-wrapper'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst selectedEmbed = selectedElement.findOne(\n\t\t\t\t\t\t\t\t'[data-widget=\"embedurl\"] [data-embed-id]'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (selectedEmbed) {\n\t\t\t\t\t\t\t\tconst embedAlignment = getEmbedAlignment(\n\t\t\t\t\t\t\t\t\tselectedElement\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (embedAlignment === alignValue) {\n\t\t\t\t\t\t\t\t\tremoveEmbedAlignment(\n\t\t\t\t\t\t\t\t\t\tselectedElement,\n\t\t\t\t\t\t\t\t\t\talignValue\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetEmbedAlignment(\n\t\t\t\t\t\t\t\t\t\tselectedElement,\n\t\t\t\t\t\t\t\t\t\talignValue\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcurrentElement = selectedElement;\n\t\t\t\t\t\t\t\tcurrentAlignment = getEmbedAlignment(\n\t\t\t\t\t\t\t\t\tselectedElement\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tconst imageElement = selectedElement.findOne(\n\t\t\t\t\t\t\t\t\t'img'\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (imageElement) {\n\t\t\t\t\t\t\t\t\tresizer.show(imageElement.$);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tevent.cancel();\n\n\t\t\t\t\t\t\t\tconst elementPath = new CKEDITOR.dom.elementPath(\n\t\t\t\t\t\t\t\t\tselectedElement\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tALIGN_VALUES.forEach(alignValue => {\n\t\t\t\t\t\t\t\t\tconst command = editor.getCommand(\n\t\t\t\t\t\t\t\t\t\t'justify' + alignValue\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tif (command) {\n\t\t\t\t\t\t\t\t\t\tcommand.refresh(editor, elementPath);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tcommand.on('refresh', event => {\n\t\t\t\t\t\tconst lastElement = event.data.path.lastElement;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlastElement &&\n\t\t\t\t\t\t\tlastElement.getAttribute(\n\t\t\t\t\t\t\t\t'data-cke-widget-wrapper'\n\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\tlastElement.findOne('[data-widget] [data-embed-id]')\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst embedAlignment = getEmbedAlignment(\n\t\t\t\t\t\t\t\tlastElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tevent.sender.setState(\n\t\t\t\t\t\t\t\tembedAlignment === alignValue\n\t\t\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_ON\n\t\t\t\t\t\t\t\t\t: CKEDITOR.TRISTATE_OFF\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tevent.cancel();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t});\n}\n\nexport default CKEDITOR.plugins.get('embedurl');\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport DragEvent from './DragEvent.es';\n\nconst IMAGE_HANDLES = ['tl', 'tr', 'bl', 'br'];\n\nconst POSITION_ELEMENT_FN = {\n\tbl(handle, left, top, box) {\n\t\tpositionElement(handle, -3 + left, box.height - 4 + top);\n\t},\n\tbr(handle, left, top, box) {\n\t\tpositionElement(handle, box.width - 4 + left, box.height - 4 + top);\n\t},\n\trm(handle, left, top, box) {\n\t\tpositionElement(\n\t\t\thandle,\n\t\t\tbox.width - 4 + left,\n\t\t\tMath.round(box.height / 2) - 3 + top\n\t\t);\n\t},\n\ttl(handle, left, top, _box) {\n\t\tpositionElement(handle, left - 3, top - 3);\n\t},\n\ttr(handle, left, top, box) {\n\t\tpositionElement(handle, box.width - 4 + left, -3 + top);\n\t},\n};\n\nconst positionElement = (el, left, top) => {\n\tel.style.left = `${left}px`;\n\tel.style.top = `${top}px`;\n};\n\nconst getBoundingBox = (window, el) => {\n\tconst rect = el.getBoundingClientRect();\n\n\treturn {\n\t\theight: rect.height,\n\t\tleft: rect.left + window.pageXOffset,\n\t\ttop: rect.top + window.pageYOffset,\n\t\twidth: rect.width,\n\t};\n};\n\nclass Resizer {\n\tconstructor(editor, cfg = {}) {\n\t\tthis.cfg = cfg;\n\t\tthis.editor = editor;\n\n\t\tthis.document = editor.document ? editor.document.$ : document;\n\t\tthis.window = editor.window ? editor.window.$ : window;\n\n\t\tthis.box = null;\n\t\tthis.container = null;\n\t\tthis.handles = {};\n\t\tthis.preview = null;\n\t\tthis.previewBox = null;\n\t\tthis.result = null;\n\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tthis.container = this.document.createElement('div');\n\t\tthis.container.id = 'ckimgrsz';\n\n\t\tthis.preview = this.document.createElement('span');\n\n\t\tthis.container.appendChild(this.preview);\n\n\t\tthis.handles = {};\n\n\t\tIMAGE_HANDLES.forEach(handleName => {\n\t\t\tthis.handles[handleName] = this.createHandle(handleName);\n\t\t});\n\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tthis.container.appendChild(this.handles[keys[i]]);\n\t\t}\n\t}\n\n\tcreateHandle(name) {\n\t\tconst el = this.document.createElement('i');\n\n\t\tel.classList.add(name);\n\n\t\treturn el;\n\t}\n\n\tisHandle(el) {\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tlet result = false;\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tif (this.handles[keys[i]] === el) {\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tshow(el) {\n\t\tconst uiNode = this.editor.config.uiNode || document.body;\n\n\t\tthis.el = el;\n\n\t\tthis.box = getBoundingBox(this.window, this.el);\n\n\t\tpositionElement(\n\t\t\tthis.container,\n\t\t\tthis.box.left,\n\t\t\tthis.box.top + uiNode.scrollTop\n\t\t);\n\n\t\tuiNode.appendChild(this.container);\n\n\t\tthis.el.classList.add('ckimgrsz');\n\n\t\tthis.showHandles();\n\t}\n\n\thide() {\n\t\tconst elements = this.document.getElementsByClassName('ckimgrsz');\n\n\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\telements[i].classList.remove('ckimgrsz');\n\t\t}\n\n\t\tthis.hideHandles();\n\n\t\tif (this.container.parentNode) {\n\t\t\tthis.container.parentNode.removeChild(this.container);\n\t\t}\n\t}\n\n\tinitDrag(event) {\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst drag = new DragEvent(this.window, this.document);\n\n\t\tdrag.onStart = () => {\n\t\t\tthis.showPreview();\n\n\t\t\tthis.isDragging = true;\n\n\t\t\tthis.editor.getSelection().lock();\n\t\t};\n\n\t\tdrag.onDrag = () => {\n\t\t\tthis.calculateSize(drag);\n\n\t\t\tconst editorBounds = this.editor.element.$.getBoundingClientRect();\n\n\t\t\tif (this.previewBox.width >= editorBounds.width) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.updatePreview();\n\n\t\t\tconst box = this.previewBox;\n\n\t\t\tthis.updateHandles(box, box.left, box.top);\n\t\t};\n\n\t\tdrag.onRelease = () => {\n\t\t\tthis.hidePreview();\n\n\t\t\tthis.isDragging = false;\n\n\t\t\tthis.hide();\n\n\t\t\tthis.editor.getSelection().unlock();\n\n\t\t\tthis.editor.fire('saveSnapshot');\n\t\t};\n\n\t\tdrag.onComplete = () => {\n\t\t\tthis.resizeComplete();\n\n\t\t\tthis.editor.fire('saveSnapshot');\n\t\t};\n\n\t\tdrag.start(event);\n\t}\n\n\tupdateHandles(box, left = 0, top = 0) {\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tPOSITION_ELEMENT_FN[keys[i]](this.handles[keys[i]], left, top, box);\n\t\t}\n\t}\n\n\tshowHandles() {\n\t\tthis.updateHandles(this.box);\n\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tthis.handles[keys[i]].style.display = 'block';\n\t\t}\n\t}\n\n\thideHandles() {\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tthis.handles[keys[i]].style.display = 'none';\n\t\t}\n\t}\n\n\tshowPreview() {\n\t\tthis.calculateSize();\n\n\t\tthis.updatePreview();\n\n\t\tthis.preview.style.display = 'block';\n\t}\n\n\tupdatePreview() {\n\t\tpositionElement(\n\t\t\tthis.preview,\n\t\t\tthis.previewBox.left,\n\t\t\tthis.previewBox.top\n\t\t);\n\n\t\tthis.preview.style.height = `${this.previewBox.height}px`;\n\t\tthis.preview.style.width = `${this.previewBox.width}px`;\n\t}\n\n\thidePreview() {\n\t\tconst box = getBoundingBox(this.window, this.preview);\n\n\t\tthis.result = {\n\t\t\theight: box.height,\n\t\t\twidth: box.width,\n\t\t};\n\n\t\tthis.preview.style.display = 'none';\n\t}\n\n\tcalculateSize(data) {\n\t\tthis.previewBox = {\n\t\t\theight: this.box.height,\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\twidth: this.box.width,\n\t\t};\n\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst className = data.target.className;\n\n\t\tif (className.indexOf('r') >= 0) {\n\t\t\tthis.previewBox.width = Math.max(32, this.box.width + data.delta.x);\n\t\t}\n\n\t\tif (className.indexOf('b') >= 0) {\n\t\t\tthis.previewBox.height = Math.max(\n\t\t\t\t32,\n\t\t\t\tthis.box.height + data.delta.y\n\t\t\t);\n\t\t}\n\n\t\tif (className.indexOf('l') >= 0) {\n\t\t\tthis.previewBox.width = Math.max(32, this.box.width - data.delta.x);\n\t\t}\n\n\t\tif (className.indexOf('t') >= 0) {\n\t\t\tthis.previewBox.height = Math.max(\n\t\t\t\t32,\n\t\t\t\tthis.box.height - data.delta.y\n\t\t\t);\n\t\t}\n\n\t\tif (className.indexOf('m') < 0 && !data.keys.shift) {\n\t\t\tconst ratio = this.box.width / this.box.height;\n\n\t\t\tif (this.previewBox.width / this.previewBox.height > ratio) {\n\t\t\t\tthis.previewBox.height = Math.round(\n\t\t\t\t\tthis.previewBox.width / ratio\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.previewBox.width = Math.round(\n\t\t\t\t\tthis.previewBox.height * ratio\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (className.indexOf('l') >= 0) {\n\t\t\tthis.previewBox.left = this.box.width - this.previewBox.width;\n\t\t}\n\n\t\tif (className.indexOf('t') >= 0) {\n\t\t\tthis.previewBox.top = this.box.height - this.previewBox.height;\n\t\t}\n\t}\n\n\tresizeComplete() {\n\t\tthis.cfg.onComplete(this.el, this.result.width, this.result.height);\n\t}\n}\n\nexport {Resizer};\nexport default Resizer;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nclass DragEvent {\n\tconstructor(window, document) {\n\t\tthis.document = document;\n\t\tthis.window = window;\n\n\t\tthis.events = {\n\t\t\tkeydown: this.keydown.bind(this),\n\t\t\tmousemove: this.mousemove.bind(this),\n\t\t\tmouseup: this.mouseup.bind(this),\n\t\t};\n\t}\n\n\tstart(event) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.target = event.target;\n\n\t\tthis.className = this.target.className;\n\n\t\tthis.startPos = {\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY,\n\t\t};\n\n\t\tthis.update(event);\n\n\t\tthis.document.addEventListener('keydown', this.events.keydown, false);\n\t\tthis.document.addEventListener(\n\t\t\t'mousemove',\n\t\t\tthis.events.mousemove,\n\t\t\tfalse\n\t\t);\n\t\tthis.document.addEventListener('mouseup', this.events.mouseup, false);\n\n\t\tthis.document.body.classList.add(`dragging-${this.className}`);\n\n\t\tif (typeof this.onStart === 'function') {\n\t\t\tthis.onStart();\n\t\t}\n\t}\n\n\tupdate(event) {\n\t\tthis.currentPos = {\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY,\n\t\t};\n\n\t\tthis.delta = {\n\t\t\tx: event.clientX - this.startPos.x,\n\t\t\ty: event.clientY - this.startPos.y,\n\t\t};\n\n\t\tthis.keys = {\n\t\t\talt: event.altKey,\n\t\t\tctrl: event.ctrlKey,\n\t\t\tshift: event.shiftKey,\n\t\t};\n\t}\n\n\tmousemove(event) {\n\t\tthis.update(event);\n\n\t\tif (typeof this.onDrag === 'function') {\n\t\t\tthis.onDrag();\n\t\t}\n\n\t\tif (event.which === 0) {\n\t\t\tthis.mouseup(event);\n\t\t}\n\t}\n\n\tkeydown(event) {\n\t\tif (event.keyCode === 27) {\n\t\t\tthis.release();\n\t\t}\n\t}\n\n\tmouseup(event) {\n\t\tthis.update(event);\n\n\t\tthis.release();\n\n\t\tif (typeof this.onComplete === 'function') {\n\t\t\tthis.onComplete();\n\t\t}\n\t}\n\n\trelease() {\n\t\tthis.document.body.classList.remove(`dragging-${this.className}`);\n\n\t\tthis.document.removeEventListener(\n\t\t\t'keydown',\n\t\t\tthis.events.keydown,\n\t\t\tfalse\n\t\t);\n\t\tthis.document.removeEventListener(\n\t\t\t'mousemove',\n\t\t\tthis.events.mousemove,\n\t\t\tfalse\n\t\t);\n\t\tthis.document.removeEventListener(\n\t\t\t'mouseup',\n\t\t\tthis.events.mouseup,\n\t\t\tfalse\n\t\t);\n\n\t\tif (typeof this.onRelease === 'function') {\n\t\t\tthis.onRelease();\n\t\t}\n\t}\n}\n\nexport {DragEvent};\nexport default DragEvent;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport SelectionTest from '../selections/selection-test';\n\nif (!CKEDITOR.plugins.get('ae_imagealignment')) {\n\t/**\n\t * Enum for supported image alignments\n\t * @type {Object}\n\t */\n\tconst IMAGE_ALIGNMENT = {\n\t\tCENTER: 'center',\n\t\tLEFT: 'left',\n\t\tRIGHT: 'right',\n\t};\n\n\t/**\n\t * Enum values for supported image alignments\n\t * @type {Array}\n\t */\n\tconst ALIGN_VALUES = [\n\t\tIMAGE_ALIGNMENT.LEFT,\n\t\tIMAGE_ALIGNMENT.RIGHT,\n\t\tIMAGE_ALIGNMENT.CENTER,\n\t];\n\n\t/**\n\t * Necessary styles for the left|center|right alignment\n\t * @type {Array.<Object>}\n\t */\n\tconst IMAGE_STYLE_ALIGNMENT = {\n\t\t[IMAGE_ALIGNMENT.LEFT]: [\n\t\t\t{\n\t\t\t\tname: 'display',\n\t\t\t\tvalue: 'inline-block',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'float',\n\t\t\t\tvalue: 'left',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'margin-right',\n\t\t\t\tvalue: '1.2rem',\n\t\t\t},\n\t\t],\n\t\t[IMAGE_ALIGNMENT.CENTER]: [\n\t\t\t{\n\t\t\t\tname: 'display',\n\t\t\t\tvalue: 'block',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'margin-left',\n\t\t\t\tvalue: 'auto',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'margin-right',\n\t\t\t\tvalue: 'auto',\n\t\t\t},\n\t\t],\n\t\t[IMAGE_ALIGNMENT.RIGHT]: [\n\t\t\t{\n\t\t\t\tname: 'display',\n\t\t\t\tvalue: 'inline-block',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'float',\n\t\t\t\tvalue: 'right',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'margin-left',\n\t\t\t\tvalue: '1.2rem',\n\t\t\t},\n\t\t],\n\t};\n\n\t/**\n\t * Retrieves the alignment value of an image.\n\t *\n\t * @param {CKEDITOR.dom.element} image The image element\n\t * @return {String} The alignment value\n\t */\n\tconst getImageAlignment = function(image) {\n\t\tlet imageAlignment = image.getStyle('float');\n\n\t\tif (\n\t\t\t!imageAlignment ||\n\t\t\timageAlignment === 'inherit' ||\n\t\t\timageAlignment === 'none'\n\t\t) {\n\t\t\timageAlignment = image.getAttribute('align');\n\t\t}\n\n\t\tif (!imageAlignment) {\n\t\t\tlet centeredImage = IMAGE_STYLE_ALIGNMENT[\n\t\t\t\tIMAGE_ALIGNMENT.CENTER\n\t\t\t].every(style => {\n\t\t\t\tlet styleCheck = image.getStyle(style.name) === style.value;\n\n\t\t\t\tif (!styleCheck && style.vendorPrefixes) {\n\t\t\t\t\tstyleCheck = style.vendorPrefixes.some(vendorPrefix => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\timage.getStyle(vendorPrefix + style.name) ===\n\t\t\t\t\t\t\tstyle.value\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn styleCheck;\n\t\t\t});\n\n\t\t\tif (!imageAlignment) {\n\t\t\t\tconst imageContainer = image.$.parentNode;\n\n\t\t\t\tif (imageContainer.style.textAlign == IMAGE_ALIGNMENT.CENTER) {\n\t\t\t\t\tIMAGE_STYLE_ALIGNMENT[IMAGE_ALIGNMENT.CENTER].forEach(\n\t\t\t\t\t\tstyle => {\n\t\t\t\t\t\t\timage.setStyle(style.name, style.value);\n\n\t\t\t\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix => {\n\t\t\t\t\t\t\t\t\timage.setStyle(\n\t\t\t\t\t\t\t\t\t\tvendorPrefix + style.name,\n\t\t\t\t\t\t\t\t\t\tstyle.value\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tcenteredImage = true;\n\t\t\t\t\timageContainer.style.textAlign = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\timageAlignment = centeredImage ? IMAGE_ALIGNMENT.CENTER : null;\n\t\t}\n\n\t\tif (!CKEDITOR.env.edge && CKEDITOR.env.ie) {\n\t\t\tconst p = image.findOne('p');\n\t\t\tif (p) {\n\t\t\t\timageAlignment = p.getStyle('text-align');\n\t\t\t}\n\t\t}\n\n\t\treturn imageAlignment;\n\t};\n\n\t/**\n\t * Removes the alignment value of an image\n\t *\n\t * @param {CKEDITOR.dom.element} image The image element\n\t * @param {String} imageAlignment The image alignment value to be removed\n\t */\n\tconst removeImageAlignment = function(image, imageAlignment) {\n\t\tif (\n\t\t\timageAlignment === IMAGE_ALIGNMENT.LEFT ||\n\t\t\timageAlignment === IMAGE_ALIGNMENT.RIGHT\n\t\t) {\n\t\t\tif (imageAlignment === getImageAlignment(image)) {\n\t\t\t\timage.removeAttribute('align');\n\t\t\t}\n\t\t} else if (imageAlignment === IMAGE_ALIGNMENT.CENTER) {\n\t\t\tconst imageContainer = image.$.parentNode;\n\n\t\t\tif (imageContainer.style.textAlign == IMAGE_ALIGNMENT.CENTER) {\n\t\t\t\timageContainer.style.textAlign = '';\n\t\t\t}\n\t\t}\n\n\t\tconst styles = IMAGE_STYLE_ALIGNMENT[imageAlignment];\n\n\t\tif (styles) {\n\t\t\tstyles.forEach(style => {\n\t\t\t\timage.removeStyle(style.name);\n\n\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix => {\n\t\t\t\t\t\timage.removeStyle(vendorPrefix + style.name);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Sets the alignment value of an image\n\t *\n\t * @param {CKEDITOR.dom.element} image The image element\n\t * @param {String} imageAlignment The image alignment value to be set\n\t */\n\tconst setImageAlignment = function(image, imageAlignment) {\n\t\tremoveImageAlignment(image, getImageAlignment(image));\n\n\t\tconst styles = IMAGE_STYLE_ALIGNMENT[imageAlignment];\n\n\t\tif (styles) {\n\t\t\tstyles.forEach(style => {\n\t\t\t\timage.setStyle(style.name, style.value);\n\n\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix => {\n\t\t\t\t\t\timage.setStyle(vendorPrefix + style.name, style.value);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * CKEditor plugin which modifies the justify commands to properly align images. This\n\t * plugin is an excerpt of CKEditor's original image one that can be found at\n\t * https://github.com/ckeditor/ckeditor-dev/blob/master/plugins/image/plugin.js\n\t *\n\t * @class CKEDITOR.plugins.ae_imagealignment\n\t */\n\tCKEDITOR.plugins.add('ae_imagealignment', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers a 'paste' event on the editing area.\n\t\t *\n\t\t * @method afterInit\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tafterInit(editor) {\n\t\t\tconst self = this;\n\n\t\t\tALIGN_VALUES.forEach(value => {\n\t\t\t\tconst command = editor.getCommand('justify' + value);\n\n\t\t\t\tif (command) {\n\t\t\t\t\tcommand.on('exec', event => {\n\t\t\t\t\t\tconst selectionData = editor.getSelectionData();\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tselectionData &&\n\t\t\t\t\t\t\tSelectionTest.image({\n\t\t\t\t\t\t\t\tdata: {selectionData},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst image = selectionData.element;\n\n\t\t\t\t\t\t\tconst imageAlignment = getImageAlignment(image);\n\n\t\t\t\t\t\t\tif (imageAlignment === value) {\n\t\t\t\t\t\t\t\tremoveImageAlignment(image, value);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetImageAlignment(image, value);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tevent.cancel();\n\n\t\t\t\t\t\t\tself.refreshCommands(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tnew CKEDITOR.dom.elementPath(image)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tcommand.on('refresh', function(event) {\n\t\t\t\t\t\tconst selectionData = {\n\t\t\t\t\t\t\telement: event.data.path.lastElement,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tSelectionTest.image({\n\t\t\t\t\t\t\t\tdata: {selectionData},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst imageAlignment = getImageAlignment(\n\t\t\t\t\t\t\t\tselectionData.element\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\timageAlignment === value\n\t\t\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_ON\n\t\t\t\t\t\t\t\t\t: CKEDITOR.TRISTATE_OFF\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tevent.cancel();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Forces a refresh of the modified justify commands. This is needed because the applied changes\n\t\t * do not modify the selection, so the refresh is never triggered and the UI does not update\n\t\t * properly until the next selectionChange event.\n\t\t *\n\t\t * @param {CKEDITOR.editor} editor The editor instance\n\t\t * @param {CKEDITOR.dom.elementPath} elementPath The path of the selected image\n\t\t */\n\t\trefreshCommands(editor, elementPath) {\n\t\t\tALIGN_VALUES.forEach(value => {\n\t\t\t\tconst command = editor.getCommand('justify' + value);\n\n\t\t\t\tif (command) {\n\t\t\t\t\tcommand.refresh(editor, elementPath);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_pasteimages')) {\n\t/**\n\t * CKEditor plugin which allows pasting images directly into the editable area. The image will be encoded\n\t * as Data URI. An event `beforeImageAdd` will be fired with the list of pasted images. If any of the listeners\n\t * returns `false` or cancels the event, the images won't be added to the content. Otherwise,\n\t * an event `imageAdd` will be fired with the inserted element into the editable area.\n\t *\n\t * @class CKEDITOR.plugins.ae_pasteimages\n\t */\n\n\t/**\n\t * Fired before adding images to the editor.\n\t * @event beforeImageAdd\n\t * @param {Array} imageFiles Array of image files\n\t */\n\n\t/**\n\t * Fired when an image is being added to the editor successfully.\n\t *\n\t * @event imageAdd\n\t * @param {CKEDITOR.dom.element} el The created image with src as Data URI\n\t * @param {File} file The image file\n\t */\n\n\tCKEDITOR.plugins.add('ae_pasteimages', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers a 'paste' event on the editing area.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'paste',\n\t\t\t\t\tthis._onPaste,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * The function creates an img element with src the image data as Data URI.\n\t\t * Then, it fires an 'imageAdd' event via CKEditor's event system. The passed\n\t\t * params will be:\n\t\t * - `el` - the created img element\n\t\t * - `file` - the original pasted data\n\t\t *\n\t\t * @method _onPaste\n\t\t * @protected\n\t\t * @param {CKEDITOR.dom.event} event A `paste` event, as received natively from CKEditor\n\t\t */\n\t\t_onPaste(event) {\n\t\t\tif (event.data.$.clipboardData) {\n\t\t\t\tconst pastedData = event.data.$.clipboardData.items[0];\n\t\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\t\tif (pastedData.type.indexOf('image') === 0) {\n\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\tconst imageFile = pastedData.getAsFile();\n\n\t\t\t\t\treader.onload = function(event) {\n\t\t\t\t\t\tconst result = editor.fire('beforeImageAdd', {\n\t\t\t\t\t\t\timageFiles: imageFile,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tconst el = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t\t\t\t\t'<img src=\"' + event.target.result + '\">'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\teditor.insertElement(el);\n\n\t\t\t\t\t\t\tconst imageData = {\n\t\t\t\t\t\t\t\tel,\n\t\t\t\t\t\t\t\tfile: imageFile,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\teditor.fire('imageAdd', imageData);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\treader.readAsDataURL(imageFile);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_placeholder')) {\n\t/**\n\t * CKEDITOR enterMode config set the behavior of paragraphs\n\t * When the content is empty CKEDITOR keeps the enterMode string\n\t * into the content\n\t * @property\n\t * @type {string}\n\t */\n\tconst brFiller = CKEDITOR.env.needsBrFiller ? '<br>' : '';\n\n\tconst enterModeEmptyValue = {\n\t\t1: ['<p>' + brFiller + '</p>'],\n\t\t2: ['', ' ', brFiller],\n\t\t3: ['<div>' + brFiller + '</div>'],\n\t};\n\n\t/**\n\t * CKEditor plugin which allows adding a placeholder to the editor. In this case, if there\n\t * is no content to the editor, there will be hint to the user.\n\t *\n\t * @class CKEDITOR.plugins.ae_placeholder\n\t */\n\n\t/**\n\t * Specifies the placeholder class which have to be aded to editor when editor is not focused.\n\t *\n\t * @attribute placeholderClass\n\t * @default ae_placeholder\n\t * @type String\n\t */\n\n\tCKEDITOR.plugins.add('ae_placeholder', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers a 'blur' and 'contentDom' event listeners.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.on('blur', this._checkEmptyData, this);\n\t\t\teditor.on('change', this._checkEmptyData, this);\n\t\t\teditor.on('focus', this._removePlaceholderClass, this);\n\t\t\teditor.once('contentDom', this._checkEmptyData, this);\n\t\t},\n\n\t\t/**\n\t\t * Removes any data from the content and adds a class,\n\t\t * specified by the \"placeholderClass\" config attribute.\n\t\t *\n\t\t * @protected\n\t\t * @method _checkEmptyData\n\t\t * @param {CKEDITOR.dom.event} editor event, fired from CKEditor\n\t\t */\n\t\t_checkEmptyData(event) {\n\t\t\tconst editor = event.editor;\n\n\t\t\tconst editableNode = editor.editable();\n\n\t\t\tconst innerHtml = editableNode.$.innerHTML.trim();\n\n\t\t\tconst isEmpty = enterModeEmptyValue[editor.config.enterMode].some(\n\t\t\t\telement => {\n\t\t\t\t\treturn innerHtml === element;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (isEmpty) {\n\t\t\t\teditableNode.addClass(editor.config.placeholderClass);\n\t\t\t} else {\n\t\t\t\teditableNode.removeClass(editor.config.placeholderClass);\n\t\t\t}\n\t\t},\n\n\t\t/**\n             * Remove placeholder class when input is focused\n             *\n             * @protected\n             * @method _removePlaceholderClass\n             + @param {CKEDITOR.dom.event} editor event, fired from CKEditor\n             */\n\t\t_removePlaceholderClass(event) {\n\t\t\tconst editor = event.editor;\n\n\t\t\tconst editorNode = new CKEDITOR.dom.element(editor.element.$);\n\n\t\t\teditorNode.removeClass(editor.config.placeholderClass);\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_selectionkeystrokes')) {\n\t/**\n\t * CKEditor plugin that simulates editor interaction events based on manual keystrokes. This\n\t * can be used to trigger different reactions in the editor.\n\t *\n\t * @class CKEDITOR.plugins.ae_selectionkeystrokes\n\t */\n\tCKEDITOR.plugins.add('ae_selectionkeystrokes', {\n\t\trequires: 'ae_selectionregion',\n\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function adds a command to the editor for every defined selectionKeystroke\n\t\t * in the configuration and maps it to the specified keystroke.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\tif (editor.config.selectionKeystrokes) {\n\t\t\t\teditor.config.selectionKeystrokes.forEach(\n\t\t\t\t\tselectionKeystroke => {\n\t\t\t\t\t\tconst command = new CKEDITOR.command(editor, {\n\t\t\t\t\t\t\texec(editor) {\n\t\t\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\t\t\tmanualSelection:\n\t\t\t\t\t\t\t\t\t\tselectionKeystroke.selection,\n\t\t\t\t\t\t\t\t\tnativeEvent: {},\n\t\t\t\t\t\t\t\t\tselectionData: editor.getSelectionData(),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst commandName =\n\t\t\t\t\t\t\t'selectionKeystroke' + selectionKeystroke.selection;\n\n\t\t\t\t\t\teditor.addCommand(commandName, command);\n\t\t\t\t\t\teditor.setKeystroke(\n\t\t\t\t\t\t\tselectionKeystroke.keys,\n\t\t\t\t\t\t\tcommandName\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * @license Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\nif (!CKEDITOR.plugins.get('ae_tableresize')) {\n\tconst pxUnit = CKEDITOR.tools.cssLength;\n\n\tfunction getWidth(el) {\n\t\treturn CKEDITOR.env.ie\n\t\t\t? el.$.clientWidth\n\t\t\t: parseInt(el.getComputedStyle('width'), 10);\n\t}\n\n\tfunction getBorderWidth(element, side) {\n\t\tlet computed = element.getComputedStyle('border-' + side + '-width');\n\n\t\tconst borderMap = {\n\t\t\tthin: '0px',\n\t\t\tmedium: '1px',\n\t\t\tthick: '2px',\n\t\t};\n\n\t\tif (computed.indexOf('px') < 0) {\n\t\t\t// look up keywords\n\t\t\tif (\n\t\t\t\tcomputed in borderMap &&\n\t\t\t\telement.getComputedStyle('border-style') != 'none'\n\t\t\t) {\n\t\t\t\tcomputed = borderMap[computed];\n\t\t\t} else {\n\t\t\t\tcomputed = 0;\n\t\t\t}\n\t\t}\n\n\t\treturn parseInt(computed, 10);\n\t}\n\n\t// Gets the table row that contains the most columns.\n\tfunction getMasterPillarRow(table) {\n\t\tconst $rows = table.$.rows;\n\n\t\tlet maxCells = 0;\n\n\t\tlet cellsCount;\n\n\t\tlet $elected;\n\n\t\tlet $tr;\n\n\t\tfor (let i = 0, len = $rows.length; i < len; i++) {\n\t\t\t$tr = $rows[i];\n\t\t\tcellsCount = $tr.cells.length;\n\n\t\t\tif (cellsCount > maxCells) {\n\t\t\t\tmaxCells = cellsCount;\n\t\t\t\t$elected = $tr;\n\t\t\t}\n\t\t}\n\n\t\treturn $elected;\n\t}\n\n\tfunction buildTableColumnPillars(table) {\n\t\tconst pillars = [];\n\n\t\tlet pillarIndex = -1;\n\n\t\tconst rtl = table.getComputedStyle('direction') === 'rtl';\n\n\t\t// Get the raw row element that cointains the most columns.\n\t\tconst $tr = getMasterPillarRow(table);\n\n\t\t// Get the tbody element and position, which will be used to set the\n\t\t// top and bottom boundaries.\n\t\tconst tbody = new CKEDITOR.dom.element(table.$.tBodies[0]);\n\n\t\tconst tbodyPosition = tbody.getDocumentPosition();\n\n\t\t// Loop thorugh all cells, building pillars after each one of them.\n\t\tfor (let i = 0, len = $tr.cells.length; i < len; i++) {\n\t\t\t// Both the current cell and the successive one will be used in the\n\t\t\t// pillar size calculation.\n\t\t\tconst td = new CKEDITOR.dom.element($tr.cells[i]);\n\n\t\t\tconst nextTd =\n\t\t\t\t$tr.cells[i + 1] && new CKEDITOR.dom.element($tr.cells[i + 1]);\n\n\t\t\tpillarIndex += td.$.colSpan || 1;\n\n\t\t\t// Calculate the pillar boundary positions.\n\t\t\tlet pillarLeft;\n\t\t\tlet pillarRight;\n\n\t\t\tlet x = td.getDocumentPosition().x;\n\n\t\t\t// Calculate positions based on the current cell.\n\t\t\tif (rtl) {\n\t\t\t\tpillarRight = x + getBorderWidth(td, 'left');\n\t\t\t} else {\n\t\t\t\tpillarLeft = x + td.$.offsetWidth - getBorderWidth(td, 'right');\n\t\t\t}\n\n\t\t\t// Calculate positions based on the next cell, if available.\n\t\t\tif (nextTd) {\n\t\t\t\tx = nextTd.getDocumentPosition().x;\n\n\t\t\t\tif (rtl) {\n\t\t\t\t\tpillarLeft =\n\t\t\t\t\t\tx +\n\t\t\t\t\t\tnextTd.$.offsetWidth -\n\t\t\t\t\t\tgetBorderWidth(nextTd, 'right');\n\t\t\t\t} else {\n\t\t\t\t\tpillarRight = x + getBorderWidth(nextTd, 'left');\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Otherwise calculate positions based on the table (for last cell).\n\t\t\telse {\n\t\t\t\tx = table.getDocumentPosition().x;\n\n\t\t\t\tif (rtl) {\n\t\t\t\t\tpillarLeft = x;\n\t\t\t\t} else {\n\t\t\t\t\tpillarRight = x + table.$.offsetWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst pillarWidth = Math.max(pillarRight - pillarLeft, 4);\n\n\t\t\t// The pillar should reflects exactly the shape of the hovered\n\t\t\t// column border line.\n\t\t\tpillars.push({\n\t\t\t\ttable,\n\t\t\t\tindex: pillarIndex,\n\t\t\t\tx: pillarLeft,\n\t\t\t\ty: tbodyPosition.y,\n\t\t\t\twidth: pillarWidth,\n\t\t\t\theight: tbody.$.offsetHeight,\n\t\t\t\trtl,\n\t\t\t});\n\t\t}\n\n\t\treturn pillars;\n\t}\n\n\tfunction getPillarAtPosition(pillars, positionX) {\n\t\tfor (let i = 0, len = pillars.length; i < len; i++) {\n\t\t\tconst pillar = pillars[i];\n\n\t\t\tif (positionX >= pillar.x && positionX <= pillar.x + pillar.width) {\n\t\t\t\treturn pillar;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction cancel(evt) {\n\t\t(evt.data || evt).preventDefault();\n\t}\n\n\tfunction ColumnResizer(editor, pillar) {\n\t\tlet currentShift;\n\t\tlet leftShiftBoundary;\n\t\tlet leftSideCells;\n\t\tlet resizing;\n\t\tlet rightShiftBoundary;\n\t\tlet rightSideCells;\n\t\tlet startOffset;\n\n\t\tconst document = editor.document;\n\n\t\tconst resizer = CKEDITOR.dom.element.createFromHtml(\n\t\t\t'<div data-cke-temp=1 contenteditable=false unselectable=on ' +\n\t\t\t\t'style=\"position:absolute;cursor:col-resize;filter:alpha(opacity=0);opacity:0;' +\n\t\t\t\t'padding:0;background-color:#004;background-image:none;border:0px none;z-index:10\"></div>',\n\t\t\tdocument\n\t\t);\n\n\t\tconst isResizing = (this.isResizing = function() {\n\t\t\treturn resizing;\n\t\t});\n\n\t\tconst move = (this.move = function(posX) {\n\t\t\tlet resizerNewPosition =\n\t\t\t\tposX - Math.round(resizer.$.offsetWidth / 2);\n\n\t\t\tif (isResizing) {\n\t\t\t\tif (\n\t\t\t\t\tresizerNewPosition === leftShiftBoundary ||\n\t\t\t\t\tresizerNewPosition === rightShiftBoundary\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresizerNewPosition = Math.max(\n\t\t\t\t\tresizerNewPosition,\n\t\t\t\t\tleftShiftBoundary\n\t\t\t\t);\n\t\t\t\tresizerNewPosition = Math.min(\n\t\t\t\t\tresizerNewPosition,\n\t\t\t\t\trightShiftBoundary\n\t\t\t\t);\n\n\t\t\t\tcurrentShift = resizerNewPosition - startOffset;\n\t\t\t}\n\n\t\t\tresizer.setStyle('left', pxUnit(resizerNewPosition));\n\t\t});\n\n\t\tfunction detach() {\n\t\t\tresizer.removeListener('mouseup', onMouseUp);\n\t\t\tresizer.removeListener('mousedown', onMouseDown);\n\t\t\tresizer.removeListener('mousemove', onMouseMove);\n\t\t}\n\n\t\tfunction resizeStart() {\n\t\t\t// Before starting to resize, figure out which cells to change\n\t\t\t// and the boundaries of this resizing shift.\n\n\t\t\tconst columnIndex = pillar.index;\n\n\t\t\tconst map = CKEDITOR.tools.buildTableMap(pillar.table);\n\n\t\t\tconst leftColumnCells = [];\n\n\t\t\tconst rightColumnCells = [];\n\n\t\t\tlet leftMinSize = Number.MAX_VALUE;\n\n\t\t\tlet rightMinSize = leftMinSize;\n\n\t\t\tconst rtl = pillar.rtl;\n\n\t\t\tfor (let i = 0, len = map.length; i < len; i++) {\n\t\t\t\tconst row = map[i];\n\n\t\t\t\tlet leftCell = row[columnIndex + (rtl ? 1 : 0)];\n\n\t\t\t\tlet rightCell = row[columnIndex + (rtl ? 0 : 1)];\n\n\t\t\t\tleftCell = leftCell && new CKEDITOR.dom.element(leftCell);\n\t\t\t\trightCell = rightCell && new CKEDITOR.dom.element(rightCell);\n\n\t\t\t\tif (!leftCell || !rightCell || !leftCell.equals(rightCell)) {\n\t\t\t\t\tif (leftCell) {\n\t\t\t\t\t\tleftMinSize = Math.min(leftMinSize, getWidth(leftCell));\n\t\t\t\t\t}\n\t\t\t\t\tif (rightCell) {\n\t\t\t\t\t\trightMinSize = Math.min(\n\t\t\t\t\t\t\trightMinSize,\n\t\t\t\t\t\t\tgetWidth(rightCell)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tleftColumnCells.push(leftCell);\n\t\t\t\t\trightColumnCells.push(rightCell);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cache the list of cells to be resized.\n\t\t\tleftSideCells = leftColumnCells;\n\t\t\trightSideCells = rightColumnCells;\n\n\t\t\t// Cache the resize limit boundaries.\n\t\t\tleftShiftBoundary = pillar.x - leftMinSize;\n\t\t\trightShiftBoundary = pillar.x + rightMinSize;\n\n\t\t\tresizer.setOpacity(0.5);\n\t\t\tstartOffset = parseInt(resizer.getStyle('left'), 10);\n\t\t\tcurrentShift = 0;\n\t\t\tresizing = 1;\n\n\t\t\tresizer.on('mousemove', onMouseMove);\n\n\t\t\t// Prevent the native drag behavior otherwise 'mousemove' won't fire.\n\t\t\tdocument.on('dragstart', cancel);\n\t\t}\n\n\t\tfunction resizeEnd() {\n\t\t\tresizing = 0;\n\n\t\t\tresizer.setOpacity(0);\n\n\t\t\tif (currentShift) {\n\t\t\t\tresizeColumn();\n\t\t\t}\n\n\t\t\tconst table = pillar.table;\n\t\t\tsetTimeout(() => {\n\t\t\t\ttable.removeCustomData('_cke_table_pillars');\n\t\t\t}, 0);\n\n\t\t\tdocument.removeListener('dragstart', cancel);\n\t\t}\n\n\t\tfunction resizeColumn() {\n\t\t\tconst rtl = pillar.rtl;\n\n\t\t\tconst cellsCount = rtl\n\t\t\t\t? rightSideCells.length\n\t\t\t\t: leftSideCells.length;\n\n\t\t\t// Perform the actual resize to table cells, only for those by side of the pillar.\n\t\t\tfor (let i = 0; i < cellsCount; i++) {\n\t\t\t\tconst leftCell = leftSideCells[i];\n\n\t\t\t\tconst rightCell = rightSideCells[i];\n\n\t\t\t\tconst table = pillar.table;\n\n\t\t\t\t// Defer the resizing to avoid any interference among cells.\n\t\t\t\tCKEDITOR.tools.setTimeout(\n\t\t\t\t\t(\n\t\t\t\t\t\tleftCell,\n\t\t\t\t\t\tleftOldWidth,\n\t\t\t\t\t\trightCell,\n\t\t\t\t\t\trightOldWidth,\n\t\t\t\t\t\ttableWidth,\n\t\t\t\t\t\tsizeShift\n\t\t\t\t\t) => {\n\t\t\t\t\t\t// 1px is the minimum valid width (#11626).\n\t\t\t\t\t\tif (leftCell) {\n\t\t\t\t\t\t\tleftCell.setStyle(\n\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\tpxUnit(Math.max(leftOldWidth + sizeShift, 1))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rightCell) {\n\t\t\t\t\t\t\trightCell.setStyle(\n\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\tpxUnit(Math.max(rightOldWidth - sizeShift, 1))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If we're in the last cell, we need to resize the table as well\n\t\t\t\t\t\tif (tableWidth) {\n\t\t\t\t\t\t\ttable.setStyle(\n\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\tpxUnit(tableWidth + sizeShift * (rtl ? -1 : 1))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t0,\n\t\t\t\t\tthis,\n\t\t\t\t\t[\n\t\t\t\t\t\tleftCell,\n\t\t\t\t\t\tleftCell && getWidth(leftCell),\n\t\t\t\t\t\trightCell,\n\t\t\t\t\t\trightCell && getWidth(rightCell),\n\t\t\t\t\t\t(!leftCell || !rightCell) &&\n\t\t\t\t\t\t\tgetWidth(table) +\n\t\t\t\t\t\t\t\tgetBorderWidth(table, 'left') +\n\t\t\t\t\t\t\t\tgetBorderWidth(table, 'right'),\n\t\t\t\t\t\tcurrentShift,\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfunction onMouseDown(evt) {\n\t\t\tcancel(evt);\n\n\t\t\tresizeStart();\n\n\t\t\tdocument.on('mouseup', onMouseUp, this);\n\t\t}\n\n\t\tfunction onMouseUp(evt) {\n\t\t\tevt.removeListener();\n\n\t\t\tresizeEnd();\n\t\t}\n\n\t\tfunction onMouseMove(evt) {\n\t\t\tmove(evt.data.getPageOffset().x);\n\t\t}\n\n\t\t// Clean DOM when editor is destroyed.\n\t\teditor.on('destroy', () => {\n\t\t\tdetach();\n\n\t\t\tresizer.remove();\n\t\t});\n\n\t\t// Place the resizer after body to prevent it\n\t\t// from being editable.\n\t\tdocument.getDocumentElement().append(resizer);\n\n\t\tresizer.setStyles({\n\t\t\twidth: pxUnit(pillar.width),\n\t\t\theight: pxUnit(pillar.height),\n\t\t\tleft: pxUnit(pillar.x),\n\t\t\ttop: pxUnit(pillar.y),\n\t\t});\n\n\t\tresizer.on('mousedown', onMouseDown, this);\n\n\t\tdocument.getBody().setStyle('cursor', 'col-resize');\n\n\t\t// Display the resizer to receive events but don't show it,\n\t\t// only change the cursor to resizable shape.\n\t\tresizer.show();\n\n\t\tthis.destroy = function() {\n\t\t\tdetach();\n\n\t\t\tdocument.getBody().setStyle('cursor', 'auto');\n\n\t\t\tresizer.remove();\n\t\t};\n\t}\n\n\tfunction clearPillarsCache(evt) {\n\t\tconst target = evt.data.getTarget();\n\n\t\tif (evt.name === 'mouseout') {\n\t\t\t// Bypass interal mouse move.\n\t\t\tif (!target.is('table')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet dest = new CKEDITOR.dom.element(\n\t\t\t\tevt.data.$.relatedTarget || evt.data.$.toElement\n\t\t\t);\n\t\t\twhile (dest && dest.$ && !dest.equals(target) && !dest.is('body')) {\n\t\t\t\tdest = dest.getParent();\n\t\t\t}\n\t\t\tif (!dest || dest.equals(target)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\ttarget.getAscendant('table', 1).removeCustomData('_cke_table_pillars');\n\t\tevt.removeListener();\n\t}\n\n\tCKEDITOR.plugins.add('ae_tableresize', {\n\t\trequires: 'ae_tabletools',\n\n\t\tinit(editor) {\n\t\t\teditor.on('contentDom', () => {\n\t\t\t\tlet resizer;\n\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\t// In Classic editor it is better to use document\n\t\t\t\t// instead of editable so event will work below body.\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable.isInline() ? editable : editor.document,\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tevt => {\n\t\t\t\t\t\tevt = evt.data;\n\n\t\t\t\t\t\tconst target = evt.getTarget();\n\n\t\t\t\t\t\t// FF may return document and IE8 some UFO (object with no nodeType property...)\n\t\t\t\t\t\t// instead of an element (#11823).\n\t\t\t\t\t\tif (target.type !== CKEDITOR.NODE_ELEMENT) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst pageX = evt.getPageOffset().x;\n\n\t\t\t\t\t\t// If we're already attached to a pillar, simply move the\n\t\t\t\t\t\t// resizer.\n\t\t\t\t\t\tif (resizer) {\n\t\t\t\t\t\t\tif (resizer.isResizing()) {\n\t\t\t\t\t\t\t\tresizer.move(pageX);\n\n\t\t\t\t\t\t\t\tcancel(evt);\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresizer.destroy();\n\n\t\t\t\t\t\t\t\tresizer = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Considering table, tr, td, tbody but nothing else.\n\t\t\t\t\t\tlet pillars;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!target.is('table') &&\n\t\t\t\t\t\t\t!target.getAscendant('tbody', 1)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst table = target.getAscendant('table', 1);\n\n\t\t\t\t\t\t// Make sure the table we found is inside the container\n\t\t\t\t\t\t// (eg. we should not use tables the editor is embedded within)\n\t\t\t\t\t\tif (!editor.editable().contains(table)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!(pillars = table.getCustomData(\n\t\t\t\t\t\t\t\t'_cke_table_pillars'\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Cache table pillars calculation result.\n\t\t\t\t\t\t\ttable.setCustomData(\n\t\t\t\t\t\t\t\t'_cke_table_pillars',\n\t\t\t\t\t\t\t\t(pillars = buildTableColumnPillars(table))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttable.on('mouseout', clearPillarsCache);\n\t\t\t\t\t\t\ttable.on('mousedown', clearPillarsCache);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst pillar = getPillarAtPosition(pillars, pageX);\n\n\t\t\t\t\t\tif (pillar) {\n\t\t\t\t\t\t\tresizer = new ColumnResizer(editor, pillar);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * @license Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\nif (!CKEDITOR.plugins.get('ae_tabletools')) {\n\tconst cellNodeRegex = /^(?:td|th)$/;\n\n\tfunction getSelectedCells(selection) {\n\t\tconst ranges = selection.getRanges();\n\t\tconst retval = [];\n\t\tconst database = {};\n\n\t\tfunction moveOutOfCellGuard(node) {\n\t\t\t// Apply to the first cell only.\n\t\t\tif (retval.length > 0) return;\n\n\t\t\t// If we are exiting from the first </td>, then the td should definitely be\n\t\t\t// included.\n\t\t\tif (\n\t\t\t\tnode.type == CKEDITOR.NODE_ELEMENT &&\n\t\t\t\tcellNodeRegex.test(node.getName()) &&\n\t\t\t\t!node.getCustomData('selected_cell')\n\t\t\t) {\n\t\t\t\tCKEDITOR.dom.element.setMarker(\n\t\t\t\t\tdatabase,\n\t\t\t\t\tnode,\n\t\t\t\t\t'selected_cell',\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t\tretval.push(node);\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < ranges.length; i++) {\n\t\t\tconst range = ranges[i];\n\n\t\t\tif (range.collapsed) {\n\t\t\t\t// Walker does not handle collapsed ranges yet - fall back to old API.\n\t\t\t\tconst startNode = range.getCommonAncestor();\n\t\t\t\tconst nearestCell =\n\t\t\t\t\tstartNode.getAscendant('td', true) ||\n\t\t\t\t\tstartNode.getAscendant('th', true);\n\t\t\t\tif (nearestCell) retval.push(nearestCell);\n\t\t\t} else {\n\t\t\t\tconst walker = new CKEDITOR.dom.walker(range);\n\t\t\t\tlet node;\n\t\t\t\twalker.guard = moveOutOfCellGuard;\n\n\t\t\t\twhile ((node = walker.next())) {\n\t\t\t\t\t// If may be possible for us to have a range like this:\n\t\t\t\t\t// <td>^1</td><td>^2</td>\n\t\t\t\t\t// The 2nd td shouldn't be included.\n\t\t\t\t\t//\n\t\t\t\t\t// So we have to take care to include a td we've entered only when we've\n\t\t\t\t\t// walked into its children.\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tnode.type != CKEDITOR.NODE_ELEMENT ||\n\t\t\t\t\t\t!node.is(CKEDITOR.dtd.table)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst parent =\n\t\t\t\t\t\t\tnode.getAscendant('td', true) ||\n\t\t\t\t\t\t\tnode.getAscendant('th', true);\n\t\t\t\t\t\tif (parent && !parent.getCustomData('selected_cell')) {\n\t\t\t\t\t\t\tCKEDITOR.dom.element.setMarker(\n\t\t\t\t\t\t\t\tdatabase,\n\t\t\t\t\t\t\t\tparent,\n\t\t\t\t\t\t\t\t'selected_cell',\n\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tretval.push(parent);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tCKEDITOR.dom.element.clearAllMarkers(database);\n\n\t\treturn retval;\n\t}\n\n\tfunction getFocusElementAfterDelCells(cellsToDelete) {\n\t\tlet i = 0;\n\n\t\tconst last = cellsToDelete.length - 1;\n\n\t\tconst database = {};\n\n\t\tlet cell;\n\n\t\tlet focusedCell;\n\n\t\tlet tr;\n\n\t\twhile ((cell = cellsToDelete[i++]))\n\t\t\tCKEDITOR.dom.element.setMarker(database, cell, 'delete_cell', true);\n\n\t\t// 1.first we check left or right side focusable cell row by row;\n\t\ti = 0;\n\t\twhile ((cell = cellsToDelete[i++])) {\n\t\t\tif (\n\t\t\t\t((focusedCell = cell.getPrevious()) &&\n\t\t\t\t\t!focusedCell.getCustomData('delete_cell')) ||\n\t\t\t\t((focusedCell = cell.getNext()) &&\n\t\t\t\t\t!focusedCell.getCustomData('delete_cell'))\n\t\t\t) {\n\t\t\t\tCKEDITOR.dom.element.clearAllMarkers(database);\n\t\t\t\treturn focusedCell;\n\t\t\t}\n\t\t}\n\n\t\tCKEDITOR.dom.element.clearAllMarkers(database);\n\n\t\t// 2. then we check the toppest row (outside the selection area square) focusable cell\n\t\ttr = cellsToDelete[0].getParent();\n\t\tif ((tr = tr.getPrevious())) return tr.getLast();\n\n\t\t// 3. last we check the lowerest  row focusable cell\n\t\ttr = cellsToDelete[last].getParent();\n\t\tif ((tr = tr.getNext())) return tr.getChild(0);\n\n\t\treturn null;\n\t}\n\n\tfunction insertRow(editor, insertBefore) {\n\t\tconst selection = editor.getSelection();\n\n\t\tconst cells = getSelectedCells(selection);\n\n\t\tconst firstCell = cells[0];\n\n\t\tconst table = firstCell.getAscendant('table');\n\n\t\tconst doc = firstCell.getDocument();\n\n\t\tconst startRow = cells[0].getParent();\n\n\t\tconst startRowIndex = startRow.$.rowIndex;\n\n\t\tconst lastCell = cells[cells.length - 1];\n\n\t\tconst endRowIndex =\n\t\t\tlastCell.getParent().$.rowIndex + lastCell.$.rowSpan - 1;\n\n\t\tconst endRow = new CKEDITOR.dom.element(table.$.rows[endRowIndex]);\n\n\t\tconst rowIndex = insertBefore ? startRowIndex : endRowIndex;\n\n\t\tconst row = insertBefore ? startRow : endRow;\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst cloneRow = map[rowIndex];\n\n\t\tconst nextRow = insertBefore ? map[rowIndex - 1] : map[rowIndex + 1];\n\n\t\tconst width = map[0].length;\n\n\t\tconst newRow = doc.createElement('tr');\n\t\tfor (let i = 0; cloneRow[i] && i < width; i++) {\n\t\t\tlet cell;\n\t\t\t// Check whether there's a spanning row here, do not break it.\n\t\t\tif (\n\t\t\t\tcloneRow[i].rowSpan > 1 &&\n\t\t\t\tnextRow &&\n\t\t\t\tcloneRow[i] == nextRow[i]\n\t\t\t) {\n\t\t\t\tcell = cloneRow[i];\n\t\t\t\tcell.rowSpan += 1;\n\t\t\t} else {\n\t\t\t\tcell = new CKEDITOR.dom.element(cloneRow[i]).clone();\n\t\t\t\tcell.removeAttribute('rowSpan');\n\t\t\t\tcell.appendBogus();\n\t\t\t\tnewRow.append(cell);\n\t\t\t\tcell = cell.$;\n\t\t\t}\n\n\t\t\ti += cell.colSpan - 1;\n\t\t}\n\n\t\tif (insertBefore) {\n\t\t\tnewRow.insertBefore(row);\n\t\t} else {\n\t\t\tnewRow.insertAfter(row);\n\t\t}\n\n\t\tconst cell = new CKEDITOR.dom.element(newRow.$).getChild(\n\t\t\tcells[0] ? cells[0].$.cellIndex : 0\n\t\t);\n\t\tselectElement(editor, cell);\n\t}\n\n\tfunction deleteRows(selectionOrRow) {\n\t\tif (selectionOrRow instanceof CKEDITOR.dom.selection) {\n\t\t\tconst cells = getSelectedCells(selectionOrRow);\n\n\t\t\tconst firstCell = cells[0];\n\n\t\t\tconst table = firstCell.getAscendant('table');\n\n\t\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\t\tconst startRow = cells[0].getParent();\n\n\t\t\tconst startRowIndex = startRow.$.rowIndex;\n\n\t\t\tconst lastCell = cells[cells.length - 1];\n\n\t\t\tconst endRowIndex =\n\t\t\t\tlastCell.getParent().$.rowIndex + lastCell.$.rowSpan - 1;\n\n\t\t\tconst rowsToDelete = [];\n\n\t\t\t// Delete cell or reduce cell spans by checking through the table map.\n\t\t\tfor (let i = startRowIndex; i <= endRowIndex; i++) {\n\t\t\t\tconst mapRow = map[i];\n\n\t\t\t\tconst row = new CKEDITOR.dom.element(table.$.rows[i]);\n\n\t\t\t\tfor (let j = 0; j < mapRow.length; j++) {\n\t\t\t\t\tconst cell = new CKEDITOR.dom.element(mapRow[j]);\n\n\t\t\t\t\tconst cellRowIndex = cell.getParent().$.rowIndex;\n\n\t\t\t\t\tif (cell.$.rowSpan == 1) cell.remove();\n\t\t\t\t\t// Row spanned cell.\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Span row of the cell, reduce spanning.\n\t\t\t\t\t\tcell.$.rowSpan -= 1;\n\t\t\t\t\t\t// Root row of the cell, root cell to next row.\n\t\t\t\t\t\tif (cellRowIndex == i) {\n\t\t\t\t\t\t\tconst nextMapRow = map[i + 1];\n\t\t\t\t\t\t\tif (nextMapRow[j - 1]) {\n\t\t\t\t\t\t\t\tcell.insertAfter(\n\t\t\t\t\t\t\t\t\tnew CKEDITOR.dom.element(nextMapRow[j - 1])\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnew CKEDITOR.dom.element(\n\t\t\t\t\t\t\t\t\ttable.$.rows[i + 1]\n\t\t\t\t\t\t\t\t).append(cell, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tj += cell.$.colSpan - 1;\n\t\t\t\t}\n\n\t\t\t\trowsToDelete.push(row);\n\t\t\t}\n\n\t\t\tconst rows = table.$.rows;\n\n\t\t\t// Where to put the cursor after rows been deleted?\n\t\t\t// 1. Into next sibling row if any;\n\t\t\t// 2. Into previous sibling row if any;\n\t\t\t// 3. Into table's parent element if it's the very last row.\n\t\t\tconst cursorPosition = new CKEDITOR.dom.element(\n\t\t\t\trows[endRowIndex + 1] ||\n\t\t\t\t\t(startRowIndex > 0 ? rows[startRowIndex - 1] : null) ||\n\t\t\t\t\ttable.$.parentNode\n\t\t\t);\n\n\t\t\tfor (let i = rowsToDelete.length; i >= 0; i--)\n\t\t\t\tdeleteRows(rowsToDelete[i]);\n\n\t\t\treturn cursorPosition;\n\t\t} else if (selectionOrRow instanceof CKEDITOR.dom.element) {\n\t\t\tconst table = selectionOrRow.getAscendant('table');\n\n\t\t\tif (table.$.rows.length == 1) table.remove();\n\t\t\telse selectionOrRow.remove();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getCellColIndex(cell, isStart) {\n\t\tconst row = cell.getParent();\n\n\t\tconst rowCells = row.$.cells;\n\n\t\tlet colIndex = 0;\n\t\tfor (let i = 0; i < rowCells.length; i++) {\n\t\t\tconst mapCell = rowCells[i];\n\t\t\tcolIndex += isStart ? 1 : mapCell.colSpan;\n\t\t\tif (mapCell == cell.$) break;\n\t\t}\n\n\t\treturn colIndex - 1;\n\t}\n\n\tfunction getColumnsIndices(cells, isStart) {\n\t\tlet retval = isStart ? Infinity : 0;\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tconst colIndex = getCellColIndex(cells[i], isStart);\n\t\t\tif (isStart ? colIndex < retval : colIndex > retval)\n\t\t\t\tretval = colIndex;\n\t\t}\n\t\treturn retval;\n\t}\n\n\tfunction insertColumn(editor, insertBefore) {\n\t\tconst selection = editor.getSelection();\n\n\t\tconst cells = getSelectedCells(selection);\n\n\t\tconst firstCell = cells[0];\n\n\t\tconst table = firstCell.getAscendant('table');\n\n\t\tconst startCol = getColumnsIndices(cells, 1);\n\n\t\tconst lastCol = getColumnsIndices(cells);\n\n\t\tconst colIndex = insertBefore ? startCol : lastCol;\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst cloneCol = [];\n\n\t\tconst nextCol = [];\n\n\t\tconst height = map.length;\n\n\t\tfor (let i = 0; i < height; i++) {\n\t\t\tcloneCol.push(map[i][colIndex]);\n\t\t\tconst nextCell = insertBefore\n\t\t\t\t? map[i][colIndex - 1]\n\t\t\t\t: map[i][colIndex + 1];\n\t\t\tnextCol.push(nextCell);\n\t\t}\n\n\t\tconst insertedCells = [];\n\t\tfor (let i = 0; i < height; i++) {\n\t\t\tlet cell;\n\n\t\t\tif (!cloneCol[i]) continue;\n\n\t\t\t// Check whether there's a spanning column here, do not break it.\n\t\t\tif (cloneCol[i].colSpan > 1 && nextCol[i] == cloneCol[i]) {\n\t\t\t\tcell = cloneCol[i];\n\t\t\t\tcell.colSpan += 1;\n\t\t\t} else {\n\t\t\t\tcell = new CKEDITOR.dom.element(cloneCol[i]).clone();\n\t\t\t\tcell.removeAttribute('colSpan');\n\t\t\t\tcell.appendBogus();\n\t\t\t\tcell[insertBefore ? 'insertBefore' : 'insertAfter'].call(\n\t\t\t\t\tcell,\n\t\t\t\t\tnew CKEDITOR.dom.element(cloneCol[i])\n\t\t\t\t);\n\t\t\t\tcell = cell.$;\n\t\t\t}\n\n\t\t\tinsertedCells[i] = cell;\n\n\t\t\ti += cell.rowSpan - 1;\n\t\t}\n\n\t\tconst cell = new CKEDITOR.dom.element(\n\t\t\tinsertedCells[firstCell.getParent().$.rowIndex]\n\t\t);\n\t\tselectElement(editor, cell);\n\t}\n\n\tfunction selectElement(editor, element) {\n\t\tconst range = editor.createRange();\n\n\t\trange.moveToPosition(element, CKEDITOR.POSITION_AFTER_START);\n\t\teditor.getSelection().selectRanges([range]);\n\t}\n\n\tfunction deleteColumns(selectionOrCell) {\n\t\tconst cells = getSelectedCells(selectionOrCell);\n\n\t\tconst firstCell = cells[0];\n\n\t\tconst lastCell = cells[cells.length - 1];\n\n\t\tconst table = firstCell.getAscendant('table');\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tlet startColIndex;\n\n\t\tlet endColIndex;\n\n\t\tconst rowsToDelete = [];\n\n\t\tlet rows;\n\n\t\t// Figure out selected cells' column indices.\n\t\tfor (let i = 0, rows = map.length; i < rows; i++) {\n\t\t\t// eslint-disable-next-line sort-vars\n\t\t\tfor (let j = 0, cols = map[i].length; j < cols; j++) {\n\t\t\t\tif (map[i][j] == firstCell.$) startColIndex = j;\n\t\t\t\tif (map[i][j] == lastCell.$) endColIndex = j;\n\t\t\t}\n\t\t}\n\n\t\t// Delete cell or reduce cell spans by checking through the table map.\n\t\tfor (let i = startColIndex; i <= endColIndex; i++) {\n\t\t\tfor (let j = 0; j < map.length; j++) {\n\t\t\t\tconst mapRow = map[j];\n\n\t\t\t\tconst row = new CKEDITOR.dom.element(table.$.rows[j]);\n\n\t\t\t\tconst cell = new CKEDITOR.dom.element(mapRow[i]);\n\n\t\t\t\tif (cell.$) {\n\t\t\t\t\tif (cell.$.colSpan == 1) cell.remove();\n\t\t\t\t\t// Reduce the col spans.\n\t\t\t\t\telse cell.$.colSpan -= 1;\n\n\t\t\t\t\tj += cell.$.rowSpan - 1;\n\n\t\t\t\t\tif (!row.$.cells.length) rowsToDelete.push(row);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst firstRowCells = table.$.rows[0] && table.$.rows[0].cells;\n\n\t\t// Where to put the cursor after columns been deleted?\n\t\t// 1. Into next cell of the first row if any;\n\t\t// 2. Into previous cell of the first row if any;\n\t\t// 3. Into table's parent element;\n\t\tconst cursorPosition = new CKEDITOR.dom.element(\n\t\t\tfirstRowCells[startColIndex] ||\n\t\t\t\t(startColIndex\n\t\t\t\t\t? firstRowCells[startColIndex - 1]\n\t\t\t\t\t: table.$.parentNode)\n\t\t);\n\n\t\t// Delete table rows only if all columns are gone (do not remove empty row).\n\t\tif (rowsToDelete.length == rows) table.remove();\n\n\t\treturn cursorPosition;\n\t}\n\n\tfunction insertCell(selection, insertBefore) {\n\t\tconst startElement = selection.getStartElement();\n\t\tconst cell =\n\t\t\tstartElement.getAscendant('td', 1) ||\n\t\t\tstartElement.getAscendant('th', 1);\n\n\t\tif (!cell) return;\n\n\t\t// Create the new cell element to be added.\n\t\tconst newCell = cell.clone();\n\t\tnewCell.appendBogus();\n\n\t\tif (insertBefore) newCell.insertBefore(cell);\n\t\telse newCell.insertAfter(cell);\n\t}\n\n\tfunction deleteCells(selectionOrCell) {\n\t\tif (selectionOrCell instanceof CKEDITOR.dom.selection) {\n\t\t\tconst cellsToDelete = getSelectedCells(selectionOrCell);\n\t\t\tconst table =\n\t\t\t\tcellsToDelete[0] && cellsToDelete[0].getAscendant('table');\n\t\t\tconst cellToFocus = getFocusElementAfterDelCells(cellsToDelete);\n\n\t\t\tfor (let i = cellsToDelete.length - 1; i >= 0; i--)\n\t\t\t\tdeleteCells(cellsToDelete[i]);\n\n\t\t\tif (cellToFocus) placeCursorInCell(cellToFocus, true);\n\t\t\telse if (table) table.remove();\n\t\t} else if (selectionOrCell instanceof CKEDITOR.dom.element) {\n\t\t\tconst tr = selectionOrCell.getParent();\n\t\t\tif (tr.getChildCount() == 1) tr.remove();\n\t\t\telse selectionOrCell.remove();\n\t\t}\n\t}\n\n\t// Remove filler at end and empty spaces around the cell content.\n\tfunction trimCell(cell) {\n\t\tconst bogus = cell.getBogus();\n\t\tif (bogus) {\n\t\t\tbogus.remove();\n\t\t}\n\t\tcell.trim();\n\t}\n\n\tfunction placeCursorInCell(cell, placeAtEnd) {\n\t\tconst docInner = cell.getDocument();\n\n\t\tconst docOuter = CKEDITOR.document;\n\n\t\t// Fixing \"Unspecified error\" thrown in IE10 by resetting\n\t\t// selection the dirty and shameful way (#10308).\n\t\t// We can not apply this hack to IE8 because\n\t\t// it causes error (#11058).\n\t\tif (CKEDITOR.env.ie && CKEDITOR.env.version == 10) {\n\t\t\tdocOuter.focus();\n\t\t\tdocInner.focus();\n\t\t}\n\n\t\tconst range = new CKEDITOR.dom.range(docInner);\n\t\tif (\n\t\t\t!range['moveToElementEdit' + (placeAtEnd ? 'End' : 'Start')](cell)\n\t\t) {\n\t\t\trange.selectNodeContents(cell);\n\t\t\trange.collapse(placeAtEnd ? false : true);\n\t\t}\n\t\trange.select(true);\n\t}\n\n\tfunction cellInRow(tableMap, rowIndex, cell) {\n\t\tconst oRow = tableMap[rowIndex];\n\t\tif (typeof cell == 'undefined') return oRow;\n\n\t\tfor (let c = 0; oRow && c < oRow.length; c++) {\n\t\t\tif (cell.is && oRow[c] == cell.$) return c;\n\t\t\telse if (c == cell) return new CKEDITOR.dom.element(oRow[c]);\n\t\t}\n\t\treturn cell.is ? -1 : null;\n\t}\n\n\tfunction cellInCol(tableMap, colIndex) {\n\t\tconst oCol = [];\n\t\tfor (let r = 0; r < tableMap.length; r++) {\n\t\t\tconst row = tableMap[r];\n\t\t\toCol.push(row[colIndex]);\n\n\t\t\t// Avoid adding duplicate cells.\n\t\t\tif (row[colIndex].rowSpan > 1) r += row[colIndex].rowSpan - 1;\n\t\t}\n\t\treturn oCol;\n\t}\n\n\tfunction mergeCells(selection, mergeDirection, isDetect) {\n\t\tconst cells = getSelectedCells(selection);\n\n\t\t// Invalid merge request if:\n\t\t// 1. In batch mode despite that less than two selected.\n\t\t// 2. In solo mode while not exactly only one selected.\n\t\t// 3. Cells distributed in different table groups (e.g. from both thead and tbody).\n\t\tlet commonAncestor;\n\t\tif (\n\t\t\t(mergeDirection ? cells.length != 1 : cells.length < 2) ||\n\t\t\t((commonAncestor = selection.getCommonAncestor()) &&\n\t\t\t\tcommonAncestor.type == CKEDITOR.NODE_ELEMENT &&\n\t\t\t\tcommonAncestor.is('table'))\n\t\t)\n\t\t\treturn false;\n\n\t\tlet cell;\n\n\t\tconst firstCell = cells[0];\n\n\t\tconst table = firstCell.getAscendant('table');\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst mapHeight = map.length;\n\n\t\tconst mapWidth = map[0].length;\n\n\t\tconst startRow = firstCell.getParent().$.rowIndex;\n\n\t\tconst startColumn = cellInRow(map, startRow, firstCell);\n\n\t\tif (mergeDirection) {\n\t\t\tlet targetCell;\n\t\t\ttry {\n\t\t\t\tconst rowspan =\n\t\t\t\t\tparseInt(firstCell.getAttribute('rowspan'), 10) || 1;\n\t\t\t\tconst colspan =\n\t\t\t\t\tparseInt(firstCell.getAttribute('colspan'), 10) || 1;\n\n\t\t\t\ttargetCell =\n\t\t\t\t\tmap[\n\t\t\t\t\t\tmergeDirection == 'up'\n\t\t\t\t\t\t\t? startRow - rowspan\n\t\t\t\t\t\t\t: mergeDirection == 'down'\n\t\t\t\t\t\t\t? startRow + rowspan\n\t\t\t\t\t\t\t: startRow\n\t\t\t\t\t][\n\t\t\t\t\t\tmergeDirection == 'left'\n\t\t\t\t\t\t\t? startColumn - colspan\n\t\t\t\t\t\t\t: mergeDirection == 'right'\n\t\t\t\t\t\t\t? startColumn + colspan\n\t\t\t\t\t\t\t: startColumn\n\t\t\t\t\t];\n\t\t\t} catch (er) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// 1. No cell could be merged.\n\t\t\t// 2. Same cell actually.\n\t\t\tif (!targetCell || firstCell.$ == targetCell) return false;\n\n\t\t\t// Sort in map order regardless of the DOM sequence.\n\t\t\tcells[\n\t\t\t\tmergeDirection == 'up' || mergeDirection == 'left'\n\t\t\t\t\t? 'unshift'\n\t\t\t\t\t: 'push'\n\t\t\t](new CKEDITOR.dom.element(targetCell));\n\t\t}\n\n\t\t// Start from here are merging way ignorance (merge up/right, batch merge).\n\t\tconst doc = firstCell.getDocument();\n\n\t\tlet lastRowIndex = startRow;\n\n\t\tlet totalRowSpan = 0;\n\n\t\tlet totalColSpan = 0;\n\n\t\t// Use a documentFragment as buffer when appending cell contents.\n\n\t\tconst frag = !isDetect && new CKEDITOR.dom.documentFragment(doc);\n\n\t\tlet dimension = 0;\n\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tcell = cells[i];\n\n\t\t\tconst tr = cell.getParent();\n\n\t\t\tconst cellFirstChild = cell.getFirst();\n\n\t\t\tconst colSpan = cell.$.colSpan;\n\n\t\t\tconst rowSpan = cell.$.rowSpan;\n\n\t\t\tconst rowIndex = tr.$.rowIndex;\n\n\t\t\tconst colIndex = cellInRow(map, rowIndex, cell);\n\n\t\t\t// Accumulated the actual places taken by all selected cells.\n\t\t\tdimension += colSpan * rowSpan;\n\t\t\t// Accumulated the maximum virtual spans from column and row.\n\t\t\ttotalColSpan = Math.max(\n\t\t\t\ttotalColSpan,\n\t\t\t\tcolIndex - startColumn + colSpan\n\t\t\t);\n\t\t\ttotalRowSpan = Math.max(\n\t\t\t\ttotalRowSpan,\n\t\t\t\trowIndex - startRow + rowSpan\n\t\t\t);\n\n\t\t\tif (!isDetect) {\n\t\t\t\t// Trim all cell fillers and check to remove empty cells.\n\t\t\t\tif ((trimCell(cell), cell.getChildren().count())) {\n\t\t\t\t\t// Merge vertically cells as two separated paragraphs.\n\t\t\t\t\tif (\n\t\t\t\t\t\trowIndex != lastRowIndex &&\n\t\t\t\t\t\tcellFirstChild &&\n\t\t\t\t\t\t!(\n\t\t\t\t\t\t\tcellFirstChild.isBlockBoundary &&\n\t\t\t\t\t\t\tcellFirstChild.isBlockBoundary({br: 1})\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst last = frag.getLast(\n\t\t\t\t\t\t\tCKEDITOR.dom.walker.whitespaces(true)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (last && !(last.is && last.is('br')))\n\t\t\t\t\t\t\tfrag.append('br');\n\t\t\t\t\t}\n\n\t\t\t\t\tcell.moveChildren(frag);\n\t\t\t\t}\n\t\t\t\tif (i) {\n\t\t\t\t\tcell.remove();\n\t\t\t\t} else {\n\t\t\t\t\tcell.setHtml('');\n\t\t\t\t}\n\t\t\t}\n\t\t\tlastRowIndex = rowIndex;\n\t\t}\n\n\t\tif (!isDetect) {\n\t\t\tfrag.moveChildren(firstCell);\n\n\t\t\tfirstCell.appendBogus();\n\n\t\t\tif (totalColSpan >= mapWidth) firstCell.removeAttribute('rowSpan');\n\t\t\telse firstCell.$.rowSpan = totalRowSpan;\n\n\t\t\tif (totalRowSpan >= mapHeight) firstCell.removeAttribute('colSpan');\n\t\t\telse firstCell.$.colSpan = totalColSpan;\n\n\t\t\t// Swip empty <tr> left at the end of table due to the merging.\n\t\t\tconst trs = new CKEDITOR.dom.nodeList(table.$.rows);\n\n\t\t\tlet count = trs.count();\n\n\t\t\tfor (let i = count - 1; i >= 0; i--) {\n\t\t\t\tconst tailTr = trs.getItem(i);\n\t\t\t\tif (!tailTr.$.cells.length) {\n\t\t\t\t\ttailTr.remove();\n\t\t\t\t\tcount++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn firstCell;\n\t\t}\n\t\t// Be able to merge cells only if actual dimension of selected\n\t\t// cells equals to the caculated rectangle.\n\t\telse {\n\t\t\treturn totalRowSpan * totalColSpan == dimension;\n\t\t}\n\t}\n\n\tfunction verticalSplitCell(selection, isDetect) {\n\t\tconst cells = getSelectedCells(selection);\n\t\tif (cells.length > 1) return false;\n\t\telse if (isDetect) return true;\n\n\t\tconst cell = cells[0];\n\n\t\tconst tr = cell.getParent();\n\n\t\tconst table = tr.getAscendant('table');\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst rowIndex = tr.$.rowIndex;\n\n\t\tconst colIndex = cellInRow(map, rowIndex, cell);\n\n\t\tconst rowSpan = cell.$.rowSpan;\n\n\t\tlet newCell;\n\n\t\tlet newRowSpan;\n\n\t\tlet newCellRowSpan;\n\n\t\tlet newRowIndex;\n\n\t\tif (rowSpan > 1) {\n\t\t\tnewRowSpan = Math.ceil(rowSpan / 2);\n\t\t\tnewCellRowSpan = Math.floor(rowSpan / 2);\n\t\t\tnewRowIndex = rowIndex + newRowSpan;\n\t\t\tconst newCellTr = new CKEDITOR.dom.element(\n\t\t\t\ttable.$.rows[newRowIndex]\n\t\t\t);\n\n\t\t\tconst newCellRow = cellInRow(map, newRowIndex);\n\n\t\t\tlet candidateCell;\n\n\t\t\tnewCell = cell.clone();\n\n\t\t\t// Figure out where to insert the new cell by checking the vitual row.\n\t\t\tfor (let c = 0; c < newCellRow.length; c++) {\n\t\t\t\tcandidateCell = newCellRow[c];\n\t\t\t\t// Catch first cell actually following the column.\n\t\t\t\tif (candidateCell.parentNode == newCellTr.$ && c > colIndex) {\n\t\t\t\t\tnewCell.insertBefore(\n\t\t\t\t\t\tnew CKEDITOR.dom.element(candidateCell)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcandidateCell = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The destination row is empty, append at will.\n\t\t\tif (!candidateCell) newCellTr.append(newCell);\n\t\t} else {\n\t\t\tnewCellRowSpan = newRowSpan = 1;\n\n\t\t\tconst newCellTr = tr.clone();\n\t\t\tnewCellTr.insertAfter(tr);\n\t\t\tnewCellTr.append((newCell = cell.clone()));\n\n\t\t\tconst cellsInSameRow = cellInRow(map, rowIndex);\n\t\t\tfor (let i = 0; i < cellsInSameRow.length; i++)\n\t\t\t\tcellsInSameRow[i].rowSpan++;\n\t\t}\n\n\t\tnewCell.appendBogus();\n\n\t\tcell.$.rowSpan = newRowSpan;\n\t\tnewCell.$.rowSpan = newCellRowSpan;\n\t\tif (newRowSpan == 1) cell.removeAttribute('rowSpan');\n\t\tif (newCellRowSpan == 1) newCell.removeAttribute('rowSpan');\n\n\t\treturn newCell;\n\t}\n\n\tfunction horizontalSplitCell(selection, isDetect) {\n\t\tconst cells = getSelectedCells(selection);\n\t\tif (cells.length > 1) return false;\n\t\telse if (isDetect) return true;\n\n\t\tconst cell = cells[0];\n\n\t\tconst tr = cell.getParent();\n\n\t\tconst table = tr.getAscendant('table');\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst rowIndex = tr.$.rowIndex;\n\n\t\tconst colIndex = cellInRow(map, rowIndex, cell);\n\n\t\tconst colSpan = cell.$.colSpan;\n\n\t\tlet newColSpan;\n\n\t\tlet newCellColSpan;\n\n\t\tif (colSpan > 1) {\n\t\t\tnewColSpan = Math.ceil(colSpan / 2);\n\t\t\tnewCellColSpan = Math.floor(colSpan / 2);\n\t\t} else {\n\t\t\tnewCellColSpan = newColSpan = 1;\n\t\t\tconst cellsInSameCol = cellInCol(map, colIndex);\n\t\t\tfor (let i = 0; i < cellsInSameCol.length; i++)\n\t\t\t\tcellsInSameCol[i].colSpan++;\n\t\t}\n\t\tconst newCell = cell.clone();\n\t\tnewCell.insertAfter(cell);\n\t\tnewCell.appendBogus();\n\n\t\tcell.$.colSpan = newColSpan;\n\t\tnewCell.$.colSpan = newCellColSpan;\n\t\tif (newColSpan == 1) cell.removeAttribute('colSpan');\n\t\tif (newCellColSpan == 1) newCell.removeAttribute('colSpan');\n\n\t\treturn newCell;\n\t}\n\n\tCKEDITOR.plugins.add('ae_tabletools', {\n\t\tinit(editor) {\n\t\t\tfunction createDef(def) {\n\t\t\t\treturn CKEDITOR.tools.extend(def || {}, {\n\t\t\t\t\tcontextSensitive: 1,\n\t\t\t\t\trefresh(editor, path) {\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\tpath.contains({td: 1, th: 1}, 1)\n\t\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_OFF\n\t\t\t\t\t\t\t\t: CKEDITOR.TRISTATE_DISABLED\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tfunction addCmd(name, def) {\n\t\t\t\tlet cmd = editor.getCommand(name);\n\n\t\t\t\tif (cmd) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcmd = editor.addCommand(name, def);\n\t\t\t\teditor.addFeature(cmd);\n\t\t\t}\n\n\t\t\taddCmd(\n\t\t\t\t'rowDelete',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tplaceCursorInCell(deleteRows(selection));\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'rowInsertBefore',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tinsertRow(editor, true);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'rowInsertAfter',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tinsertRow(editor);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'columnDelete',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tconst element = deleteColumns(selection);\n\t\t\t\t\t\tif (element) {\n\t\t\t\t\t\t\tplaceCursorInCell(element, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'columnInsertBefore',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tinsertColumn(editor, true);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'columnInsertAfter',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tinsertColumn(editor);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellDelete',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tdeleteCells(selection);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellMerge',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[colspan,rowspan]',\n\t\t\t\t\trequiredContent: 'td[colspan,rowspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\tmergeCells(editor.getSelection()),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellMergeRight',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[colspan]',\n\t\t\t\t\trequiredContent: 'td[colspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\tmergeCells(editor.getSelection(), 'right'),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellMergeDown',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[rowspan]',\n\t\t\t\t\trequiredContent: 'td[rowspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\tmergeCells(editor.getSelection(), 'down'),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellVerticalSplit',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[rowspan]',\n\t\t\t\t\trequiredContent: 'td[rowspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\tverticalSplitCell(editor.getSelection())\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellHorizontalSplit',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[colspan]',\n\t\t\t\t\trequiredContent: 'td[colspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\thorizontalSplitCell(editor.getSelection())\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellInsertBefore',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tinsertCell(selection, true);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellInsertAfter',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tinsertCell(selection);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\n\t\tgetSelectedCells,\n\t});\n}\n\n/**\n * Create a two-dimension array that reflects the actual layout of table cells,\n * with cell spans, with mappings to the original td elements.\n *\n * @param {CKEDITOR.dom.element} table\n * @member CKEDITOR.tools\n */\nCKEDITOR.tools.buildTableMap = function(table) {\n\tconst aRows = table.$.rows;\n\n\t// Row and Column counters.\n\tlet r = -1;\n\n\tconst aMap = [];\n\n\tfor (let i = 0; i < aRows.length; i++) {\n\t\tr++;\n\t\tif (!aMap[r]) {\n\t\t\taMap[r] = [];\n\t\t}\n\n\t\tlet c = -1;\n\n\t\tfor (let j = 0; j < aRows[i].cells.length; j++) {\n\t\t\tconst oCell = aRows[i].cells[j];\n\n\t\t\tc++;\n\t\t\twhile (aMap[r][c]) c++;\n\n\t\t\tconst iColSpan = isNaN(oCell.colSpan) ? 1 : oCell.colSpan;\n\t\t\tconst iRowSpan = isNaN(oCell.rowSpan) ? 1 : oCell.rowSpan;\n\n\t\t\tfor (let rs = 0; rs < iRowSpan; rs++) {\n\t\t\t\tif (!aMap[r + rs]) aMap[r + rs] = [];\n\n\t\t\t\tfor (let cs = 0; cs < iColSpan; cs++) {\n\t\t\t\t\taMap[r + rs][c + cs] = aRows[i].cells[j];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc += iColSpan - 1;\n\t\t}\n\t}\n\treturn aMap;\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport './button.jsx';\n\nimport './menu-button.jsx';\n\nimport './menu.jsx';\n\nimport './panel-menu-button.jsx';\n\nimport './richcombo.jsx';\n\nimport './uibridge';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_buttonbridge')) {\n\tconst BUTTON_DEFS = {};\n\n\t/**\n\t * Generates a ButtonBridge React class for a given button definition if it has not been\n\t * already created based on the button name and definition.\n\t *\n\t * @private\n\t * @method generateButtonBridge\n\t * @param {String} buttonName The button's name\n\t * @param {Object} buttonDefinition The button's definition\n\t * @return {Object} The generated or already existing React Button Class\n\t */\n\n\tfunction generateButtonBridge(buttonName, buttonDefinition, editor) {\n\t\tlet ButtonBridge = AlloyEditor.Buttons[buttonName];\n\n\t\tBUTTON_DEFS[editor.name] = BUTTON_DEFS[editor.name] || {};\n\t\tBUTTON_DEFS[editor.name][buttonName] =\n\t\t\tBUTTON_DEFS[editor.name][buttonName] || buttonDefinition;\n\n\t\tif (!ButtonBridge) {\n\t\t\tButtonBridge = class extends React.Component {\n\t\t\t\tstatic contextType = EditorContext;\n\n\t\t\t\tstatic displayName = buttonName;\n\n\t\t\t\tstatic key = buttonName;\n\n\t\t\t\t// API not yet implemented inside the button\n\t\t\t\t// bridge. By mocking the unsupported method, we prevent\n\t\t\t\t// plugins from crashing if they make use of it.\n\t\t\t\ttoFeature() {}\n\n\t\t\t\trender() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst buttonClassName = 'ae-button ae-button-bridge';\n\n\t\t\t\t\tconst buttonDisplayName =\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].name ||\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].command ||\n\t\t\t\t\t\tbuttonName;\n\n\t\t\t\t\tconst buttonLabel =\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].label;\n\n\t\t\t\t\tconst buttonType = 'button-' + buttonDisplayName;\n\n\t\t\t\t\tconst iconClassName = 'ae-icon-' + buttonDisplayName;\n\n\t\t\t\t\tconst iconStyle = {};\n\n\t\t\t\t\tconst cssStyle = CKEDITOR.skin.getIconStyle(\n\t\t\t\t\t\tbuttonDisplayName\n\t\t\t\t\t);\n\n\t\t\t\t\tif (cssStyle) {\n\t\t\t\t\t\tconst cssStyleParts = cssStyle.split(';');\n\n\t\t\t\t\t\ticonStyle.backgroundImage = cssStyleParts[0].substring(\n\t\t\t\t\t\t\tcssStyleParts[0].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundPosition = cssStyleParts[1].substring(\n\t\t\t\t\t\t\tcssStyleParts[1].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundSize = cssStyleParts[2].substring(\n\t\t\t\t\t\t\tcssStyleParts[2].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\taria-label={buttonLabel}\n\t\t\t\t\t\t\tclassName={buttonClassName}\n\t\t\t\t\t\t\tdata-type={buttonType}\n\t\t\t\t\t\t\tonClick={this._handleClick}\n\t\t\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\t\t\ttitle={buttonLabel}>\n\t\t\t\t\t\t\t<span className={iconClassName} style={iconStyle} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t_handleClick = () => {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst buttonCommand =\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].command;\n\n\t\t\t\t\tconst buttonOnClick =\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].onClick;\n\n\t\t\t\t\tif (buttonOnClick) {\n\t\t\t\t\t\tbuttonOnClick.call(this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teditor.execCommand(buttonCommand);\n\t\t\t\t\t}\n\n\t\t\t\t\teditor.fire('actionPerformed', this);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tAlloyEditor.Buttons[buttonName] = ButtonBridge;\n\t\t}\n\n\t\treturn ButtonBridge;\n\t}\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('button')) {\n\t\tCKEDITOR.UI_BUTTON = 'button';\n\n\t\tCKEDITOR.plugins.add('button', {});\n\t}\n\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor Button plugin. It takes over the\n\t * responsibility of registering and creating buttons via:\n\t * - editor.ui.addButton(name, definition)\n\t * - editor.ui.add(name, CKEDITOR.UI_BUTTON, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_buttonbridge\n\t * @requires CKEDITOR.plugins.ae_uibridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_buttonbridge', {\n\t\trequires: ['ae_uibridge'],\n\n\t\t/**\n\t\t * Set the add handler for UI_BUTTON to our own. We do this in the init phase to override\n\t\t * the one in the native plugin in case it's present.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\teditor.ui.addButton = function(buttonName, buttonDefinition) {\n\t\t\t\tthis.add(buttonName, CKEDITOR.UI_BUTTON, buttonDefinition);\n\t\t\t};\n\n\t\t\teditor.ui.addHandler(CKEDITOR.UI_BUTTON, {\n\t\t\t\tadd: generateButtonBridge,\n\t\t\t\tcreate(buttonDefinition) {\n\t\t\t\t\tconst buttonName =\n\t\t\t\t\t\t'buttonBridge' + ((Math.random() * 1e9) >>> 0);\n\t\t\t\t\tconst ButtonBridge = generateButtonBridge(\n\t\t\t\t\t\tbuttonName,\n\t\t\t\t\t\tbuttonDefinition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn new ButtonBridge();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonDropdown from '../buttons/button-dropdown.jsx';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_menubuttonbridge')) {\n\tconst MENUBUTTON_DEFS = {};\n\n\t/**\n\t * Generates a MenuButtonBridge React class for a given menuButton definition if it has not been\n\t * already created based on the button name and definition.\n\t *\n\t * @private\n\t * @method generateMenuButtonBridge\n\t * @param {String} menuButtonName The menuButton's name\n\t * @param {Object} menuButtonDefinition The menuButton's definition\n\t * @return {Object} The generated or already existing React MenuButton Class\n\t */\n\tfunction generateMenuButtonBridge(\n\t\tmenuButtonName,\n\t\tmenuButtonDefinition,\n\t\teditor\n\t) {\n\t\tlet MenuButtonBridge = AlloyEditor.Buttons[menuButtonName];\n\n\t\tMENUBUTTON_DEFS[editor.name] = MENUBUTTON_DEFS[editor.name] || {};\n\t\tMENUBUTTON_DEFS[editor.name][menuButtonName] =\n\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName] ||\n\t\t\tmenuButtonDefinition;\n\n\t\tif (!MenuButtonBridge) {\n\t\t\tMenuButtonBridge = class extends React.Component {\n\t\t\t\tstatic contextType = EditorContext;\n\n\t\t\t\tstatic displayName = menuButtonName;\n\n\t\t\t\tstatic key = menuButtonName;\n\n\t\t\t\t// API not yet implemented inside the menubutton\n\t\t\t\t// bridge. By mocking the unsupported method, we prevent\n\t\t\t\t// plugins from crashing if they make use of it.\n\t\t\t\ttoFeature() {}\n\n\t\t\t\trender() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst panelMenuButtonDisplayName =\n\t\t\t\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName].name ||\n\t\t\t\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName].command ||\n\t\t\t\t\t\tmenuButtonName;\n\n\t\t\t\t\tconst buttonClassName = 'ae-button ae-button-bridge';\n\n\t\t\t\t\tconst iconClassName =\n\t\t\t\t\t\t'ae-icon-' + panelMenuButtonDisplayName;\n\n\t\t\t\t\tconst iconStyle = {};\n\n\t\t\t\t\tconst cssStyle = CKEDITOR.skin.getIconStyle(\n\t\t\t\t\t\tpanelMenuButtonDisplayName\n\t\t\t\t\t);\n\n\t\t\t\t\tif (cssStyle) {\n\t\t\t\t\t\tconst cssStyleParts = cssStyle.split(';');\n\n\t\t\t\t\t\ticonStyle.backgroundImage = cssStyleParts[0].substring(\n\t\t\t\t\t\t\tcssStyleParts[0].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundPosition = cssStyleParts[1].substring(\n\t\t\t\t\t\t\tcssStyleParts[1].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundSize = cssStyleParts[2].substring(\n\t\t\t\t\t\t\tcssStyleParts[2].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName]\n\t\t\t\t\t\t\t\t\t\t.label\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tclassName={buttonClassName}\n\t\t\t\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName]\n\t\t\t\t\t\t\t\t\t\t.label\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={iconClassName}\n\t\t\t\t\t\t\t\t\tstyle={iconStyle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{this.props.expanded && (\n\t\t\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\t\t\tonDismiss={this.props.toggleDropdown}>\n\t\t\t\t\t\t\t\t\t{this._getMenuItems()}\n\t\t\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t_getMenuItems() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\t\t\t\tconst items = menuButtonDefinition.onMenu();\n\t\t\t\t\tconst menuItems = Object.keys(items).map(key => {\n\t\t\t\t\t\tconst menuItem = editor.getMenuItem(key);\n\n\t\t\t\t\t\tif (!menuItem) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst menuItemDefinition =\n\t\t\t\t\t\t\tmenuItem.definition || menuItem;\n\t\t\t\t\t\tconst menuItemState = items[key];\n\n\t\t\t\t\t\tconst className =\n\t\t\t\t\t\t\t'ae-toolbar-element ' +\n\t\t\t\t\t\t\t(menuItemState === CKEDITOR.TRISTATE_ON\n\t\t\t\t\t\t\t\t? 'active'\n\t\t\t\t\t\t\t\t: '');\n\t\t\t\t\t\tconst disabled =\n\t\t\t\t\t\t\tmenuItemState === CKEDITOR.TRISTATE_DISABLED;\n\t\t\t\t\t\tconst onClick = function() {\n\t\t\t\t\t\t\tif (menuItemDefinition.command) {\n\t\t\t\t\t\t\t\teditor.execCommand(menuItemDefinition.command);\n\t\t\t\t\t\t\t} else if (menuItemDefinition.onClick) {\n\t\t\t\t\t\t\t\tmenuItemDefinition.onClick.apply(\n\t\t\t\t\t\t\t\t\tmenuItemDefinition\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={menuItem.name} role=\"option\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t\t\tonClick={onClick}>\n\t\t\t\t\t\t\t\t\t{menuItemDefinition.label}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn menuItems;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tAlloyEditor.Buttons[menuButtonName] = MenuButtonBridge;\n\t\t}\n\n\t\treturn MenuButtonBridge;\n\t}\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('menubutton')) {\n\t\tCKEDITOR.UI_MENU_BUTTON = 'menubutton';\n\n\t\tCKEDITOR.plugins.add('menubutton', {});\n\t}\n\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor MenuButton plugin. It takes over the\n\t * responsibility of registering and creating menuButtons via:\n\t * - editor.ui.addMenuButton(name, definition)\n\t * - editor.ui.add(name, CKEDITOR.UI_MENUBUTTON, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_menubuttonbridge\n\t * @requires CKEDITOR.plugins.ae_uibridge\n\t * @requires CKEDITOR.plugins.ae_menubridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_menubuttonbridge', {\n\t\trequires: ['ae_uibridge', 'ae_menubridge'],\n\n\t\t/**\n\t\t * Set the add handler for UI_MENUBUTTON to our own. We do this in the init phase to override\n\t\t * the one in the native plugin in case it's present.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\teditor.ui.addMenuButton = function(\n\t\t\t\tmenuButtonName,\n\t\t\t\tmenuButtonDefinition\n\t\t\t) {\n\t\t\t\tthis.add(\n\t\t\t\t\tmenuButtonName,\n\t\t\t\t\tCKEDITOR.UI_MENUBUTTON,\n\t\t\t\t\tmenuButtonDefinition\n\t\t\t\t);\n\t\t\t};\n\n\t\t\teditor.ui.addHandler(CKEDITOR.UI_MENUBUTTON, {\n\t\t\t\tadd: generateMenuButtonBridge,\n\t\t\t\tcreate(menuButtonDefinition) {\n\t\t\t\t\tconst menuButtonName =\n\t\t\t\t\t\t'buttonBridge' + ((Math.random() * 1e9) >>> 0);\n\t\t\t\t\tconst MenuButtonBridge = generateMenuButtonBridge(\n\t\t\t\t\t\tmenuButtonName,\n\t\t\t\t\t\tmenuButtonDefinition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn new MenuButtonBridge();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_menubridge')) {\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor Menu plugin. It takes over the\n\t * responsibility of adding, removing and retrieving menu groups and items\n\t * - editor.addMenuGroup(name, order)\n\t * - editor.addMenuItem(name, definition)\n\t * - editor.addMenuItems(definitions)\n\t * - editor.getMenuItem(name)\n\t * - editor.removeMenuItem(name)\n\t *\n\t * @class CKEDITOR.plugins.ae_menubridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_menubridge', {\n\t\t/**\n\t\t * Set the add handler for UI_BUTTON to our own. We do this in the init phase to override\n\t\t * the one in the native plugin in case it's present.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\t// Do nothing if the real menu plugin is present\n\t\t\tif (CKEDITOR.plugins.get('menu')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst groups = [];\n\t\t\tconst groupsOrder = (editor._.menuGroups = {});\n\t\t\tconst menuItems = (editor._.menuItems = {});\n\n\t\t\tfor (let i = 0; i < groups.length; i++) {\n\t\t\t\tgroupsOrder[groups[i]] = i + 1;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Registers an item group to the editor context menu in order to make it\n\t\t\t * possible to associate it with menu items later.\n\t\t\t *\n\t\t\t * @method addMenuGroup\n\t\t\t * @param {String} name Specify a group name.\n\t\t\t * @param {Number} [order=100] Define the display sequence of this group\n\t\t\t * inside the menu. A smaller value gets displayed first.\n\t\t\t */\n\t\t\teditor.addMenuGroup = function(name, order) {\n\t\t\t\tgroupsOrder[name] = order || 100;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Adds an item from the specified definition to the editor context menu.\n\t\t\t *\n\t\t\t * @method addMenuItem\n\t\t\t * @param {String} name The menu item name.\n\t\t\t * @param {Object} definition The menu item definition.\n\t\t\t */\n\t\t\teditor.addMenuItem = function(name, definition) {\n\t\t\t\tif (groupsOrder[definition.group]) {\n\t\t\t\t\tmenuItems[name] = {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tdefinition,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Adds one or more items from the specified definition object to the editor context menu.\n\t\t\t *\n\t\t\t * @method addMenuItems\n\t\t\t * @param {Object} definitions Object where keys are used as itemName and corresponding values as definition for a {@link #addMenuItem} call.\n\t\t\t */\n\t\t\teditor.addMenuItems = function(definitions) {\n\t\t\t\tfor (const itemName in definitions) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\tdefinitions,\n\t\t\t\t\t\t\titemName\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.addMenuItem(itemName, definitions[itemName]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Retrieves a particular menu item definition from the editor context menu.\n\t\t\t *\n\t\t\t * @method getMenuItem\n\t\t\t * @param {String} name The name of the desired menu item.\n\t\t\t * @return {Object}\n\t\t\t */\n\t\t\teditor.getMenuItem = function(name) {\n\t\t\t\treturn menuItems[name];\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Removes a particular menu item added before from the editor context menu.\n\t\t\t *\n\t\t\t * @method  removeMenuItem\n\t\t\t * @param {String} name The name of the desired menu item.\n\t\t\t */\n\t\t\teditor.removeMenuItem = function(name) {\n\t\t\t\tdelete menuItems[name];\n\t\t\t};\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonDropdown from '../buttons/button-dropdown.jsx';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_panelmenubuttonbridge')) {\n\tconst PANEL_MENU_DEFS = {};\n\n\t/**\n\t * Generates a PanelMenuButtonBridge React class for a given panelmenubutton definition if it has not been\n\t * already created based on the panelmenubutton name and definition.\n\t *\n\t * @private\n\t * @method generatePanelMenuButtonBridge\n\t * @param {String} panelMenuButtonName The panel button name\n\t * @param {Object} panelMenuButtonDefinition The panel button definition\n\t * @return {Object} The generated or already existing React PanelMenuButton Class\n\t */\n\tconst generatePanelMenuButtonBridge = function(\n\t\tpanelMenuButtonName,\n\t\tpanelMenuButtonDefinition,\n\t\teditor\n\t) {\n\t\tlet PanelMenuButtonBridge = AlloyEditor.Buttons[panelMenuButtonName];\n\n\t\tPANEL_MENU_DEFS[editor.name] = PANEL_MENU_DEFS[editor.name] || {};\n\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName] =\n\t\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName] ||\n\t\t\tpanelMenuButtonDefinition;\n\n\t\tif (!PanelMenuButtonBridge) {\n\t\t\tPanelMenuButtonBridge = class extends React.Component {\n\t\t\t\tstatic contextType = EditorContext;\n\n\t\t\t\tstatic displayName = panelMenuButtonName;\n\n\t\t\t\tstatic key = panelMenuButtonName;\n\n\t\t\t\t// API not yet implemented inside the panel menu button bridge. By mocking the unsupported methods, we\n\t\t\t\t// prevent plugins from crashing if they make use of them.\n\t\t\t\tcreatePanel() {}\n\n\t\t\t\trender() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst panelMenuButtonDisplayName =\n\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName]\n\t\t\t\t\t\t\t.name ||\n\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName]\n\t\t\t\t\t\t\t.command ||\n\t\t\t\t\t\tpanelMenuButtonName;\n\n\t\t\t\t\tconst buttonClassName = 'ae-button ae-button-bridge';\n\n\t\t\t\t\tconst iconClassName =\n\t\t\t\t\t\t'ae-icon-' + panelMenuButtonDisplayName;\n\n\t\t\t\t\tconst iconStyle = {};\n\n\t\t\t\t\tconst cssStyle = CKEDITOR.skin.getIconStyle(\n\t\t\t\t\t\tpanelMenuButtonDisplayName\n\t\t\t\t\t);\n\n\t\t\t\t\tif (cssStyle) {\n\t\t\t\t\t\tconst cssStyleParts = cssStyle.split(';');\n\n\t\t\t\t\t\ticonStyle.backgroundImage = cssStyleParts[0].substring(\n\t\t\t\t\t\t\tcssStyleParts[0].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundPosition = cssStyleParts[1].substring(\n\t\t\t\t\t\t\tcssStyleParts[1].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundSize = cssStyleParts[2].substring(\n\t\t\t\t\t\t\tcssStyleParts[2].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet panel;\n\n\t\t\t\t\tif (this.props.expanded) {\n\t\t\t\t\t\tpanel = this._getPanel();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][\n\t\t\t\t\t\t\t\t\t\tpanelMenuButtonName\n\t\t\t\t\t\t\t\t\t].label\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tclassName={buttonClassName}\n\t\t\t\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][\n\t\t\t\t\t\t\t\t\t\tpanelMenuButtonName\n\t\t\t\t\t\t\t\t\t].label\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={iconClassName}\n\t\t\t\t\t\t\t\t\tstyle={iconStyle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{panel}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t_getPanel() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst panelMenuButtonOnBlock =\n\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName]\n\t\t\t\t\t\t\t.onBlock;\n\n\t\t\t\t\tconst panel = {\n\t\t\t\t\t\thide: this.props.toggleDropdown,\n\t\t\t\t\t\tshow: this.props.toggleDropdown,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst blockElement = new CKEDITOR.dom.element('div');\n\n\t\t\t\t\tconst block = {\n\t\t\t\t\t\telement: blockElement,\n\t\t\t\t\t\tkeys: {},\n\t\t\t\t\t};\n\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif (panelMenuButtonOnBlock) {\n\t\t\t\t\t\tpanelMenuButtonOnBlock.call(this, panel, block);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO\n\t\t\t\t\t// Use block.keys to configure the panel keyboard navigation\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ButtonDropdown onDismiss={this.props.toggleDropdown}>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={blockElement.getAttribute('class')}\n\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t__html: blockElement.getHtml(),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tAlloyEditor.Buttons[panelMenuButtonName] = PanelMenuButtonBridge;\n\t\t}\n\n\t\treturn PanelMenuButtonBridge;\n\t};\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('panelmenubutton')) {\n\t\tCKEDITOR.UI_PANELBUTTON = 'panelmenubutton';\n\n\t\tCKEDITOR.plugins.add('panelmenubutton', {});\n\t}\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('panelbutton')) {\n\t\tCKEDITOR.UI_PANELBUTTON = 'panelbutton';\n\n\t\tCKEDITOR.plugins.add('panelbutton', {});\n\t}\n\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor PanelButton plugin. It takes over the\n\t * responsibility of registering and creating buttons via:\n\t * - editor.ui.addPanelMenuButton(name, definition)\n\t * - editor.ui.add(name, CKEDITOR.UI_PANELBUTTON, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_panelmenubuttonbridge\n\t * @requires CKEDITOR.plugins.ae_uibridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_panelmenubuttonbridge', {\n\t\trequires: ['ae_uibridge'],\n\n\t\t/**\n\t\t * Set the add handler for UI_PANELBUTTON to our own. We do this in the init phase to override\n\t\t * the one in the native plugin in case it's present\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\teditor.ui.addPanelMenuButton = function(\n\t\t\t\tpanelMenuButtonName,\n\t\t\t\tpanelMenuButtonDefinition\n\t\t\t) {\n\t\t\t\tthis.add(\n\t\t\t\t\tpanelMenuButtonName,\n\t\t\t\t\tCKEDITOR.UI_PANELBUTTON,\n\t\t\t\t\tpanelMenuButtonDefinition\n\t\t\t\t);\n\t\t\t};\n\n\t\t\teditor.ui.addHandler(CKEDITOR.UI_PANELBUTTON, {\n\t\t\t\tadd: generatePanelMenuButtonBridge,\n\t\t\t\tcreate(panelMenuButtonDefinition) {\n\t\t\t\t\tconst panelMenuButtonName =\n\t\t\t\t\t\t'panelMenuButtonBridge' + ((Math.random() * 1e9) >>> 0);\n\t\t\t\t\tconst PanelMenuButtonBridge = generatePanelMenuButtonBridge(\n\t\t\t\t\t\tpanelMenuButtonName,\n\t\t\t\t\t\tpanelMenuButtonDefinition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn new PanelMenuButtonBridge();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonDropdown from '../buttons/button-dropdown.jsx';\nimport ButtonIcon from '../buttons/button-icon.jsx';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_richcombobridge')) {\n\tconst RICH_COMBO_DEFS = {};\n\n\t/**\n\t * Generates a RichComboBridge React class for a given richcombo definition if it has not been\n\t * already created based on the richcombo name and definition.\n\t *\n\t * @method generateRichComboBridge\n\t * @private\n\t * @param {String} richComboName The rich combo name\n\t * @param {Object} richComboDefinition The rich combo definition\n\t * @return {Object} The generated or already existing React RichCombo Class\n\t */\n\tconst generateRichComboBridge = function(\n\t\trichComboName,\n\t\trichComboDefinition,\n\t\teditor\n\t) {\n\t\tlet RichComboBridge = AlloyEditor.Buttons[richComboName];\n\n\t\tRICH_COMBO_DEFS[editor.name] = RICH_COMBO_DEFS[editor.name] || {};\n\t\tRICH_COMBO_DEFS[editor.name][richComboName] =\n\t\t\tRICH_COMBO_DEFS[editor.name][richComboName] || richComboDefinition;\n\t\tRICH_COMBO_DEFS[editor.name][richComboName].currentValue = undefined;\n\n\t\tif (!RichComboBridge) {\n\t\t\tRichComboBridge = class extends React.Component {\n\t\t\t\tstatic contextType = EditorContext;\n\n\t\t\t\tstatic displayName = richComboName;\n\n\t\t\t\tstatic key = richComboName;\n\n\t\t\t\tconstructor(props) {\n\t\t\t\t\tsuper(props);\n\t\t\t\t\tthis.state = {\n\t\t\t\t\t\tvalue:\n\t\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][richComboName]\n\t\t\t\t\t\t\t\t.currentValue,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// API not yet implemented inside the richcombo bridge. By mocking the unsupported methods, we\n\t\t\t\t// prevent plugins from crashing if they make use of them.\n\t\t\t\tcommit() {}\n\t\t\t\tcreatePanel() {}\n\t\t\t\tdisable() {}\n\t\t\t\tenable() {}\n\t\t\t\tgetState() {}\n\t\t\t\thideGroup() {}\n\t\t\t\thideItem() {}\n\t\t\t\tmark() {}\n\t\t\t\tshowAll() {}\n\t\t\t\tstartGroup() {}\n\t\t\t\tunmarkAll() {}\n\n\t\t\t\tadd(value, preview, title) {\n\t\t\t\t\tthis._items.push({\n\t\t\t\t\t\tpreview,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tcomponentWillMount() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst editorCombo =\n\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][richComboName];\n\n\t\t\t\t\tthis._items = [];\n\n\t\t\t\t\tthis.setValue = this._setValue;\n\n\t\t\t\t\tif (editorCombo.init) {\n\t\t\t\t\t\teditorCombo.init.call(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (editorCombo.onRender) {\n\t\t\t\t\t\teditorCombo.onRender.call(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcomponentWillUnmount() {\n\t\t\t\t\tthis._cacheValue(this.state.value);\n\n\t\t\t\t\tthis.setValue = this._cacheValue;\n\t\t\t\t}\n\n\t\t\t\tgetValue() {\n\t\t\t\t\treturn this.state.value;\n\t\t\t\t}\n\n\t\t\t\trender() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst richComboLabel =\n\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][richComboName]\n\t\t\t\t\t\t\t.currentValue || richComboDefinition.label;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"ae-container-dropdown ae-has-dropdown\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\t\t\t\taria-label={richComboLabel}\n\t\t\t\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\t\t\t\ttitle={richComboLabel}>\n\t\t\t\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t\t\t\t<span className=\"ae-container-dropdown-selected-item\">\n\t\t\t\t\t\t\t\t\t\t{richComboLabel}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{this.props.expanded && (\n\t\t\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\t\t\tonDismiss={this.props.toggleDropdown}>\n\t\t\t\t\t\t\t\t\t{this._getItems()}\n\t\t\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t_cacheValue(value) {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tRICH_COMBO_DEFS[editor.name][\n\t\t\t\t\t\trichComboName\n\t\t\t\t\t].currentValue = value;\n\t\t\t\t}\n\n\t\t\t\t_getItems() {\n\t\t\t\t\tconst richCombo = this;\n\n\t\t\t\t\tconst items = this._items.map(item => {\n\t\t\t\t\t\tconst className =\n\t\t\t\t\t\t\t'ae-toolbar-element ' +\n\t\t\t\t\t\t\t(item.value === this.state.value ? 'active' : '');\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={item.title} role=\"option\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t__html: item.preview,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tdata-value={item.value}\n\t\t\t\t\t\t\t\t\tonClick={richCombo._onClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn items;\n\t\t\t\t}\n\n\t\t\t\t_onClick = event => {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst editorCombo =\n\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][richComboName];\n\n\t\t\t\t\tif (editorCombo.onClick) {\n\t\t\t\t\t\tconst newValue = event.currentTarget.getAttribute(\n\t\t\t\t\t\t\t'data-value'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\teditorCombo.onClick.call(this, newValue);\n\n\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][\n\t\t\t\t\t\t\trichComboName\n\t\t\t\t\t\t].currentValue = newValue;\n\n\t\t\t\t\t\teditor.fire('actionPerformed', this);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t_setValue(value) {\n\t\t\t\t\tthis._cacheValue(value);\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tAlloyEditor.Buttons[richComboName] = RichComboBridge;\n\t\t}\n\n\t\treturn RichComboBridge;\n\t};\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('richcombo')) {\n\t\tCKEDITOR.UI_RICHCOMBO = 'richcombo';\n\n\t\tCKEDITOR.plugins.add('richcombo', {});\n\t}\n\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor RichCombo plugin. It takes over the\n\t * responsibility of registering and creating rich combo elements via:\n\t * - editor.ui.addRichCombo(name, definition)\n\t * - editor.ui.add(name, CKEDITOR.UI_RICHCOMBO, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_richcombobridge\n\t * @requires CKEDITOR.plugins.ae_uibridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_richcombobridge', {\n\t\trequires: ['ae_uibridge'],\n\n\t\t/**\n\t\t * Set the add handler for UI_RICHCOMBO to our own. We do this in the init phase to override\n\t\t * the one in the original plugin in case it's present\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\teditor.ui.addRichCombo = function(\n\t\t\t\trichComboName,\n\t\t\t\trichComboDefinition\n\t\t\t) {\n\t\t\t\tthis.add(\n\t\t\t\t\trichComboName,\n\t\t\t\t\tCKEDITOR.UI_RICHCOMBO,\n\t\t\t\t\trichComboDefinition\n\t\t\t\t);\n\t\t\t};\n\n\t\t\teditor.ui.addHandler(CKEDITOR.UI_RICHCOMBO, {\n\t\t\t\tadd: generateRichComboBridge,\n\t\t\t\tcreate(richComboDefinition) {\n\t\t\t\t\tconst richComboName =\n\t\t\t\t\t\t'richComboBridge' + ((Math.random() * 1e9) >>> 0);\n\t\t\t\t\tconst RichComboBridge = generateRichComboBridge(\n\t\t\t\t\t\trichComboName,\n\t\t\t\t\t\trichComboDefinition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn new RichComboBridge();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_uibridge')) {\n\t/**\n\t * CKEditor plugin that extends CKEDITOR.ui.add function so an add handler can be specified\n\t * on top of the original ones. It bridges the calls to add components via:\n\t * - editor.ui.add(name, type, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_uibridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_uibridge', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t *\n\t\t * @method beforeInit\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\tconst originalUIAddFn = editor.ui.add;\n\n\t\t\teditor.ui.add = function(name, type, definition) {\n\t\t\t\toriginalUIAddFn.call(this, name, type, definition);\n\n\t\t\t\tconst typeHandler = this._.handlers[type];\n\n\t\t\t\tif (typeHandler && typeHandler.add) {\n\t\t\t\t\ttypeHandler.add(name, definition, editor);\n\t\t\t\t\tAlloyEditor.registerBridgeButton(\n\t\t\t\t\t\tname,\n\t\t\t\t\t\teditor.__processingPlugin__.plugin.name\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport removeImageCommand from './remove-image';\n\nexport {removeImageCommand};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst removeImageCommand = {\n\texec: editor => {\n\t\tconst selection = editor.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst ranges = selection.getRanges();\n\t\t\tconst startContainer = ranges[0].startContainer;\n\n\t\t\tconst nextRange = new CKEDITOR.dom.range(startContainer);\n\t\t\tnextRange.setStart(startContainer, 0);\n\t\t\tnextRange.setEnd(startContainer, 0);\n\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif (selectedElement && selectedElement.getName() === 'img') {\n\t\t\t\tconst native = selection.getNative();\n\t\t\t\tif (native) {\n\t\t\t\t\tnative.removeAllRanges();\n\t\t\t\t}\n\n\t\t\t\tselection.selectRanges([nextRange]);\n\n\t\t\t\tselectedElement.remove();\n\t\t\t}\n\t\t}\n\t},\n};\n\nexport default removeImageCommand;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../adapter/editor-context';\nimport WidgetExclusive from './base/widget-exclusive';\nimport WidgetFocusManager from './base/widget-focus-manager';\n\n/**\n * The main editor UI class manages a hierarchy of widgets (toolbars and buttons).\n *\n * @class UI\n * @uses WidgetExclusive\n * @uses WidgetFocusManager\n */\nclass UI extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcircular: true,\n\t\tdescendants: '[class^=ae-toolbar-]',\n\t\teventsDelay: 0,\n\t\tkeys: {\n\t\t\tnext: 9,\n\t\t},\n\t};\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Localized messages for live aria updates. Should include the following messages:\n\t\t * - noToolbar: Notification for no available toolbar in the editor.\n\t\t * - oneToolbar: Notification for just one available toolbar in the editor.\n\t\t * - manyToolbars: Notification for more than one available toolbar in the editor.\n\t\t *\n\t\t * @instance\n\t\t * @memberof UI\n\t\t * @property {Object} ariaUpdates\n\t\t */\n\t\tariaUpdates: PropTypes.object,\n\n\t\t/**\n\t\t * The delay (ms), after which key or mouse events will be processed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof UI\n\t\t * @property {Number} eventsDelay\n\t\t */\n\t\teventsDelay: PropTypes.number,\n\n\t\t/**\n\t\t * The toolbars configuration for this editor instance\n\t\t *\n\t\t * @instance\n\t\t * @memberof UI\n\t\t * @property {Object} toolbars\n\t\t */\n\t\ttoolbars: PropTypes.object.isRequired,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\thidden: false,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\teditor.on('editorInteraction', this._onEditorInteraction, this);\n\t\teditor.on('actionPerformed', this._onActionPerformed, this);\n\t\teditor.on('key', this._onEditorKey, this);\n\n\t\t// Set up events for hiding the UI when user stops interacting with the editor.\n\t\t// This may happen when he just clicks outside of the editor. However,\n\t\t// this does not include a situation when he clicks on some button, part of\n\t\t// editor's UI.\n\n\t\t// It is not easy to debounce _setUIHidden on mousedown, because if we\n\t\t// debounce it, when the handler is being invoked, the target might be no more part\n\t\t// of the editor's UI - onActionPerformed causes re-render.\n\t\tthis._mousedownListener = event => {\n\t\t\tthis._setUIHidden(event.target);\n\t\t};\n\n\t\tthis._keyDownListener = CKEDITOR.tools.debounce(\n\t\t\t_event => {\n\t\t\t\tthis._setUIHidden(document.activeElement);\n\t\t\t},\n\t\t\tthis.props.eventsDelay,\n\t\t\tthis\n\t\t);\n\n\t\tdocument.addEventListener('mousedown', this._mousedownListener);\n\t\tdocument.addEventListener('keydown', this._keyDownListener);\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t * Fires `ariaUpdate` event passing ARIA related messages.\n\t * Fires `editorUpdate` event passing the previous and current properties and state.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method componentDidUpdate\n\t */\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tif (domNode) {\n\t\t\teditor.fire('ariaUpdate', {\n\t\t\t\tmessage: this._getAvailableToolbarsMessage(domNode),\n\t\t\t});\n\t\t}\n\n\t\teditor.fire('editorUpdate', {\n\t\t\tprevProps,\n\t\t\tprevState,\n\t\t\tprops: this.props,\n\t\t\tstate: this.state,\n\t\t});\n\t}\n\n\t_getAriaUpdateTemplate(ariaUpdate) {\n\t\tif (!this._ariaUpdateTemplates) {\n\t\t\tthis._ariaUpdateTemplates = {};\n\t\t}\n\n\t\tif (!this._ariaUpdateTemplates[ariaUpdate]) {\n\t\t\tthis._ariaUpdateTemplates[ariaUpdate] = new CKEDITOR.template(\n\t\t\t\tthis._getAriaUpdates()[ariaUpdate]\n\t\t\t);\n\t\t}\n\n\t\treturn this._ariaUpdateTemplates[ariaUpdate];\n\t}\n\n\t/**\n\t * Returns the templates for ARIA messages.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _getAriaUpdates\n\t * @return {Object} ARIA relates messages. Default:\n\t * {\n\t *      noToolbar: AlloyEditor.Strings.ariaUpdateNoToolbar,\n\t *      oneToolbar: AlloyEditor.Strings.ariaUpdateOneToolbar,\n\t *      manyToolbars: AlloyEditor.Strings.ariaUpdateManyToolbars\n\t *  }\n\t */\n\t_getAriaUpdates() {\n\t\treturn (\n\t\t\tthis.props.ariaUpdates || {\n\t\t\t\tnoToolbar: AlloyEditor.Strings.ariaUpdateNoToolbar,\n\t\t\t\toneToolbar: AlloyEditor.Strings.ariaUpdateOneToolbar,\n\t\t\t\tmanyToolbars: AlloyEditor.Strings.ariaUpdateManyToolbars,\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Returns an ARIA message which represents the number of currently available toolbars.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method _getAvailableToolbarsMessage\n\t * @protected\n\t * @param {CKEDITOR.dom.element} domNode The DOM node from which the available toolbars will be retrieved.\n\t * @return {String} The ARIA message for the number of available toolbars\n\t */\n\t_getAvailableToolbarsMessage(domNode) {\n\t\tconst toolbarsNodeList = domNode.querySelectorAll('[role=\"toolbar\"]');\n\n\t\tif (!toolbarsNodeList.length) {\n\t\t\treturn this._getAriaUpdates().noToolbar;\n\t\t} else {\n\t\t\tconst toolbarNames = Array.prototype.slice\n\t\t\t\t.call(toolbarsNodeList)\n\t\t\t\t.map(toolbar => {\n\t\t\t\t\treturn toolbar.getAttribute('aria-label');\n\t\t\t\t});\n\n\t\t\tconst ariaUpdate =\n\t\t\t\ttoolbarNames.length === 1 ? 'oneToolbar' : 'manyToolbars';\n\n\t\t\treturn this._getAriaUpdateTemplate(ariaUpdate).output({\n\t\t\t\ttoolbars: toolbarNames\n\t\t\t\t\t.join(',')\n\t\t\t\t\t.replace(/,([^,]*)$/, ' and ' + '$1'),\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tif (this._mousedownListener) {\n\t\t\tdocument.removeEventListener('mousedown', this._mousedownListener);\n\t\t}\n\n\t\tif (this._keyDownListener) {\n\t\t\tthis._keyDownListener.detach();\n\t\t\tdocument.removeEventListener('keydown', this._keyDownListener);\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the editor. This may include several toolbars and buttons.\n\t * The editor's UI also takes care of rendering the items in exclusive mode.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.state.hidden) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet toolbars = Object.keys(this.props.toolbars).map(toolbar => {\n\t\t\treturn AlloyEditor.Toolbars[toolbar] || window[toolbar];\n\t\t});\n\n\t\ttoolbars = this.filterExclusive(toolbars).map(toolbar => {\n\t\t\tconst props = this.mergeExclusiveProps(\n\t\t\t\t{\n\t\t\t\t\tconfig: this.props.toolbars[toolbar.key],\n\t\t\t\t\teditor: this.context.editor,\n\t\t\t\t\teditorEvent: this.state.editorEvent,\n\t\t\t\t\tkey: toolbar.key,\n\t\t\t\t\tonDismiss: this._onDismissToolbarFocus,\n\t\t\t\t\tselectionData: this.state.selectionData,\n\t\t\t\t},\n\t\t\t\ttoolbar.key\n\t\t\t);\n\n\t\t\treturn React.createElement(toolbar, props);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"ae-toolbars\" onKeyDown={this.handleKey}>\n\t\t\t\t{toolbars}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Listener to the editor's `actionPerformed` event. Sets state and redraws the UI of the editor.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _onActionPerformed\n\t * @param {SynteticEvent} event The provided event\n\t */\n\t_onActionPerformed(_event) {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\teditor.focus();\n\n\t\tthis.setState({\n\t\t\titemExclusive: null,\n\t\t\tselectionData: editor.getSelectionData(),\n\t\t});\n\t}\n\n\t/**\n\t * Executed when a dismiss key is pressed over a toolbar to return the focus to the editor.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _onDismissToolbarFocus\n\t */\n\t_onDismissToolbarFocus = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\teditor.focus();\n\t};\n\n\t/**\n\t * Listener to the editor's `userInteraction` event. Retrieves the data about the user selection and\n\t * provides it via component's state property.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _onEditorInteraction\n\t * @param {SynteticEvent} event The provided event\n\t */\n\t_onEditorInteraction(event) {\n\t\tthis.setState({\n\t\t\teditorEvent: event,\n\t\t\thidden: false,\n\t\t\titemExclusive: null,\n\t\t\tselectionData: event.data.selectionData,\n\t\t});\n\t}\n\n\t/**\n\t * Focuses on the active toolbar when the combination ALT+F10 is pressed inside the editor.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _onEditorKey\n\t */\n\t_onEditorKey(event) {\n\t\tconst nativeEvent = event.data.domEvent.$;\n\n\t\tif (nativeEvent.altKey && nativeEvent.keyCode === 121) {\n\t\t\tthis.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the target with which the user interacted is part of editor's UI or it is\n\t * the editable area. If none of these, sets the state of editor's UI to be hidden.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _setUIHidden\n\t * @param {DOMElement} target The DOM element with which user interacted lastly.\n\t */\n\t_setUIHidden(target) {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tif (domNode) {\n\t\t\tconst editable = this.context.editor.get('nativeEditor').editable();\n\t\t\tconst parentNode = target.parentNode;\n\t\t\tconst targetNode = new CKEDITOR.dom.node(target);\n\n\t\t\tif (!editable) {\n\t\t\t\tthis.setState({\n\t\t\t\t\thidden: true,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet res =\n\t\t\t\t\teditable.$ === target ||\n\t\t\t\t\teditable.contains(targetNode) ||\n\t\t\t\t\tnew CKEDITOR.dom.element(domNode).contains(targetNode);\n\n\t\t\t\tif (parentNode) {\n\t\t\t\t\tres = res || parentNode.id === 'ckimgrsz';\n\t\t\t\t}\n\n\t\t\t\tif (!res) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\thidden: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Fired when component updates and when it is rendered in the DOM.\n * The payload consists from a `message` property containing the ARIA message.\n *\n * @event ariaUpdate\n */\n\n/**\n * Fired when component updates. The payload consists from an object with the following\n * properties:\n * - prevProps - The previous properties of the component\n * - prevState - The previous state of the component\n * - props - The current properties of the component\n * - state - The current state of the component\n *\n * @event ariaUpdate\n */\n\nexport default WidgetExclusive(WidgetFocusManager(UI));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Attribute from './attribute';\nimport Lang from './lang';\nimport extend from './oop';\n\n/**\n * Quick and dirty impl of Base class.\n *\n * @class Base\n * @constructor\n */\nfunction Base(config) {\n\tBase.superclass.constructor.call(this, config);\n\n\tthis.init(config);\n}\n\nextend(Base, Attribute, {\n\t/**\n\t * Calls the `initializer` method of each class which extends Base starting from the parent to the child.\n\t * Will pass the configuration object to each initializer method.\n\t *\n\t * @instance\n\t * @memberof Base\n\t * @method init\n\t * @param {Object} config Configuration object\n\t */\n\tinit(config) {\n\t\tthis._callChain('initializer', config);\n\t},\n\n\t/**\n\t * Calls the `destructor` method of each class which extends Base starting from the parent to the child.\n\t *\n\t * @instance\n\t * @memberof Base\n\t * @method destroy\n\t */\n\tdestroy() {\n\t\tthis._callChain('destructor');\n\t},\n\n\t/**\n\t * Calls a method of each class, which is being present in the hierarchy starting from parent to the child.\n\t *\n\t * @instance\n\t * @memberof Base\n\t * @method _callChain\n\t * @param {Object|Array} args The arguments with which the method should be invoked\n\t * @param {String} wat  The method, which should be invoked\n\t * @protected\n\t */\n\t_callChain(wat, args) {\n\t\tlet arr = [];\n\n\t\tlet ctor = this.constructor;\n\n\t\twhile (ctor) {\n\t\t\tif (Lang.isFunction(ctor.prototype[wat])) {\n\t\t\t\tarr.push(ctor.prototype[wat]);\n\t\t\t}\n\n\t\t\tctor = ctor.superclass ? ctor.superclass.constructor : null;\n\t\t}\n\n\t\tarr = arr.reverse();\n\n\t\targs = Lang.isArray(args) ? args : [args];\n\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tconst item = arr[i];\n\n\t\t\titem.apply(this, args);\n\t\t}\n\t},\n});\n\nexport default Base;\n"],"sourceRoot":""}